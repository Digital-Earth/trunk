/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Attribute_Map : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Attribute_Map(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Attribute_Map obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Attribute_Map() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_Attribute_Map(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public Attribute_Map() : this(pyxlibPINVOKE.new_Attribute_Map__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Attribute_Map(Attribute_Map arg0) : this(pyxlibPINVOKE.new_Attribute_Map__SWIG_1(Attribute_Map.getCPtr(arg0)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint size() {
    uint ret = pyxlibPINVOKE.Attribute_Map_size(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool empty() {
    bool ret = pyxlibPINVOKE.Attribute_Map_empty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void clear() {
    pyxlibPINVOKE.Attribute_Map_clear(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_std__string get(string key) {
    SWIGTYPE_p_std__string ret = new SWIGTYPE_p_std__string(pyxlibPINVOKE.Attribute_Map_get(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(key)), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set(string key, string x) {
    pyxlibPINVOKE.Attribute_Map_set(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(key), pyxlibPINVOKE.UnmanagedString.Create(x));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void del(string key) {
    pyxlibPINVOKE.Attribute_Map_del(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(key));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool has_key(string key) {
    bool ret = pyxlibPINVOKE.Attribute_Map_has_key(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(key));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
