/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CommandManagerEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public CommandManagerEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(CommandManagerEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CommandManagerEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_CommandManagerEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public CommandManagerEvent_SPtr() : this(pyxlibPINVOKE.new_CommandManagerEvent_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CommandManagerEvent_SPtr(CommandManagerEvent p, bool add_ref) : this(pyxlibPINVOKE.new_CommandManagerEvent_SPtr__SWIG_1(CommandManagerEvent.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CommandManagerEvent_SPtr(CommandManagerEvent p) : this(pyxlibPINVOKE.new_CommandManagerEvent_SPtr__SWIG_2(CommandManagerEvent.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CommandManagerEvent_SPtr(CommandManagerEvent_SPtr rhs) : this(pyxlibPINVOKE.new_CommandManagerEvent_SPtr__SWIG_3(CommandManagerEvent_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.CommandManagerEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(CommandManagerEvent rhs) {
    pyxlibPINVOKE.CommandManagerEvent_SPtr_reset__SWIG_1(swigCPtr, CommandManagerEvent.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public CommandManagerEvent get() {
    IntPtr cPtr = pyxlibPINVOKE.CommandManagerEvent_SPtr_get(swigCPtr);
    CommandManagerEvent ret = (cPtr == IntPtr.Zero) ? null : new CommandManagerEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CommandManagerEvent __ref__() {
    CommandManagerEvent ret = new CommandManagerEvent(pyxlibPINVOKE.CommandManagerEvent_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CommandManagerEvent __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.CommandManagerEvent_SPtr___deref__(swigCPtr);
    CommandManagerEvent ret = (cPtr == IntPtr.Zero) ? null : new CommandManagerEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(CommandManagerEvent_SPtr rhs) {
    pyxlibPINVOKE.CommandManagerEvent_SPtr_swap(swigCPtr, CommandManagerEvent_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.CommandManagerEvent_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.CommandManagerEvent_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CommandManagerEvent_SPtr create(string strErrorMsg) {
    CommandManagerEvent_SPtr ret = new CommandManagerEvent_SPtr(pyxlibPINVOKE.CommandManagerEvent_SPtr_create(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strErrorMsg)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getErrorMsg() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.CommandManagerEvent_SPtr_getErrorMsg(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public CommandManagerEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = pyxlibPINVOKE.CommandManagerEvent_SPtr_dynamic_cast(swigCPtr, NotifierEvent.getCPtr(pSource));
    CommandManagerEvent ret = (cPtr == IntPtr.Zero) ? null : new CommandManagerEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
