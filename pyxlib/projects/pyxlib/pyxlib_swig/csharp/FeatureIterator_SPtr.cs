/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class FeatureIterator_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public FeatureIterator_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(FeatureIterator_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FeatureIterator_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_FeatureIterator_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public FeatureIterator_SPtr() : this(pyxlibPINVOKE.new_FeatureIterator_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public FeatureIterator_SPtr(SWIGTYPE_p_FeatureIterator p, bool add_ref) : this(pyxlibPINVOKE.new_FeatureIterator_SPtr__SWIG_1(SWIGTYPE_p_FeatureIterator.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public FeatureIterator_SPtr(SWIGTYPE_p_FeatureIterator p) : this(pyxlibPINVOKE.new_FeatureIterator_SPtr__SWIG_2(SWIGTYPE_p_FeatureIterator.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public FeatureIterator_SPtr(FeatureIterator_SPtr rhs) : this(pyxlibPINVOKE.new_FeatureIterator_SPtr__SWIG_3(FeatureIterator_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.FeatureIterator_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(SWIGTYPE_p_FeatureIterator rhs) {
    pyxlibPINVOKE.FeatureIterator_SPtr_reset__SWIG_1(swigCPtr, SWIGTYPE_p_FeatureIterator.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_FeatureIterator get() {
    IntPtr cPtr = pyxlibPINVOKE.FeatureIterator_SPtr_get(swigCPtr);
    SWIGTYPE_p_FeatureIterator ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_FeatureIterator(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FeatureIterator __ref__() {
    SWIGTYPE_p_FeatureIterator ret = new SWIGTYPE_p_FeatureIterator(pyxlibPINVOKE.FeatureIterator_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FeatureIterator __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.FeatureIterator_SPtr___deref__(swigCPtr);
    SWIGTYPE_p_FeatureIterator ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_FeatureIterator(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(FeatureIterator_SPtr rhs) {
    pyxlibPINVOKE.FeatureIterator_SPtr_swap(swigCPtr, FeatureIterator_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.FeatureIterator_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.FeatureIterator_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool end() {
    bool ret = pyxlibPINVOKE.FeatureIterator_SPtr_end(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void next() {
    pyxlibPINVOKE.FeatureIterator_SPtr_next(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IFeature_SPtr getFeature() {
    IFeature_SPtr ret = new IFeature_SPtr(pyxlibPINVOKE.FeatureIterator_SPtr_getFeature(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
