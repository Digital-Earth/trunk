/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class HttpRequestProvider_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HttpRequestProvider_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HttpRequestProvider_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HttpRequestProvider_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_HttpRequestProvider_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public HttpRequestProvider_SPtr() : this(pyxlibPINVOKE.new_HttpRequestProvider_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public HttpRequestProvider_SPtr(HttpRequestProvider p, bool add_ref) : this(pyxlibPINVOKE.new_HttpRequestProvider_SPtr__SWIG_1(HttpRequestProvider.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public HttpRequestProvider_SPtr(HttpRequestProvider p) : this(pyxlibPINVOKE.new_HttpRequestProvider_SPtr__SWIG_2(HttpRequestProvider.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public HttpRequestProvider_SPtr(HttpRequestProvider_SPtr rhs) : this(pyxlibPINVOKE.new_HttpRequestProvider_SPtr__SWIG_3(HttpRequestProvider_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(HttpRequestProvider rhs) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_reset__SWIG_1(swigCPtr, HttpRequestProvider.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public HttpRequestProvider get() {
    IntPtr cPtr = pyxlibPINVOKE.HttpRequestProvider_SPtr_get(swigCPtr);
    HttpRequestProvider ret = (cPtr == IntPtr.Zero) ? null : new HttpRequestProvider(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public HttpRequestProvider __ref__() {
    HttpRequestProvider ret = new HttpRequestProvider(pyxlibPINVOKE.HttpRequestProvider_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public HttpRequestProvider __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.HttpRequestProvider_SPtr___deref__(swigCPtr);
    HttpRequestProvider ret = (cPtr == IntPtr.Zero) ? null : new HttpRequestProvider(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(HttpRequestProvider_SPtr rhs) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_swap(swigCPtr, HttpRequestProvider_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int createRequest(string url, string method) {
    int ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_createRequest__SWIG_0(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(url), pyxlibPINVOKE.UnmanagedString.Create(method));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int createRequest(string url, string method, IUserCredentials_SPtr credentials) {
    int ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_createRequest__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(url), pyxlibPINVOKE.UnmanagedString.Create(method), IUserCredentials_SPtr.getCPtr(credentials));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void destroyRequest(int requestHandle) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_destroyRequest(swigCPtr, requestHandle);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getResponse(int requestHandle) {
    bool ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_getResponse(swigCPtr, requestHandle);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getResponseBody(int requestHandle) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.HttpRequestProvider_SPtr_getResponseBody(swigCPtr, requestHandle));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public bool downloadResponse(int requestHandle, string filename) {
    bool ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_downloadResponse(swigCPtr, requestHandle, pyxlibPINVOKE.UnmanagedString.Create(filename));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addRequestBody(int requestHandle, string body) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_addRequestBody(swigCPtr, requestHandle, pyxlibPINVOKE.UnmanagedString.Create(body));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addRequestHeader(int requestHandle, string headerName, string headerValue) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_addRequestHeader(swigCPtr, requestHandle, pyxlibPINVOKE.UnmanagedString.Create(headerName), pyxlibPINVOKE.UnmanagedString.Create(headerValue));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int release() {
    int ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.HttpRequestProvider_SPtr_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public HttpRequestProvider_SPtr getHttpRequestProvider() {
    HttpRequestProvider_SPtr ret = new HttpRequestProvider_SPtr(pyxlibPINVOKE.HttpRequestProvider_SPtr_getHttpRequestProvider(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setHttpRequestProvider(HttpRequestProvider_SPtr spProvider) {
    pyxlibPINVOKE.HttpRequestProvider_SPtr_setHttpRequestProvider(swigCPtr, HttpRequestProvider_SPtr.getCPtr(spProvider));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
