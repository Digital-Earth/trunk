/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ICoordConverterFromSrsFactory_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ICoordConverterFromSrsFactory_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ICoordConverterFromSrsFactory_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ICoordConverterFromSrsFactory_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ICoordConverterFromSrsFactory_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ICoordConverterFromSrsFactory_SPtr() : this(pyxlibPINVOKE.new_ICoordConverterFromSrsFactory_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverterFromSrsFactory_SPtr(ICoordConverterFromSrsFactory p, bool add_ref) : this(pyxlibPINVOKE.new_ICoordConverterFromSrsFactory_SPtr__SWIG_1(ICoordConverterFromSrsFactory.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverterFromSrsFactory_SPtr(ICoordConverterFromSrsFactory p) : this(pyxlibPINVOKE.new_ICoordConverterFromSrsFactory_SPtr__SWIG_2(ICoordConverterFromSrsFactory.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverterFromSrsFactory_SPtr(ICoordConverterFromSrsFactory_SPtr rhs) : this(pyxlibPINVOKE.new_ICoordConverterFromSrsFactory_SPtr__SWIG_3(ICoordConverterFromSrsFactory_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ICoordConverterFromSrsFactory rhs) {
    pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_reset__SWIG_1(swigCPtr, ICoordConverterFromSrsFactory.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverterFromSrsFactory get() {
    IntPtr cPtr = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_get(swigCPtr);
    ICoordConverterFromSrsFactory ret = (cPtr == IntPtr.Zero) ? null : new ICoordConverterFromSrsFactory(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverterFromSrsFactory __ref__() {
    ICoordConverterFromSrsFactory ret = new ICoordConverterFromSrsFactory(pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverterFromSrsFactory __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr___deref__(swigCPtr);
    ICoordConverterFromSrsFactory ret = (cPtr == IntPtr.Zero) ? null : new ICoordConverterFromSrsFactory(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ICoordConverterFromSrsFactory_SPtr rhs) {
    pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_swap(swigCPtr, ICoordConverterFromSrsFactory_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_iid_get(swigCPtr);
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ICoordConverter_SPtr createFromSRS(PYXSpatialReferenceSystem_SPtr srs) {
    ICoordConverter_SPtr ret = new ICoordConverter_SPtr(pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_createFromSRS(swigCPtr, PYXSpatialReferenceSystem_SPtr.getCPtr(srs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverter_SPtr createFromWKT(string wellKnownText) {
    ICoordConverter_SPtr ret = new ICoordConverter_SPtr(pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_createFromWKT(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(wellKnownText)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXSpatialReferenceSystem_SPtr convertToSRS(ICoordConverter_SPtr coordConverter) {
    PYXSpatialReferenceSystem_SPtr ret = new PYXSpatialReferenceSystem_SPtr(pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_convertToSRS(swigCPtr, ICoordConverter_SPtr.getCPtr(coordConverter)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint AddRef() {
    uint ret = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_AddRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Release() {
    uint ret = pyxlibPINVOKE.ICoordConverterFromSrsFactory_SPtr_Release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
