/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ICoverage : IFeatureCollection {
  private HandleRef swigCPtr;

  public ICoverage(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.ICoverageUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ICoverage obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ICoverage() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ICoverage(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.ICoverage_iid_get();
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public virtual PYXTableDefinition_CSPtr getCoverageDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.ICoverage_getCoverageDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXValue getCoverageValue(PYXIcosIndex index, int nFieldIndex) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.ICoverage_getCoverageValue__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index), nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXValue getCoverageValue(PYXIcosIndex index) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.ICoverage_getCoverageValue__SWIG_1(swigCPtr, PYXIcosIndex.getCPtr(index)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXValueTile_SPtr getFieldTile(PYXIcosIndex index, int nRes, int nFieldIndex) {
    PYXValueTile_SPtr ret = new PYXValueTile_SPtr(pyxlibPINVOKE.ICoverage_getFieldTile__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index), nRes, nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXValueTile_SPtr getFieldTile(PYXIcosIndex index, int nRes) {
    PYXValueTile_SPtr ret = new PYXValueTile_SPtr(pyxlibPINVOKE.ICoverage_getFieldTile__SWIG_1(swigCPtr, PYXIcosIndex.getCPtr(index), nRes), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_PYXCost getFieldTileCost(PYXIcosIndex index, int nRes, int nFieldIndex) {
    SWIGTYPE_p_PYXCost ret = new SWIGTYPE_p_PYXCost(pyxlibPINVOKE.ICoverage_getFieldTileCost__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index), nRes, nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_PYXCost getFieldTileCost(PYXIcosIndex index, int nRes) {
    SWIGTYPE_p_PYXCost ret = new SWIGTYPE_p_PYXCost(pyxlibPINVOKE.ICoverage_getFieldTileCost__SWIG_1(swigCPtr, PYXIcosIndex.getCPtr(index), nRes), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXValueTile_SPtr getCoverageTile(PYXTile tile) {
    PYXValueTile_SPtr ret = new PYXValueTile_SPtr(pyxlibPINVOKE.ICoverage_getCoverageTile(swigCPtr, PYXTile.getCPtr(tile)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_PYXCost getTileCost(PYXTile tile) {
    SWIGTYPE_p_PYXCost ret = new SWIGTYPE_p_PYXCost(pyxlibPINVOKE.ICoverage_getTileCost(swigCPtr, PYXTile.getCPtr(tile)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void setCoverageValue(PYXValue value, PYXIcosIndex index, int nFieldIndex) {
    pyxlibPINVOKE.ICoverage_setCoverageValue__SWIG_0(swigCPtr, PYXValue.getCPtr(value), PYXIcosIndex.getCPtr(index), nFieldIndex);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setCoverageValue(PYXValue value, PYXIcosIndex index) {
    pyxlibPINVOKE.ICoverage_setCoverageValue__SWIG_1(swigCPtr, PYXValue.getCPtr(value), PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setCoverageTile(PYXValueTile_SPtr spValueTile) {
    pyxlibPINVOKE.ICoverage_setCoverageTile(swigCPtr, PYXValueTile_SPtr.getCPtr(spValueTile));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
