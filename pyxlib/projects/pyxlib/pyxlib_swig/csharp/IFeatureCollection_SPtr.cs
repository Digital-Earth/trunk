/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IFeatureCollection_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IFeatureCollection_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IFeatureCollection_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IFeatureCollection_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IFeatureCollection_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }
	
	public System.Collections.Generic.IEnumerable<IFeature_SPtr> GetFeaturesEnumerator(PYXGeometry geometry)
	{
		FeatureIterator_SPtr iterator = getIterator(geometry);
		if (iterator.isNull())
		{
			yield break;
		}
		while(!iterator.end())
		{
			yield return iterator.getFeature();
			iterator.next();
		}
	}

	public System.Collections.Generic.IEnumerable<IFeature_SPtr> GetFeaturesEnumerator()
	{
		FeatureIterator_SPtr iterator = getIterator();
		if (iterator.isNull())
		{
			yield break;
		}
		while(!iterator.end())
		{
			yield return iterator.getFeature();
			iterator.next();
		}
	}

  public IFeatureCollection_SPtr() : this(pyxlibPINVOKE.new_IFeatureCollection_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IFeatureCollection_SPtr(IFeatureCollection p, bool add_ref) : this(pyxlibPINVOKE.new_IFeatureCollection_SPtr__SWIG_1(IFeatureCollection.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IFeatureCollection_SPtr(IFeatureCollection p) : this(pyxlibPINVOKE.new_IFeatureCollection_SPtr__SWIG_2(IFeatureCollection.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IFeatureCollection_SPtr(IFeatureCollection_SPtr rhs) : this(pyxlibPINVOKE.new_IFeatureCollection_SPtr__SWIG_3(IFeatureCollection_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.IFeatureCollection_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(IFeatureCollection rhs) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_reset__SWIG_1(swigCPtr, IFeatureCollection.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IFeatureCollection get() {
    IntPtr cPtr = pyxlibPINVOKE.IFeatureCollection_SPtr_get(swigCPtr);
    IFeatureCollection ret = (cPtr == IntPtr.Zero) ? null : new IFeatureCollection(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IFeatureCollection __ref__() {
    IFeatureCollection ret = new IFeatureCollection(pyxlibPINVOKE.IFeatureCollection_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IFeatureCollection __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.IFeatureCollection_SPtr___deref__(swigCPtr);
    IFeatureCollection ret = (cPtr == IntPtr.Zero) ? null : new IFeatureCollection(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(IFeatureCollection_SPtr rhs) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_swap(swigCPtr, IFeatureCollection_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.IFeatureCollection_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.IFeatureCollection_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.IFeatureCollection_SPtr_iid_get(swigCPtr);
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public FeatureIterator_SPtr getIterator() {
    FeatureIterator_SPtr ret = new FeatureIterator_SPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getIterator__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FeatureIterator_SPtr getIterator(PYXGeometry geometry) {
    FeatureIterator_SPtr ret = new FeatureIterator_SPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getIterator__SWIG_1(swigCPtr, PYXGeometry.getCPtr(geometry)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXTableDefinition_CSPtr getFeatureDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getFeatureDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorTFeatureStyle_t getFeatureStyles() {
    SWIGTYPE_p_std__vectorTFeatureStyle_t ret = new SWIGTYPE_p_std__vectorTFeatureStyle_t(pyxlibPINVOKE.IFeatureCollection_SPtr_getFeatureStyles(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IFeature_SPtr getFeature(string strFeatureID) {
    IFeature_SPtr ret = new IFeature_SPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getFeature(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strFeatureID)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool canRasterize() {
    bool ret = pyxlibPINVOKE.IFeatureCollection_SPtr_canRasterize(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void geometryHint(PYXGeometry_SPtr spGeom) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_geometryHint(swigCPtr, PYXGeometry_SPtr.getCPtr(spGeom));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void endGeometryHint(PYXGeometry_SPtr spGeom) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_endGeometryHint(swigCPtr, PYXGeometry_SPtr.getCPtr(spGeom));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isWritable() {
    bool ret = pyxlibPINVOKE.IFeatureCollection_SPtr_isWritable(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getID() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IFeatureCollection_SPtr_getID(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXGeometry_SPtr getGeometry() {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getGeometry(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_CSPtr getGeometry_const() {
    PYXGeometry_CSPtr ret = new PYXGeometry_CSPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getGeometry_const(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getStyle() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IFeatureCollection_SPtr_getStyle__SWIG_0(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getStyle(string strStyleToGet) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IFeatureCollection_SPtr_getStyle__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strStyleToGet)));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXTableDefinition_CSPtr getDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.IFeatureCollection_SPtr_getDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue getFieldValue(int nFieldIndex) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.IFeatureCollection_SPtr_getFieldValue(swigCPtr, nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValue(PYXValue value, int nFieldIndex) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_setFieldValue(swigCPtr, PYXValue.getCPtr(value), nFieldIndex);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXValue getFieldValueByName(string strName) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.IFeatureCollection_SPtr_getFieldValueByName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValueByName(PYXValue value, string strName) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_setFieldValueByName(swigCPtr, PYXValue.getCPtr(value), pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector_Value getFieldValues() {
    Vector_Value ret = new Vector_Value(pyxlibPINVOKE.IFeatureCollection_SPtr_getFieldValues(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValues(Vector_Value vecValues) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_setFieldValues(swigCPtr, Vector_Value.getCPtr(vecValues));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount, PYXValue value) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_addField__SWIG_0(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_addField__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType) {
    pyxlibPINVOKE.IFeatureCollection_SPtr_addField__SWIG_2(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint AddRef() {
    uint ret = pyxlibPINVOKE.IFeatureCollection_SPtr_AddRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Release() {
    uint ret = pyxlibPINVOKE.IFeatureCollection_SPtr_Release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
