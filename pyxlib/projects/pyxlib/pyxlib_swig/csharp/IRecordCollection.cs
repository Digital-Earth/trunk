/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IRecordCollection : IRecord {
  private HandleRef swigCPtr;

  public IRecordCollection(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.IRecordCollectionUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IRecordCollection obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IRecordCollection() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IRecordCollection(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

	public System.Collections.Generic.IEnumerable<IRecord_SPtr> GetRecordsEnumerator()
	{
		RecordIterator_SPtr iterator = getIterator();
		if (iterator.isNull())
		{
			yield break;
		}
		while(!iterator.end())
		{
			yield return iterator.getRecord();
			iterator.next();
		}
	}

  public static GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.IRecordCollection_iid_get();
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public virtual RecordIterator_SPtr getIterator() {
    RecordIterator_SPtr ret = new RecordIterator_SPtr(pyxlibPINVOKE.IRecordCollection_getIterator(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXTableDefinition_SPtr getRecordDefinition() {
    PYXTableDefinition_SPtr ret = new PYXTableDefinition_SPtr(pyxlibPINVOKE.IRecordCollection_getRecordDefinition(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IRecord_SPtr getRecord(string strRecordID) {
    IRecord_SPtr ret = new IRecord_SPtr(pyxlibPINVOKE.IRecordCollection_getRecord(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strRecordID)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
