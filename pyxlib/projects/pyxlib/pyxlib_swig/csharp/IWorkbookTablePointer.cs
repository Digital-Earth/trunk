/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IWorkbookTablePointer : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IWorkbookTablePointer(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IWorkbookTablePointer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IWorkbookTablePointer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IWorkbookTablePointer(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public IWorkbookTablePointer() : this(pyxlibPINVOKE.new_IWorkbookTablePointer__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookTablePointer(IWorkbookTable p, bool add_ref) : this(pyxlibPINVOKE.new_IWorkbookTablePointer__SWIG_1(IWorkbookTable.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookTablePointer(IWorkbookTable p) : this(pyxlibPINVOKE.new_IWorkbookTablePointer__SWIG_2(IWorkbookTable.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookTablePointer(IWorkbookTablePointer rhs) : this(pyxlibPINVOKE.new_IWorkbookTablePointer__SWIG_3(IWorkbookTablePointer.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.IWorkbookTablePointer_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(IWorkbookTable rhs) {
    pyxlibPINVOKE.IWorkbookTablePointer_reset__SWIG_1(swigCPtr, IWorkbookTable.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookTable get() {
    IntPtr cPtr = pyxlibPINVOKE.IWorkbookTablePointer_get(swigCPtr);
    IWorkbookTable ret = (cPtr == IntPtr.Zero) ? null : new IWorkbookTable(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookTable __ref__() {
    IWorkbookTable ret = new IWorkbookTable(pyxlibPINVOKE.IWorkbookTablePointer___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookTable __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.IWorkbookTablePointer___deref__(swigCPtr);
    IWorkbookTable ret = (cPtr == IntPtr.Zero) ? null : new IWorkbookTable(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(IWorkbookTablePointer rhs) {
    pyxlibPINVOKE.IWorkbookTablePointer_swap(swigCPtr, IWorkbookTablePointer.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.IWorkbookTablePointer_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.IWorkbookTablePointer_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsEmpty() {
    bool ret = pyxlibPINVOKE.IWorkbookTablePointer_IsEmpty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookViewPointer CreateView(uint firstColumnOffset, uint lastColumnOffset, uint headingRowOffset, uint firstDataRowOffset, uint lastDataRowOffset) {
    IWorkbookViewPointer ret = new IWorkbookViewPointer(pyxlibPINVOKE.IWorkbookTablePointer_CreateView(swigCPtr, firstColumnOffset, lastColumnOffset, headingRowOffset, firstDataRowOffset, lastDataRowOffset), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookViewPointer CreateDefaultView() {
    IWorkbookViewPointer ret = new IWorkbookViewPointer(pyxlibPINVOKE.IWorkbookTablePointer_CreateDefaultView(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetColumnCount() {
    uint ret = pyxlibPINVOKE.IWorkbookTablePointer_GetColumnCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetRowCount() {
    uint ret = pyxlibPINVOKE.IWorkbookTablePointer_GetRowCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetCell(uint rowOffset, uint columnOffset, PYXValue value) {
    bool ret = pyxlibPINVOKE.IWorkbookTablePointer_GetCell(swigCPtr, rowOffset, columnOffset, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsRowEmpty(uint rowOffset) {
    bool ret = pyxlibPINVOKE.IWorkbookTablePointer_IsRowEmpty(swigCPtr, rowOffset);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int release() {
    int ret = pyxlibPINVOKE.IWorkbookTablePointer_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.IWorkbookTablePointer_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
