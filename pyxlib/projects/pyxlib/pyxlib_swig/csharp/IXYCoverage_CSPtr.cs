/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IXYCoverage_CSPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IXYCoverage_CSPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IXYCoverage_CSPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IXYCoverage_CSPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IXYCoverage_CSPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public IXYCoverage_CSPtr() : this(pyxlibPINVOKE.new_IXYCoverage_CSPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IXYCoverage_CSPtr(IXYCoverage p, bool add_ref) : this(pyxlibPINVOKE.new_IXYCoverage_CSPtr__SWIG_1(IXYCoverage.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IXYCoverage_CSPtr(IXYCoverage p) : this(pyxlibPINVOKE.new_IXYCoverage_CSPtr__SWIG_2(IXYCoverage.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IXYCoverage_CSPtr(IXYCoverage_CSPtr rhs) : this(pyxlibPINVOKE.new_IXYCoverage_CSPtr__SWIG_3(IXYCoverage_CSPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.IXYCoverage_CSPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(IXYCoverage rhs) {
    pyxlibPINVOKE.IXYCoverage_CSPtr_reset__SWIG_1(swigCPtr, IXYCoverage.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IXYCoverage get() {
    IntPtr cPtr = pyxlibPINVOKE.IXYCoverage_CSPtr_get(swigCPtr);
    IXYCoverage ret = (cPtr == IntPtr.Zero) ? null : new IXYCoverage(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IXYCoverage __ref__() {
    IXYCoverage ret = new IXYCoverage(pyxlibPINVOKE.IXYCoverage_CSPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IXYCoverage __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.IXYCoverage_CSPtr___deref__(swigCPtr);
    IXYCoverage ret = (cPtr == IntPtr.Zero) ? null : new IXYCoverage(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(IXYCoverage_CSPtr rhs) {
    pyxlibPINVOKE.IXYCoverage_CSPtr_swap(swigCPtr, IXYCoverage_CSPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.IXYCoverage_CSPtr_iid_get(swigCPtr);
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXTableDefinition_CSPtr getCoverageDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getCoverageDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public XYCoverageValueGetter getCoverageValueGetter() {
    IntPtr cPtr = pyxlibPINVOKE.IXYCoverage_CSPtr_getCoverageValueGetter(swigCPtr);
    XYCoverageValueGetter ret = (cPtr == IntPtr.Zero) ? null : new XYCoverageValueGetter(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_boost__intrusive_ptrTXYAsyncValueGetter_t getAsyncCoverageValueGetter(SWIGTYPE_p_XYAsyncValueConsumer consumer, int matrixWidth, int matrixHeight) {
    SWIGTYPE_p_boost__intrusive_ptrTXYAsyncValueGetter_t ret = new SWIGTYPE_p_boost__intrusive_ptrTXYAsyncValueGetter_t(pyxlibPINVOKE.IXYCoverage_CSPtr_getAsyncCoverageValueGetter(swigCPtr, SWIGTYPE_p_XYAsyncValueConsumer.getCPtr(consumer), matrixWidth, matrixHeight), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getCoverageValue(PYXCoord2DDouble native, PYXValue pValue) {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_getCoverageValue(swigCPtr, PYXCoord2DDouble.getCPtr(native), PYXValue.getCPtr(pValue));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void getMatrixOfValues(PYXCoord2DDouble nativeCentre, PYXValue pValues, int sizeX, int sizeY) {
    pyxlibPINVOKE.IXYCoverage_CSPtr_getMatrixOfValues(swigCPtr, PYXCoord2DDouble.getCPtr(nativeCentre), PYXValue.getCPtr(pValues), sizeX, sizeY);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool hasSpatialReferenceSystem() {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_hasSpatialReferenceSystem(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverter getCoordConverter() {
    IntPtr cPtr = pyxlibPINVOKE.IXYCoverage_CSPtr_getCoordConverter(swigCPtr);
    ICoordConverter ret = (cPtr == IntPtr.Zero) ? null : new ICoordConverter(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getSpatialPrecision() {
    double ret = pyxlibPINVOKE.IXYCoverage_CSPtr_getSpatialPrecision(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXRect2DDouble getBounds() {
    PYXRect2DDouble ret = new PYXRect2DDouble(pyxlibPINVOKE.IXYCoverage_CSPtr_getBounds(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord2DDouble getStepSize() {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(pyxlibPINVOKE.IXYCoverage_CSPtr_getStepSize(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord2DDouble nativeToRasterSubPixel(PYXCoord2DDouble native) {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(pyxlibPINVOKE.IXYCoverage_CSPtr_nativeToRasterSubPixel(swigCPtr, PYXCoord2DDouble.getCPtr(native)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void tileLoadHint(PYXTile tile) {
    pyxlibPINVOKE.IXYCoverage_CSPtr_tileLoadHint(swigCPtr, PYXTile.getCPtr(tile));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void tileLoadDoneHint(PYXTile tile) {
    pyxlibPINVOKE.IXYCoverage_CSPtr_tileLoadDoneHint(swigCPtr, PYXTile.getCPtr(tile));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public FeatureIterator_SPtr getIterator() {
    FeatureIterator_SPtr ret = new FeatureIterator_SPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getIterator__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public FeatureIterator_SPtr getIterator(PYXGeometry geometry) {
    FeatureIterator_SPtr ret = new FeatureIterator_SPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getIterator__SWIG_1(swigCPtr, PYXGeometry.getCPtr(geometry)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXTableDefinition_CSPtr getFeatureDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getFeatureDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__vectorTFeatureStyle_t getFeatureStyles() {
    SWIGTYPE_p_std__vectorTFeatureStyle_t ret = new SWIGTYPE_p_std__vectorTFeatureStyle_t(pyxlibPINVOKE.IXYCoverage_CSPtr_getFeatureStyles(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IFeature_SPtr getFeature(string strFeatureID) {
    IFeature_SPtr ret = new IFeature_SPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getFeature(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strFeatureID)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool canRasterize() {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_canRasterize(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isWritable() {
    bool ret = pyxlibPINVOKE.IXYCoverage_CSPtr_isWritable(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getID() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IXYCoverage_CSPtr_getID(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXGeometry_CSPtr getGeometry_const() {
    PYXGeometry_CSPtr ret = new PYXGeometry_CSPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getGeometry_const(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getStyle() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IXYCoverage_CSPtr_getStyle__SWIG_0(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getStyle(string strStyleToGet) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IXYCoverage_CSPtr_getStyle__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strStyleToGet)));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXTableDefinition_CSPtr getDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.IXYCoverage_CSPtr_getDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue getFieldValue(int nFieldIndex) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.IXYCoverage_CSPtr_getFieldValue(swigCPtr, nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue getFieldValueByName(string strName) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.IXYCoverage_CSPtr_getFieldValueByName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vector_Value getFieldValues() {
    Vector_Value ret = new Vector_Value(pyxlibPINVOKE.IXYCoverage_CSPtr_getFieldValues(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
