/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXBitmap : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXBitmap(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXBitmap obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXBitmap() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXBitmap(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t createFromDefinition(string definition) {
    SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t ret = new SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t(pyxlibPINVOKE.PYXBitmap_createFromDefinition(pyxlibPINVOKE.UnmanagedString.Create(definition)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t createFromPath(string path) {
    SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t ret = new SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t(pyxlibPINVOKE.PYXBitmap_createFromPath(pyxlibPINVOKE.UnmanagedString.Create(path)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t create(uint width, uint height) {
    SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t ret = new SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t(pyxlibPINVOKE.PYXBitmap_create(width, height), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXBitmap(uint width, uint height) : this(pyxlibPINVOKE.new_PYXBitmap(width, height), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint getWidth() {
    uint ret = pyxlibPINVOKE.PYXBitmap_getWidth(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getHeight() {
    uint ret = pyxlibPINVOKE.PYXBitmap_getHeight(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_unsigned_char getData() {
    IntPtr cPtr = pyxlibPINVOKE.PYXBitmap_getData__SWIG_0(swigCPtr);
    SWIGTYPE_p_unsigned_char ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_unsigned_char(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
