/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXBoundingShape : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXBoundingShape(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXBoundingShape obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXBoundingShape() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXBoundingShape(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public virtual bool canIntersects(SWIGTYPE_p_SphereMath__GreatCircleArc ray) {
    bool ret = pyxlibPINVOKE.PYXBoundingShape_canIntersects(swigCPtr, SWIGTYPE_p_SphereMath__GreatCircleArc.getCPtr(ray));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool canBeCloser(PYXCoord3DDouble location, double distance) {
    bool ret = pyxlibPINVOKE.PYXBoundingShape_canBeCloser(swigCPtr, PYXCoord3DDouble.getCPtr(location), distance);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual double getBoundingArea() {
    double ret = pyxlibPINVOKE.PYXBoundingShape_getBoundingArea(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
