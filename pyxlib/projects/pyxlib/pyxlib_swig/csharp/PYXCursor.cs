/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXCursor : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXCursor(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXCursor obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXCursor() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXCursor(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXCursor_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCursor() : this(pyxlibPINVOKE.new_PYXCursor__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCursor(PYXIcosIndex index) : this(pyxlibPINVOKE.new_PYXCursor__SWIG_1(PYXIcosIndex.getCPtr(index)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCursor(PYXIcosIndex index, PYXMath.eHexDirection nDir) : this(pyxlibPINVOKE.new_PYXCursor__SWIG_2(PYXIcosIndex.getCPtr(index), (int)nDir), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void forward() {
    pyxlibPINVOKE.PYXCursor_forward__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void forward(int nCount) {
    pyxlibPINVOKE.PYXCursor_forward__SWIG_1(swigCPtr, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void backward() {
    pyxlibPINVOKE.PYXCursor_backward__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void backward(int nCount) {
    pyxlibPINVOKE.PYXCursor_backward__SWIG_1(swigCPtr, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void left(int nCount) {
    pyxlibPINVOKE.PYXCursor_left__SWIG_0(swigCPtr, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void left() {
    pyxlibPINVOKE.PYXCursor_left__SWIG_1(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void right(int nCount) {
    pyxlibPINVOKE.PYXCursor_right__SWIG_0(swigCPtr, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void right() {
    pyxlibPINVOKE.PYXCursor_right__SWIG_1(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void zoomOut() {
    pyxlibPINVOKE.PYXCursor_zoomOut(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void zoomIn() {
    pyxlibPINVOKE.PYXCursor_zoomIn(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXIcosIndex getIndex() {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXCursor_getIndex(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXMath.eHexDirection getDir() {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXCursor_getDir(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXMath.eHexDirection getBackDir() {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXCursor_getBackDir(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXMath.eHexDirection getInitialDir() {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXCursor_getInitialDir(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getRotation() {
    int ret = pyxlibPINVOKE.PYXCursor_getRotation(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void reset(PYXIcosIndex index, PYXMath.eHexDirection nDir) {
    pyxlibPINVOKE.PYXCursor_reset(swigCPtr, PYXIcosIndex.getCPtr(index), (int)nDir);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setIndex(PYXIcosIndex index) {
    pyxlibPINVOKE.PYXCursor_setIndex(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setDir(PYXMath.eHexDirection nDir) {
    pyxlibPINVOKE.PYXCursor_setDir(swigCPtr, (int)nDir);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string toString() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXCursor_toString(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXCursor(PYXCursor other) : this(pyxlibPINVOKE.new_PYXCursor__SWIG_3(PYXCursor.getCPtr(other)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
