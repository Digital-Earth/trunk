/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXIcosIndex : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXIcosIndex(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXIcosIndex obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXIcosIndex() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXIcosIndex(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

	public override bool Equals(object indexObject)
	{
		if (null == indexObject)
		{
			return false;
		}

		PYXIcosIndex index = indexObject as PYXIcosIndex;
		if (null != index)
		{
			return Equals(index);
		}

		return false;
	}

	public bool Equals(PYXIcosIndex index)
	{
		return this.toString() == index.toString();
	}

	public override int GetHashCode()
	{
		return this.toString().GetHashCode();
	}

	public override string ToString()
	{
		return this.toString();
	}

	public static bool operator ==(PYXIcosIndex a, PYXIcosIndex b)
	{
		if (System.Object.ReferenceEquals(a, b))
		{
			return true;
		}
		if (((object)a == null) || ((object)b == null))
		{
			return false;
		}
		return a.Equals(b);
	}

	public static bool operator !=(PYXIcosIndex a, PYXIcosIndex b)
	{
		return !(a==b);
	}

  public static void test() {
    pyxlibPINVOKE.PYXIcosIndex_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXIcosIndex() : this(pyxlibPINVOKE.new_PYXIcosIndex__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXIcosIndex(PYXIcosIndex rhs) : this(pyxlibPINVOKE.new_PYXIcosIndex__SWIG_1(PYXIcosIndex.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXIcosIndex(string strIndex) : this(pyxlibPINVOKE.new_PYXIcosIndex__SWIG_2(pyxlibPINVOKE.UnmanagedString.Create(strIndex)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYXIcosIndex_reset(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void normalizeResolution(SWIGTYPE_p_int pnResolution) {
    pyxlibPINVOKE.PYXIcosIndex_normalizeResolution(SWIGTYPE_p_int.getCPtr(pnResolution));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string toString() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXIcosIndex_toString(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXIndex getSubIndex() {
    PYXIndex ret = new PYXIndex(pyxlibPINVOKE.PYXIcosIndex_getSubIndex(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getResolution() {
    int ret = pyxlibPINVOKE.PYXIcosIndex_getResolution(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setResolution(int nResolution) {
    pyxlibPINVOKE.PYXIcosIndex_setResolution(swigCPtr, nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void incrementResolution() {
    pyxlibPINVOKE.PYXIcosIndex_incrementResolution(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void decrementResolution() {
    pyxlibPINVOKE.PYXIcosIndex_decrementResolution(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getPrimaryResolution() {
    int ret = pyxlibPINVOKE.PYXIcosIndex_getPrimaryResolution(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setPrimaryResolution(int nPrimaryValue) {
    pyxlibPINVOKE.PYXIcosIndex_setPrimaryResolution(swigCPtr, nPrimaryValue);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isVertex() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isVertex(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isPolar() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isPolar(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isFace() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isFace(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool hasVertexChildren() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_hasVertexChildren(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isPentagon() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isPentagon__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isPentagon(uint nSubIndexDigitCount) {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isPentagon__SWIG_1(swigCPtr, nSubIndexDigitCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isHexagon() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isHexagon(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isMajor() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isMajor(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isMinor() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isMinor(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNorthern() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isNorthern(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isSouthern() {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isSouthern(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getClass() {
    int ret = pyxlibPINVOKE.PYXIcosIndex_getClass(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isAncestorOf(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isAncestorOf(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isDescendantOf(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXIcosIndex_isDescendantOf(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int determineNumSides() {
    int ret = pyxlibPINVOKE.PYXIcosIndex_determineNumSides(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void randomize(int nResolution) {
    pyxlibPINVOKE.PYXIcosIndex_randomize(swigCPtr, nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public uint getMaximumChildCount(uint nSubIndexDigitCount) {
    uint ret = pyxlibPINVOKE.PYXIcosIndex_getMaximumChildCount(swigCPtr, nSubIndexDigitCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static readonly int knResolution0 = pyxlibPINVOKE.PYXIcosIndex_knResolution0_get();
  public static readonly int knResolution1 = pyxlibPINVOKE.PYXIcosIndex_knResolution1_get();
  public static readonly char kcFaceFirstChar = pyxlibPINVOKE.PYXIcosIndex_kcFaceFirstChar_get();
  public static readonly char kcFaceLastChar = pyxlibPINVOKE.PYXIcosIndex_kcFaceLastChar_get();
  public static readonly int knMinSubRes = pyxlibPINVOKE.PYXIcosIndex_knMinSubRes_get();
  public static readonly int knFirstVertex = pyxlibPINVOKE.PYXIcosIndex_knFirstVertex_get();
  public static readonly int knLastVertex = pyxlibPINVOKE.PYXIcosIndex_knLastVertex_get();
  public static readonly int knNullPrimaryRes = pyxlibPINVOKE.PYXIcosIndex_knNullPrimaryRes_get();
}
