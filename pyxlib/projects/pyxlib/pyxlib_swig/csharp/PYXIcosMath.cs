/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXIcosMath : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXIcosMath(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXIcosMath obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXIcosMath() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXIcosMath(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXIcosMath_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool zoomIntoChildren(PYXIcosIndex pIndex, PYXMath.eHexDirection nHexDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomIntoChildren__SWIG_0(PYXIcosIndex.getCPtr(pIndex), (int)nHexDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool zoomIntoChildren(PYXIcosIndex pIndex) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomIntoChildren__SWIG_1(PYXIcosIndex.getCPtr(pIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool zoomIntoNeighbourhood(PYXIcosIndex pIndex, PYXMath.eHexDirection nHexDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomIntoNeighbourhood__SWIG_0(PYXIcosIndex.getCPtr(pIndex), (int)nHexDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool zoomIntoNeighbourhood(PYXIcosIndex pIndex) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomIntoNeighbourhood__SWIG_1(PYXIcosIndex.getCPtr(pIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool zoomOut(PYXIcosIndex pIndex, ref int pnDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomOut__SWIG_0(PYXIcosIndex.getCPtr(pIndex), ref pnDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool zoomOut(PYXIcosIndex pIndex) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_zoomOut__SWIG_1(PYXIcosIndex.getCPtr(pIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIcosIndex calcAncestorIndex(PYXIcosIndex index1, PYXIcosIndex index2) {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXIcosMath_calcAncestorIndex(PYXIcosIndex.getCPtr(index1), PYXIcosIndex.getCPtr(index2)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIndex calcDescendantIndex(PYXIcosIndex parent, PYXIcosIndex child) {
    PYXIndex ret = new PYXIndex(pyxlibPINVOKE.PYXIcosMath_calcDescendantIndex(PYXIcosIndex.getCPtr(parent), PYXIcosIndex.getCPtr(child)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXMath.eHexDirection rotateDirection(PYXIcosIndex index, PYXMath.eHexDirection nDirection, int nRotate) {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXIcosMath_rotateDirection(PYXIcosIndex.getCPtr(index), (int)nDirection, nRotate);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIcosIndex move(PYXIcosIndex start, PYXMath.eHexDirection nHexDirection) {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXIcosMath_move__SWIG_0(PYXIcosIndex.getCPtr(start), (int)nHexDirection), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool move(PYXIcosIndex pIndex, PYXMath.eHexDirection nHexDirection, SWIGTYPE_p_int pnRotate) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_move__SWIG_1(PYXIcosIndex.getCPtr(pIndex), (int)nHexDirection, SWIGTYPE_p_int.getCPtr(pnRotate));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIcosIndex add(PYXIcosIndex first, PYXIcosIndex second, int nResolution) {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXIcosMath_add(PYXIcosIndex.getCPtr(first), PYXIcosIndex.getCPtr(second), nResolution), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isValidDirection(PYXIcosIndex pyxIndex, PYXMath.eHexDirection nHexDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_isValidDirection__SWIG_0(PYXIcosIndex.getCPtr(pyxIndex), (int)nHexDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isValidDirection(int nVertex, PYXMath.eHexDirection nHexDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_isValidDirection__SWIG_1(nVertex, (int)nHexDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isValidResolution(int nResolution) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_isValidResolution(nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int faceOwner(char nFace) {
    int ret = pyxlibPINVOKE.PYXIcosMath_faceOwner(nFace);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIcosIndex getParent(PYXIcosIndex pyxIndex) {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXIcosMath_getParent(PYXIcosIndex.getCPtr(pyxIndex)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getCoveringCells(PYXIcosIndex index, PYXIcosIndex pIndices) {
    int ret = pyxlibPINVOKE.PYXIcosMath_getCoveringCells(PYXIcosIndex.getCPtr(index), PYXIcosIndex.getCPtr(pIndices));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getCoveredCells(PYXIcosIndex index, PYXIcosIndex pIndices) {
    int ret = pyxlibPINVOKE.PYXIcosMath_getCoveredCells(PYXIcosIndex.getCPtr(index), PYXIcosIndex.getCPtr(pIndices));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void getAllCoveringCells(PYXIcosIndex index, Vector_Index vecCovering, SWIGTYPE_p_std__vectorTshort_t vecSlice) {
    pyxlibPINVOKE.PYXIcosMath_getAllCoveringCells(PYXIcosIndex.getCPtr(index), Vector_Index.getCPtr(vecCovering), SWIGTYPE_p_std__vectorTshort_t.getCPtr(vecSlice));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void getFaceVertices(char cFace, SWIGTYPE_p_int pnVertex1, SWIGTYPE_p_int pnVertex2, SWIGTYPE_p_int pnVertex3) {
    pyxlibPINVOKE.PYXIcosMath_getFaceVertices(cFace, SWIGTYPE_p_int.getCPtr(pnVertex1), SWIGTYPE_p_int.getCPtr(pnVertex2), SWIGTYPE_p_int.getCPtr(pnVertex3));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static double getDir1Angle(char cFace) {
    double ret = pyxlibPINVOKE.PYXIcosMath_getDir1Angle(cFace);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool getFaceOrientation(char cFace) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_getFaceOrientation(cFace);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool getCellGap(PYXIcosIndex index, ref int pnDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_getCellGap__SWIG_0(PYXIcosIndex.getCPtr(index), ref pnDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool getCellGap(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_getCellGap__SWIG_1(PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isValidIndex(PYXIcosIndex pyxIndex) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_isValidIndex(PYXIcosIndex.getCPtr(pyxIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void polarToIndex(PYXCoordPolar pt, int nResolution, char cFace, PYXIcosIndex pIndex) {
    pyxlibPINVOKE.PYXIcosMath_polarToIndex(PYXCoordPolar.getCPtr(pt), nResolution, cFace, PYXIcosIndex.getCPtr(pIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void indexToPolar(PYXIcosIndex index, PYXCoordPolar pPolar, string pcFace) {
    pyxlibPINVOKE.PYXIcosMath_indexToPolar(PYXIcosIndex.getCPtr(index), PYXCoordPolar.getCPtr(pPolar), pcFace);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYXMath.eHexDirection getDirectionFromPolar(double fAngle) {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXIcosMath_getDirectionFromPolar(fAngle);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getCellCount(int nResolution) {
    int ret = pyxlibPINVOKE.PYXIcosMath_getCellCount__SWIG_0(nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getCellCount(PYXIcosIndex root, int nResolution) {
    int ret = pyxlibPINVOKE.PYXIcosMath_getCellCount__SWIG_1(PYXIcosIndex.getCPtr(root), nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint getOffset(PYXIcosIndex root, int nResolution) {
    uint ret = pyxlibPINVOKE.PYXIcosMath_getOffset(PYXIcosIndex.getCPtr(root), nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint calcCellPosition(PYXIcosIndex index) {
    uint ret = pyxlibPINVOKE.PYXIcosMath_calcCellPosition__SWIG_0(PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static uint calcCellPosition(PYXIcosIndex root, PYXIcosIndex index) {
    uint ret = pyxlibPINVOKE.PYXIcosMath_calcCellPosition__SWIG_1(PYXIcosIndex.getCPtr(root), PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int calcEdgePosition(PYXIcosIndex root, PYXIcosIndex index) {
    int ret = pyxlibPINVOKE.PYXIcosMath_calcEdgePosition(PYXIcosIndex.getCPtr(root), PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXIcosIndex calcIndexFromOffset(PYXIcosIndex root, int nRes, uint nOffset) {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXIcosMath_calcIndexFromOffset(PYXIcosIndex.getCPtr(root), nRes, nOffset), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool areSiblings(PYXIcosIndex index1, PYXIcosIndex index2, ref int pnDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_areSiblings__SWIG_0(PYXIcosIndex.getCPtr(index1), PYXIcosIndex.getCPtr(index2), ref pnDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool areSiblings(PYXIcosIndex index1, PYXIcosIndex index2) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_areSiblings__SWIG_1(PYXIcosIndex.getCPtr(index1), PYXIcosIndex.getCPtr(index2));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool directionFromParent(PYXIcosIndex index, ref int pnDirection) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_directionFromParent__SWIG_0(PYXIcosIndex.getCPtr(index), ref pnDirection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool directionFromParent(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_directionFromParent__SWIG_1(PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool isDataContained(PYXIcosIndex rootIndex, int nDataDepth) {
    bool ret = pyxlibPINVOKE.PYXIcosMath_isDataContained(PYXIcosIndex.getCPtr(rootIndex), nDataDepth);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void getNeighbours(PYXIcosIndex pyxIndex, Vector_Index pVecNeighbours) {
    pyxlibPINVOKE.PYXIcosMath_getNeighbours(PYXIcosIndex.getCPtr(pyxIndex), Vector_Index.getCPtr(pVecNeighbours));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYXMath.eHexDirection getNeighbourDirection(PYXIcosIndex indexFrom, PYXIcosIndex indexTo) {
    PYXMath.eHexDirection ret = (PYXMath.eHexDirection)pyxlibPINVOKE.PYXIcosMath_getNeighbourDirection(PYXIcosIndex.getCPtr(indexFrom), PYXIcosIndex.getCPtr(indexTo));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void rotateIndex(PYXIcosIndex pIndex, int nRotation) {
    pyxlibPINVOKE.PYXIcosMath_rotateIndex(PYXIcosIndex.getCPtr(pIndex), nRotation);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void rotateTail(PYXIcosIndex pIndex, int nDigits, int nRotation) {
    pyxlibPINVOKE.PYXIcosMath_rotateTail(PYXIcosIndex.getCPtr(pIndex), nDigits, nRotation);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
