/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXLibInstance : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXLibInstance(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXLibInstance obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXLibInstance() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXLibInstance(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXLibInstance(string strAppName, bool bClearCache, string strWorkingDirectory, string strAppDirectory, string strCacheDir) : this(pyxlibPINVOKE.new_PYXLibInstance__SWIG_0(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory), pyxlibPINVOKE.UnmanagedString.Create(strAppDirectory), pyxlibPINVOKE.UnmanagedString.Create(strCacheDir)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXLibInstance(string strAppName, bool bClearCache, string strWorkingDirectory, string strAppDirectory) : this(pyxlibPINVOKE.new_PYXLibInstance__SWIG_1(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory), pyxlibPINVOKE.UnmanagedString.Create(strAppDirectory)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXLibInstance(string strAppName, bool bClearCache, string strWorkingDirectory) : this(pyxlibPINVOKE.new_PYXLibInstance__SWIG_2(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXLibInstance(string strAppName, bool bClearCache) : this(pyxlibPINVOKE.new_PYXLibInstance__SWIG_3(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void initialize(string strAppName, bool bClearCache, string strWorkingDirectory, string strAppDirectory, string strCacheDir) {
    pyxlibPINVOKE.PYXLibInstance_initialize__SWIG_0(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory), pyxlibPINVOKE.UnmanagedString.Create(strAppDirectory), pyxlibPINVOKE.UnmanagedString.Create(strCacheDir));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void initialize(string strAppName, bool bClearCache, string strWorkingDirectory, string strAppDirectory) {
    pyxlibPINVOKE.PYXLibInstance_initialize__SWIG_1(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory), pyxlibPINVOKE.UnmanagedString.Create(strAppDirectory));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void initialize(string strAppName, bool bClearCache, string strWorkingDirectory) {
    pyxlibPINVOKE.PYXLibInstance_initialize__SWIG_2(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache, pyxlibPINVOKE.UnmanagedString.Create(strWorkingDirectory));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void initialize(string strAppName, bool bClearCache) {
    pyxlibPINVOKE.PYXLibInstance_initialize__SWIG_3(pyxlibPINVOKE.UnmanagedString.Create(strAppName), bClearCache);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void uninitialize() {
    pyxlibPINVOKE.PYXLibInstance_uninitialize();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
