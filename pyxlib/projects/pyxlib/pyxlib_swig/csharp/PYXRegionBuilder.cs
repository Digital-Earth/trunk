/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXRegionBuilder : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXRegionBuilder(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXRegionBuilder obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXRegionBuilder() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXRegionBuilder(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXRegionBuilder() : this(pyxlibPINVOKE.new_PYXRegionBuilder(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addVertex(PointLocation location) {
    pyxlibPINVOKE.PYXRegionBuilder_addVertex__SWIG_0(swigCPtr, PointLocation.getCPtr(location));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addVertex(PYXCoord3DDouble coordinate) {
    pyxlibPINVOKE.PYXRegionBuilder_addVertex__SWIG_1(swigCPtr, PYXCoord3DDouble.getCPtr(coordinate));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void closeCurve() {
    pyxlibPINVOKE.PYXRegionBuilder_closeCurve(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void endCurve() {
    pyxlibPINVOKE.PYXRegionBuilder_endCurve(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int suggestResolution() {
    int ret = pyxlibPINVOKE.PYXRegionBuilder_suggestResolution(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IRegion_SPtr createCurveRegion() {
    IRegion_SPtr ret = new IRegion_SPtr(pyxlibPINVOKE.PYXRegionBuilder_createCurveRegion(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IRegion_SPtr createPolygonRegion() {
    IRegion_SPtr ret = new IRegion_SPtr(pyxlibPINVOKE.PYXRegionBuilder_createPolygonRegion(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr createCurveGeometry(int resolution) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(pyxlibPINVOKE.PYXRegionBuilder_createCurveGeometry(swigCPtr, resolution), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr createPolyonGeometry(int resolution) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(pyxlibPINVOKE.PYXRegionBuilder_createPolyonGeometry(swigCPtr, resolution), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
