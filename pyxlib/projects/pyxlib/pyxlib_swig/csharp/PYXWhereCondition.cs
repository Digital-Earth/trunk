/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXWhereCondition : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXWhereCondition(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXWhereCondition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXWhereCondition() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXWhereCondition(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public virtual bool match(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXWhereCondition_match__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXTileCollection_SPtr match(PYXTile tile) {
    PYXTileCollection_SPtr ret = new PYXTileCollection_SPtr(pyxlibPINVOKE.PYXWhereCondition_match__SWIG_1(swigCPtr, PYXTile.getCPtr(tile)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXCoverageWhereCondition_SPtr coverageHasValues(ICoverage_SPtr coverage) {
    PYXCoverageWhereCondition_SPtr ret = new PYXCoverageWhereCondition_SPtr(pyxlibPINVOKE.PYXWhereCondition_coverageHasValues(ICoverage_SPtr.getCPtr(coverage)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXFeaturesWhereCondition_SPtr featuresHasValues(IFeatureCollection_SPtr features) {
    PYXFeaturesWhereCondition_SPtr ret = new PYXFeaturesWhereCondition_SPtr(pyxlibPINVOKE.PYXWhereCondition_featuresHasValues(IFeatureCollection_SPtr.getCPtr(features)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXGeometryWhereCondition_SPtr geometry(PYXGeometry_SPtr geometry) {
    PYXGeometryWhereCondition_SPtr ret = new PYXGeometryWhereCondition_SPtr(pyxlibPINVOKE.PYXWhereCondition_geometry(PYXGeometry_SPtr.getCPtr(geometry)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
