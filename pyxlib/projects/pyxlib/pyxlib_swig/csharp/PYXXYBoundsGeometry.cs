/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXXYBoundsGeometry : PYXVectorGeometry {
  private HandleRef swigCPtr;

  public PYXXYBoundsGeometry(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.PYXXYBoundsGeometryUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXXYBoundsGeometry obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXXYBoundsGeometry() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXXYBoundsGeometry(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXXYBoundsGeometry_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYXXYBoundsGeometry_SPtr create(PYXRect2DDouble bounds, ICoordConverter coordConverter, int nResolution) {
    PYXXYBoundsGeometry_SPtr ret = new PYXXYBoundsGeometry_SPtr(pyxlibPINVOKE.PYXXYBoundsGeometry_create__SWIG_0(PYXRect2DDouble.getCPtr(bounds), ICoordConverter.getCPtr(coordConverter), nResolution), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXXYBoundsGeometry_SPtr create(PYXXYBoundsGeometry rhs) {
    PYXXYBoundsGeometry_SPtr ret = new PYXXYBoundsGeometry_SPtr(pyxlibPINVOKE.PYXXYBoundsGeometry_create__SWIG_1(PYXXYBoundsGeometry.getCPtr(rhs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXXYBoundsGeometry_SPtr create(SWIGTYPE_p_std__basic_istreamTchar_t arg0) {
    PYXXYBoundsGeometry_SPtr ret = new PYXXYBoundsGeometry_SPtr(pyxlibPINVOKE.PYXXYBoundsGeometry_create__SWIG_2(SWIGTYPE_p_std__basic_istreamTchar_t.getCPtr(arg0)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXXYBoundsGeometry(PYXRect2DDouble bounds, ICoordConverter coordConverter, int nResolution) : this(pyxlibPINVOKE.new_PYXXYBoundsGeometry__SWIG_0(PYXRect2DDouble.getCPtr(bounds), ICoordConverter.getCPtr(coordConverter), nResolution), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void expand(PYXCoord2DDouble pt) {
    pyxlibPINVOKE.PYXXYBoundsGeometry_expand(swigCPtr, PYXCoord2DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXXYBoundsGeometry(SWIGTYPE_p_std__basic_istreamTchar_t arg0) : this(pyxlibPINVOKE.new_PYXXYBoundsGeometry__SWIG_1(SWIGTYPE_p_std__basic_istreamTchar_t.getCPtr(arg0)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override PYXGeometry_SPtr clone() {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(pyxlibPINVOKE.PYXXYBoundsGeometry_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void serialize(SWIGTYPE_p_std__basic_ostreamTchar_t arg0) {
    pyxlibPINVOKE.PYXXYBoundsGeometry_serialize(swigCPtr, SWIGTYPE_p_std__basic_ostreamTchar_t.getCPtr(arg0));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void deserialize(SWIGTYPE_p_std__basic_istreamTchar_t arg0) {
    pyxlibPINVOKE.PYXXYBoundsGeometry_deserialize(swigCPtr, SWIGTYPE_p_std__basic_istreamTchar_t.getCPtr(arg0));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool isCollection() {
    bool ret = pyxlibPINVOKE.PYXXYBoundsGeometry_isCollection(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override bool isEmpty() {
    bool ret = pyxlibPINVOKE.PYXXYBoundsGeometry_isEmpty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXRect2DDouble getBounds() {
    PYXRect2DDouble ret = new PYXRect2DDouble(pyxlibPINVOKE.PYXXYBoundsGeometry_getBounds(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverter_SPtr getCoordConverter() {
    ICoordConverter_SPtr ret = new ICoordConverter_SPtr(pyxlibPINVOKE.PYXXYBoundsGeometry_getCoordConverter(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void getBoundingRects(ICoordConverter coordConvertor, PYXRect2DDouble pRect1, PYXRect2DDouble pRect2) {
    pyxlibPINVOKE.PYXXYBoundsGeometry_getBoundingRects(swigCPtr, ICoordConverter.getCPtr(coordConvertor), PYXRect2DDouble.getCPtr(pRect1), PYXRect2DDouble.getCPtr(pRect2));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static readonly int knMinimumGeometryCount = pyxlibPINVOKE.PYXXYBoundsGeometry_knMinimumGeometryCount_get();
}
