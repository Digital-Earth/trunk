/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ParameterSpec : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ParameterSpec(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = false;
    swigCPtr = new HandleRef(this, cPtr);
    pyxlib.intrusive_ptr_add_ref(this);
  }

  public static HandleRef getCPtr(ParameterSpec obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ParameterSpec() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero) {
        pyxlib.intrusive_ptr_release(this);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static ParameterSpec_SPtr create(GUID riid, int nMinOccurs, int nMaxOccurs, string strName, string strDescription) {
    ParameterSpec_SPtr ret = new ParameterSpec_SPtr(pyxlibPINVOKE.ParameterSpec_create(GUID.getCPtr(riid), nMinOccurs, nMaxOccurs, pyxlibPINVOKE.UnmanagedString.Create(strName), pyxlibPINVOKE.UnmanagedString.Create(strDescription)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID getInterface() {
    GUID ret = new GUID(pyxlibPINVOKE.ParameterSpec_getInterface(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getMinOccurs() {
    int ret = pyxlibPINVOKE.ParameterSpec_getMinOccurs(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getMaxOccurs() {
    int ret = pyxlibPINVOKE.ParameterSpec_getMaxOccurs(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ParameterSpec_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getDescription() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ParameterSpec_getDescription(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

}
