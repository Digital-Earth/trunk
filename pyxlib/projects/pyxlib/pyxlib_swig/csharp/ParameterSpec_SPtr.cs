/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ParameterSpec_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ParameterSpec_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ParameterSpec_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ParameterSpec_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ParameterSpec_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ParameterSpec_SPtr() : this(pyxlibPINVOKE.new_ParameterSpec_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterSpec_SPtr(ParameterSpec p, bool add_ref) : this(pyxlibPINVOKE.new_ParameterSpec_SPtr__SWIG_1(ParameterSpec.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterSpec_SPtr(ParameterSpec p) : this(pyxlibPINVOKE.new_ParameterSpec_SPtr__SWIG_2(ParameterSpec.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterSpec_SPtr(ParameterSpec_SPtr rhs) : this(pyxlibPINVOKE.new_ParameterSpec_SPtr__SWIG_3(ParameterSpec_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ParameterSpec_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ParameterSpec rhs) {
    pyxlibPINVOKE.ParameterSpec_SPtr_reset__SWIG_1(swigCPtr, ParameterSpec.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterSpec get() {
    IntPtr cPtr = pyxlibPINVOKE.ParameterSpec_SPtr_get(swigCPtr);
    ParameterSpec ret = (cPtr == IntPtr.Zero) ? null : new ParameterSpec(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ParameterSpec __ref__() {
    ParameterSpec ret = new ParameterSpec(pyxlibPINVOKE.ParameterSpec_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ParameterSpec __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ParameterSpec_SPtr___deref__(swigCPtr);
    ParameterSpec ret = (cPtr == IntPtr.Zero) ? null : new ParameterSpec(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ParameterSpec_SPtr rhs) {
    pyxlibPINVOKE.ParameterSpec_SPtr_swap(swigCPtr, ParameterSpec_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ParameterSpec_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ParameterSpec_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ParameterSpec_SPtr create(GUID riid, int nMinOccurs, int nMaxOccurs, string strName, string strDescription) {
    ParameterSpec_SPtr ret = new ParameterSpec_SPtr(pyxlibPINVOKE.ParameterSpec_SPtr_create(swigCPtr, GUID.getCPtr(riid), nMinOccurs, nMaxOccurs, pyxlibPINVOKE.UnmanagedString.Create(strName), pyxlibPINVOKE.UnmanagedString.Create(strDescription)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID getInterface() {
    GUID ret = new GUID(pyxlibPINVOKE.ParameterSpec_SPtr_getInterface(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getMinOccurs() {
    int ret = pyxlibPINVOKE.ParameterSpec_SPtr_getMinOccurs(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getMaxOccurs() {
    int ret = pyxlibPINVOKE.ParameterSpec_SPtr_getMaxOccurs(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ParameterSpec_SPtr_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getDescription() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ParameterSpec_SPtr_getDescription(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

}
