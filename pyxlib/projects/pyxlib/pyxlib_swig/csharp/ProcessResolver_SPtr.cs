/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ProcessResolver_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ProcessResolver_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ProcessResolver_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ProcessResolver_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ProcessResolver_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ProcessResolver_SPtr() : this(pyxlibPINVOKE.new_ProcessResolver_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessResolver_SPtr(ProcessResolver p, bool add_ref) : this(pyxlibPINVOKE.new_ProcessResolver_SPtr__SWIG_1(ProcessResolver.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessResolver_SPtr(ProcessResolver p) : this(pyxlibPINVOKE.new_ProcessResolver_SPtr__SWIG_2(ProcessResolver.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessResolver_SPtr(ProcessResolver_SPtr rhs) : this(pyxlibPINVOKE.new_ProcessResolver_SPtr__SWIG_3(ProcessResolver_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ProcessResolver_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ProcessResolver rhs) {
    pyxlibPINVOKE.ProcessResolver_SPtr_reset__SWIG_1(swigCPtr, ProcessResolver.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessResolver get() {
    IntPtr cPtr = pyxlibPINVOKE.ProcessResolver_SPtr_get(swigCPtr);
    ProcessResolver ret = (cPtr == IntPtr.Zero) ? null : new ProcessResolver(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcessResolver __ref__() {
    ProcessResolver ret = new ProcessResolver(pyxlibPINVOKE.ProcessResolver_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcessResolver __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ProcessResolver_SPtr___deref__(swigCPtr);
    ProcessResolver ret = (cPtr == IntPtr.Zero) ? null : new ProcessResolver(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ProcessResolver_SPtr rhs) {
    pyxlibPINVOKE.ProcessResolver_SPtr_swap(swigCPtr, ProcessResolver_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ProcessResolver_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ProcessResolver_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IProcess_SPtr resolve(ProcRef procref) {
    IProcess_SPtr ret = new IProcess_SPtr(pyxlibPINVOKE.ProcessResolver_SPtr_resolve(swigCPtr, ProcRef.getCPtr(procref)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IProcess_SPtr notifyResolve(IProcess_SPtr spProc) {
    IProcess_SPtr ret = new IProcess_SPtr(pyxlibPINVOKE.ProcessResolver_SPtr_notifyResolve(swigCPtr, IProcess_SPtr.getCPtr(spProc)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void notifyFinalize(IProcess_SPtr spProc) {
    pyxlibPINVOKE.ProcessResolver_SPtr_notifyFinalize(swigCPtr, IProcess_SPtr.getCPtr(spProc));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
