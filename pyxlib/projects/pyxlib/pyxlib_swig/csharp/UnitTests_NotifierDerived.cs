/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class UnitTests_NotifierDerived : UnitTests_NotifierBase {
  private HandleRef swigCPtr;

  public UnitTests_NotifierDerived(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.UnitTests_NotifierDerivedUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(UnitTests_NotifierDerived obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~UnitTests_NotifierDerived() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_UnitTests_NotifierDerived(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Notifier getNotifier() {
    IntPtr cPtr = pyxlibPINVOKE.UnitTests_NotifierDerived_getNotifier(swigCPtr);
    Notifier ret = (cPtr == IntPtr.Zero) ? null : new Notifier(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new void attach(Observer pObserver) {
    pyxlibPINVOKE.UnitTests_NotifierDerived_attach(swigCPtr, Observer.getCPtr(pObserver));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public new void detach(Observer pObserver) {
    pyxlibPINVOKE.UnitTests_NotifierDerived_detach(swigCPtr, Observer.getCPtr(pObserver));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public new int getObserverCount() {
    int ret = pyxlibPINVOKE.UnitTests_NotifierDerived_getObserverCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public new void notify(NotifierEvent_SPtr spEvent) {
    pyxlibPINVOKE.UnitTests_NotifierDerived_notify(swigCPtr, NotifierEvent_SPtr.getCPtr(spEvent));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public UnitTests_NotifierDerived() : this(pyxlibPINVOKE.new_UnitTests_NotifierDerived(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
