/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class pyxlibPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("pyxlib_swig", EntryPoint="SWIGRegisterExceptionCallbacks_pyxlib")]
    public static extern void SWIGRegisterExceptionCallbacks_pyxlib(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("pyxlib_swig", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_pyxlib")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_pyxlib(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_pyxlib(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_pyxlib(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(pyxlibPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(pyxlibPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  /// <summary>
  /// This struct wraps std::strings allocated in unmanaged space.
  /// This is required because std::string can contain null characters.
  /// </summary>
  [StructLayout(LayoutKind.Sequential)]
  public struct UnmanagedString {
    /// <summary>
    /// The number of bytes in the unmanaged string.
    /// </summary>
    private uint length;

    /// <summary>
    /// The byte array, allocated in unmanaged space.
    /// </summary>
    private IntPtr data;

    private static System.Text.UTF8Encoding utf8 = new System.Text.UTF8Encoding();

    /// <summary>
    /// Copies the string into a new unmanaged string.
    /// Can throw OutOfMemoryException, ArgumentNullException,
    /// or ArgumentOutOfRangeException (if the string is too long).
    /// </summary>
    static public IntPtr Create(String from) {
	  if (from == null) {
	    throw new ArgumentNullException(from);
	  }

      // Ctreate Utf8 string
      byte[] bytes = utf8.GetBytes(from);

      // Create a struct to contain the unmanaged string.
      UnmanagedString unmanagedString;

      // Set the length in the length field.
      unmanagedString.length = (uint)bytes.Length;

      int size = System.Runtime.InteropServices.Marshal.SizeOf(typeof(byte)) * bytes.Length;

      unmanagedString.data = System.Runtime.InteropServices.Marshal.AllocCoTaskMem(size);

      try {
        System.Runtime.InteropServices.Marshal.Copy(bytes, 0, unmanagedString.data , bytes.Length);
      } catch (Exception) {
        // This doesn't throw.
        System.Runtime.InteropServices.Marshal.FreeCoTaskMem(unmanagedString.data);
        throw;
      }

      try {
        // Allocate unmanaged space for the struct.
        // Can throw OutOfMemoryException.
        IntPtr unmanagedStringPtr = Marshal.AllocCoTaskMem(Marshal.SizeOf(unmanagedString));

        // Marshal the struct data into the unmanaged space allocated.
        // Can throw ArgumentException if misused, but it is not here.
        Marshal.StructureToPtr(unmanagedString, unmanagedStringPtr, false);

        // Return the pointer to the unmanaged struct.
        return unmanagedStringPtr;
      } catch (Exception) {
        // This doesn't throw.
        Marshal.FreeCoTaskMem(unmanagedString.data);
        throw;
      }
    }

    /// <summary>
    /// Copies the unmanaged string data into a new String and deallocates the
    /// unmanaged string.
    /// Can throw ArgumentNullException, or ArgumentException if IntPtr is bad.
    /// May return a null String if the struct pointed to by IntPtr had a null data pointer,
    /// which it shouldn't under proper usage.
    /// </summary>
    static public String Consume(IntPtr unmanagedStringPtr) {
      // Marshal the struct from the unmanaged space.
      // Can throw ArgumentNullException.
      // Can throw ArgumentException if IntPtr is bad.
      // Never returns null.
      UnmanagedString unmanagedString = 
        (UnmanagedString)Marshal.PtrToStructure(unmanagedStringPtr, typeof(UnmanagedString));

      // Allocate a managed string and copies characters into it.
      // Returns null if unmanagedString.data is null.
      // Can throw ArgumentException if the integer cast overflows.	
      
      byte[] bytes = new byte[(int)unmanagedString.length];

      System.Runtime.InteropServices.Marshal.Copy(unmanagedString.data, bytes, 0, bytes.Length);

      string to = utf8.GetString(bytes);

      // Free the unmanaged string data.
      // This doesn't throw, and is a no-op for null.
      Marshal.FreeCoTaskMem(unmanagedString.data);

      // Free the unmanaged struct.
      // This doesn't throw.
      Marshal.FreeCoTaskMem(unmanagedStringPtr);

      // Return the managed string.
      return to;
    }
  }

  /// <summary>
  /// This class is used for marshalling null-terminated char * strings
  /// allocated in unmanaged space.
  /// </summary>
  protected class SWIGStringHelper {
    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("pyxlib_swig", EntryPoint="SWIGRegisterStringCallback_pyxlib")]
    public static extern void SWIGRegisterStringCallback_pyxlib(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_pyxlib(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static pyxlibPINVOKE() {
  }


  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_TraceCallback")]
  public static extern void delete_TraceCallback(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TraceCallback_message")]
  public static extern void TraceCallback_message(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TraceCallback_traceCallbackAdapter")]
  public static extern void TraceCallback_traceCallbackAdapter(int jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_TraceCallback")]
  public static extern IntPtr new_TraceCallback();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TraceCallback_director_connect")]
  public static extern void TraceCallback_director_connect(HandleRef jarg1, TraceCallback.SwigDelegateTraceCallback_0 delegate0);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMhelpCreate")]
  public static extern IntPtr PYXCOMhelpCreate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_isEqualProcRef")]
  public static extern bool isEqualProcRef(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Clear")]
  public static extern void Vector_Int_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Add")]
  public static extern void Vector_Int_Add(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_size")]
  public static extern uint Vector_Int_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_capacity")]
  public static extern uint Vector_Int_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_reserve")]
  public static extern void Vector_Int_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Int__SWIG_0")]
  public static extern IntPtr new_Vector_Int__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Int__SWIG_1")]
  public static extern IntPtr new_Vector_Int__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_getitemcopy")]
  public static extern int Vector_Int_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_getitem")]
  public static extern int Vector_Int_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_setitem")]
  public static extern void Vector_Int_setitem(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_AddRange")]
  public static extern void Vector_Int_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_GetRange")]
  public static extern IntPtr Vector_Int_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Insert")]
  public static extern void Vector_Int_Insert(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_InsertRange")]
  public static extern void Vector_Int_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_RemoveAt")]
  public static extern void Vector_Int_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_RemoveRange")]
  public static extern void Vector_Int_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Repeat")]
  public static extern IntPtr Vector_Int_Repeat(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Reverse__SWIG_0")]
  public static extern void Vector_Int_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Reverse__SWIG_1")]
  public static extern void Vector_Int_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_SetRange")]
  public static extern void Vector_Int_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Contains")]
  public static extern bool Vector_Int_Contains(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_IndexOf")]
  public static extern int Vector_Int_IndexOf(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_LastIndexOf")]
  public static extern int Vector_Int_LastIndexOf(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Int_Remove")]
  public static extern void Vector_Int_Remove(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Int")]
  public static extern void delete_Vector_Int(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Clear")]
  public static extern void Vector_Byte_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Add")]
  public static extern void Vector_Byte_Add(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_size")]
  public static extern uint Vector_Byte_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_capacity")]
  public static extern uint Vector_Byte_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_reserve")]
  public static extern void Vector_Byte_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Byte__SWIG_0")]
  public static extern IntPtr new_Vector_Byte__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Byte__SWIG_1")]
  public static extern IntPtr new_Vector_Byte__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_getitemcopy")]
  public static extern byte Vector_Byte_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_getitem")]
  public static extern byte Vector_Byte_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_setitem")]
  public static extern void Vector_Byte_setitem(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_AddRange")]
  public static extern void Vector_Byte_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_GetRange")]
  public static extern IntPtr Vector_Byte_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Insert")]
  public static extern void Vector_Byte_Insert(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_InsertRange")]
  public static extern void Vector_Byte_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_RemoveAt")]
  public static extern void Vector_Byte_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_RemoveRange")]
  public static extern void Vector_Byte_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Repeat")]
  public static extern IntPtr Vector_Byte_Repeat(byte jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Reverse__SWIG_0")]
  public static extern void Vector_Byte_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Reverse__SWIG_1")]
  public static extern void Vector_Byte_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_SetRange")]
  public static extern void Vector_Byte_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Contains")]
  public static extern bool Vector_Byte_Contains(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_IndexOf")]
  public static extern int Vector_Byte_IndexOf(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_LastIndexOf")]
  public static extern int Vector_Byte_LastIndexOf(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Byte_Remove")]
  public static extern void Vector_Byte_Remove(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Byte")]
  public static extern void delete_Vector_Byte(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Clear")]
  public static extern void Vector_Double_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Add")]
  public static extern void Vector_Double_Add(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_size")]
  public static extern uint Vector_Double_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_capacity")]
  public static extern uint Vector_Double_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_reserve")]
  public static extern void Vector_Double_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Double__SWIG_0")]
  public static extern IntPtr new_Vector_Double__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Double__SWIG_1")]
  public static extern IntPtr new_Vector_Double__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_getitemcopy")]
  public static extern double Vector_Double_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_getitem")]
  public static extern double Vector_Double_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_setitem")]
  public static extern void Vector_Double_setitem(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_AddRange")]
  public static extern void Vector_Double_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_GetRange")]
  public static extern IntPtr Vector_Double_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Insert")]
  public static extern void Vector_Double_Insert(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_InsertRange")]
  public static extern void Vector_Double_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_RemoveAt")]
  public static extern void Vector_Double_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_RemoveRange")]
  public static extern void Vector_Double_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Repeat")]
  public static extern IntPtr Vector_Double_Repeat(double jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Reverse__SWIG_0")]
  public static extern void Vector_Double_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Reverse__SWIG_1")]
  public static extern void Vector_Double_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_SetRange")]
  public static extern void Vector_Double_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Contains")]
  public static extern bool Vector_Double_Contains(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_IndexOf")]
  public static extern int Vector_Double_IndexOf(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_LastIndexOf")]
  public static extern int Vector_Double_LastIndexOf(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Double_Remove")]
  public static extern void Vector_Double_Remove(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Double")]
  public static extern void delete_Vector_Double(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Clear")]
  public static extern void Vector_String_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Add")]
  public static extern void Vector_String_Add(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_size")]
  public static extern uint Vector_String_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_capacity")]
  public static extern uint Vector_String_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_reserve")]
  public static extern void Vector_String_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_String__SWIG_0")]
  public static extern IntPtr new_Vector_String__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_String__SWIG_1")]
  public static extern IntPtr new_Vector_String__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_getitemcopy")]
  public static extern IntPtr Vector_String_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_getitem")]
  public static extern IntPtr Vector_String_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_setitem")]
  public static extern void Vector_String_setitem(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_AddRange")]
  public static extern void Vector_String_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_GetRange")]
  public static extern IntPtr Vector_String_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Insert")]
  public static extern void Vector_String_Insert(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_InsertRange")]
  public static extern void Vector_String_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_RemoveAt")]
  public static extern void Vector_String_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_RemoveRange")]
  public static extern void Vector_String_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Repeat")]
  public static extern IntPtr Vector_String_Repeat(IntPtr jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Reverse__SWIG_0")]
  public static extern void Vector_String_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Reverse__SWIG_1")]
  public static extern void Vector_String_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_SetRange")]
  public static extern void Vector_String_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Contains")]
  public static extern bool Vector_String_Contains(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_IndexOf")]
  public static extern int Vector_String_IndexOf(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_LastIndexOf")]
  public static extern int Vector_String_LastIndexOf(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_String_Remove")]
  public static extern void Vector_String_Remove(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_String")]
  public static extern void delete_Vector_String(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Clear")]
  public static extern void Vector_CoordLatLon_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Add")]
  public static extern void Vector_CoordLatLon_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_size")]
  public static extern uint Vector_CoordLatLon_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_capacity")]
  public static extern uint Vector_CoordLatLon_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_reserve")]
  public static extern void Vector_CoordLatLon_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_CoordLatLon__SWIG_0")]
  public static extern IntPtr new_Vector_CoordLatLon__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_CoordLatLon__SWIG_1")]
  public static extern IntPtr new_Vector_CoordLatLon__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_getitemcopy")]
  public static extern IntPtr Vector_CoordLatLon_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_getitem")]
  public static extern IntPtr Vector_CoordLatLon_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_setitem")]
  public static extern void Vector_CoordLatLon_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_AddRange")]
  public static extern void Vector_CoordLatLon_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_GetRange")]
  public static extern IntPtr Vector_CoordLatLon_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Insert")]
  public static extern void Vector_CoordLatLon_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_InsertRange")]
  public static extern void Vector_CoordLatLon_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_RemoveAt")]
  public static extern void Vector_CoordLatLon_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_RemoveRange")]
  public static extern void Vector_CoordLatLon_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Repeat")]
  public static extern IntPtr Vector_CoordLatLon_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Reverse__SWIG_0")]
  public static extern void Vector_CoordLatLon_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_Reverse__SWIG_1")]
  public static extern void Vector_CoordLatLon_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_CoordLatLon_SetRange")]
  public static extern void Vector_CoordLatLon_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_CoordLatLon")]
  public static extern void delete_Vector_CoordLatLon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Clear")]
  public static extern void Vector_Index_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Add")]
  public static extern void Vector_Index_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_size")]
  public static extern uint Vector_Index_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_capacity")]
  public static extern uint Vector_Index_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_reserve")]
  public static extern void Vector_Index_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Index__SWIG_0")]
  public static extern IntPtr new_Vector_Index__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Index__SWIG_1")]
  public static extern IntPtr new_Vector_Index__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_getitemcopy")]
  public static extern IntPtr Vector_Index_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_getitem")]
  public static extern IntPtr Vector_Index_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_setitem")]
  public static extern void Vector_Index_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_AddRange")]
  public static extern void Vector_Index_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_GetRange")]
  public static extern IntPtr Vector_Index_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Insert")]
  public static extern void Vector_Index_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_InsertRange")]
  public static extern void Vector_Index_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_RemoveAt")]
  public static extern void Vector_Index_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_RemoveRange")]
  public static extern void Vector_Index_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Repeat")]
  public static extern IntPtr Vector_Index_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Reverse__SWIG_0")]
  public static extern void Vector_Index_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_Reverse__SWIG_1")]
  public static extern void Vector_Index_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Index_SetRange")]
  public static extern void Vector_Index_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Index")]
  public static extern void delete_Vector_Index(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Clear")]
  public static extern void Vector_Value_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Add")]
  public static extern void Vector_Value_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_size")]
  public static extern uint Vector_Value_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_capacity")]
  public static extern uint Vector_Value_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_reserve")]
  public static extern void Vector_Value_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Value__SWIG_0")]
  public static extern IntPtr new_Vector_Value__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Value__SWIG_1")]
  public static extern IntPtr new_Vector_Value__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_getitemcopy")]
  public static extern IntPtr Vector_Value_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_getitem")]
  public static extern IntPtr Vector_Value_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_setitem")]
  public static extern void Vector_Value_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_AddRange")]
  public static extern void Vector_Value_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_GetRange")]
  public static extern IntPtr Vector_Value_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Insert")]
  public static extern void Vector_Value_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_InsertRange")]
  public static extern void Vector_Value_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_RemoveAt")]
  public static extern void Vector_Value_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_RemoveRange")]
  public static extern void Vector_Value_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Repeat")]
  public static extern IntPtr Vector_Value_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Reverse__SWIG_0")]
  public static extern void Vector_Value_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_Reverse__SWIG_1")]
  public static extern void Vector_Value_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Value_SetRange")]
  public static extern void Vector_Value_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Value")]
  public static extern void delete_Vector_Value(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Attribute_Map__SWIG_0")]
  public static extern IntPtr new_Attribute_Map__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Attribute_Map__SWIG_1")]
  public static extern IntPtr new_Attribute_Map__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_size")]
  public static extern uint Attribute_Map_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_empty")]
  public static extern bool Attribute_Map_empty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_clear")]
  public static extern void Attribute_Map_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_get")]
  public static extern IntPtr Attribute_Map_get(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_set")]
  public static extern void Attribute_Map_set(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_del")]
  public static extern void Attribute_Map_del(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Attribute_Map_has_key")]
  public static extern bool Attribute_Map_has_key(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Attribute_Map")]
  public static extern void delete_Attribute_Map(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Process_Process_Map__SWIG_0")]
  public static extern IntPtr new_Process_Process_Map__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Process_Process_Map__SWIG_1")]
  public static extern IntPtr new_Process_Process_Map__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_size")]
  public static extern uint Process_Process_Map_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_empty")]
  public static extern bool Process_Process_Map_empty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_clear")]
  public static extern void Process_Process_Map_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_get")]
  public static extern IntPtr Process_Process_Map_get(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_set")]
  public static extern void Process_Process_Map_set(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_del")]
  public static extern void Process_Process_Map_del(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Process_Process_Map_has_key")]
  public static extern bool Process_Process_Map_has_key(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Process_Process_Map")]
  public static extern void delete_Process_Process_Map(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Clear")]
  public static extern void PYXRhombus_Vector_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Add")]
  public static extern void PYXRhombus_Vector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_size")]
  public static extern uint PYXRhombus_Vector_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_capacity")]
  public static extern uint PYXRhombus_Vector_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_reserve")]
  public static extern void PYXRhombus_Vector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus_Vector__SWIG_0")]
  public static extern IntPtr new_PYXRhombus_Vector__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus_Vector__SWIG_1")]
  public static extern IntPtr new_PYXRhombus_Vector__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_getitemcopy")]
  public static extern IntPtr PYXRhombus_Vector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_getitem")]
  public static extern IntPtr PYXRhombus_Vector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_setitem")]
  public static extern void PYXRhombus_Vector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_AddRange")]
  public static extern void PYXRhombus_Vector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_GetRange")]
  public static extern IntPtr PYXRhombus_Vector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Insert")]
  public static extern void PYXRhombus_Vector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_InsertRange")]
  public static extern void PYXRhombus_Vector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_RemoveAt")]
  public static extern void PYXRhombus_Vector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_RemoveRange")]
  public static extern void PYXRhombus_Vector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Repeat")]
  public static extern IntPtr PYXRhombus_Vector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Reverse__SWIG_0")]
  public static extern void PYXRhombus_Vector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_Reverse__SWIG_1")]
  public static extern void PYXRhombus_Vector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_Vector_SetRange")]
  public static extern void PYXRhombus_Vector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRhombus_Vector")]
  public static extern void delete_PYXRhombus_Vector(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getStringAsByteVector")]
  public static extern IntPtr getStringAsByteVector(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getKeysFromMap")]
  public static extern IntPtr getKeysFromMap(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getValuesFromMap")]
  public static extern IntPtr getValuesFromMap(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_pathToString")]
  public static extern IntPtr pathToString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_stringToPath")]
  public static extern IntPtr stringToPath(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_SPtr__SWIG_0")]
  public static extern IntPtr new_Command_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_SPtr__SWIG_1")]
  public static extern IntPtr new_Command_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_SPtr__SWIG_2")]
  public static extern IntPtr new_Command_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_SPtr__SWIG_3")]
  public static extern IntPtr new_Command_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Command_SPtr")]
  public static extern void delete_Command_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_reset__SWIG_0")]
  public static extern void Command_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_reset__SWIG_1")]
  public static extern void Command_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_get")]
  public static extern IntPtr Command_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr___ref__")]
  public static extern IntPtr Command_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr___deref__")]
  public static extern IntPtr Command_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_swap")]
  public static extern void Command_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_isNull")]
  public static extern bool Command_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_isNotNull")]
  public static extern bool Command_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_release")]
  public static extern int Command_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_addRef")]
  public static extern int Command_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getName")]
  public static extern IntPtr Command_SPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getLongName")]
  public static extern IntPtr Command_SPtr_getLongName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_execute")]
  public static extern bool Command_SPtr_execute(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_drag")]
  public static extern IntPtr Command_SPtr_drag(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_undo")]
  public static extern bool Command_SPtr_undo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_redo")]
  public static extern bool Command_SPtr_redo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getCategory")]
  public static extern IntPtr Command_SPtr_getCategory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_setCategory")]
  public static extern void Command_SPtr_setCategory(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getPriority")]
  public static extern int Command_SPtr_getPriority(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_setPriority")]
  public static extern void Command_SPtr_setPriority(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getSubordinates")]
  public static extern IntPtr Command_SPtr_getSubordinates(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_addSubordinate")]
  public static extern void Command_SPtr_addSubordinate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getRecordable")]
  public static extern bool Command_SPtr_getRecordable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getUndoable")]
  public static extern bool Command_SPtr_getUndoable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getEnabled")]
  public static extern bool Command_SPtr_getEnabled(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getChecked")]
  public static extern bool Command_SPtr_getChecked(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getType")]
  public static extern int Command_SPtr_getType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getToolTip")]
  public static extern IntPtr Command_SPtr_getToolTip(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_hasSubordinates")]
  public static extern bool Command_SPtr_hasSubordinates(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_getLastException")]
  public static extern IntPtr Command_SPtr_getLastException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_setLastException")]
  public static extern void Command_SPtr_setLastException(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_Executed")]
  public static extern IntPtr Command_SPtr_Executed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_SPtr_notifyCommandExecuted")]
  public static extern void Command_SPtr_notifyCommandExecuted(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_CSPtr__SWIG_0")]
  public static extern IntPtr new_Command_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_CSPtr__SWIG_1")]
  public static extern IntPtr new_Command_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_CSPtr__SWIG_2")]
  public static extern IntPtr new_Command_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command_CSPtr__SWIG_3")]
  public static extern IntPtr new_Command_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Command_CSPtr")]
  public static extern void delete_Command_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_reset__SWIG_0")]
  public static extern void Command_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_reset__SWIG_1")]
  public static extern void Command_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_get")]
  public static extern IntPtr Command_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr___ref__")]
  public static extern IntPtr Command_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr___deref__")]
  public static extern IntPtr Command_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_swap")]
  public static extern void Command_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_isNull")]
  public static extern bool Command_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_isNotNull")]
  public static extern bool Command_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_release")]
  public static extern int Command_CSPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_addRef")]
  public static extern int Command_CSPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getName")]
  public static extern IntPtr Command_CSPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getLongName")]
  public static extern IntPtr Command_CSPtr_getLongName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getCategory")]
  public static extern IntPtr Command_CSPtr_getCategory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getPriority")]
  public static extern int Command_CSPtr_getPriority(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getRecordable")]
  public static extern bool Command_CSPtr_getRecordable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getUndoable")]
  public static extern bool Command_CSPtr_getUndoable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getEnabled")]
  public static extern bool Command_CSPtr_getEnabled(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getChecked")]
  public static extern bool Command_CSPtr_getChecked(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getType")]
  public static extern int Command_CSPtr_getType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_getToolTip")]
  public static extern IntPtr Command_CSPtr_getToolTip(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_CSPtr_hasSubordinates")]
  public static extern bool Command_CSPtr_hasSubordinates(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_NotifierEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_NotifierEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_NotifierEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_NotifierEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_NotifierEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_NotifierEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_NotifierEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_NotifierEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_NotifierEvent_SPtr")]
  public static extern void delete_NotifierEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_reset__SWIG_0")]
  public static extern void NotifierEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_reset__SWIG_1")]
  public static extern void NotifierEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_get")]
  public static extern IntPtr NotifierEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr___ref__")]
  public static extern IntPtr NotifierEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr___deref__")]
  public static extern IntPtr NotifierEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_swap")]
  public static extern void NotifierEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_isNull")]
  public static extern bool NotifierEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_NotifierEvent_SPtr_isNotNull")]
  public static extern bool NotifierEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIterator_SPtr")]
  public static extern void delete_PYXIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_get")]
  public static extern IntPtr PYXIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr___ref__")]
  public static extern IntPtr PYXIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr___deref__")]
  public static extern IntPtr PYXIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_swap")]
  public static extern void PYXIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_isNull")]
  public static extern bool PYXIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_isNotNull")]
  public static extern bool PYXIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_getIndex")]
  public static extern IntPtr PYXIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_next")]
  public static extern void PYXIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_SPtr_end")]
  public static extern bool PYXIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNeighbourIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXNeighbourIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNeighbourIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXNeighbourIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNeighbourIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXNeighbourIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNeighbourIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXNeighbourIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNeighbourIterator_SPtr")]
  public static extern void delete_PYXNeighbourIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXNeighbourIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXNeighbourIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_get")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr___ref__")]
  public static extern IntPtr PYXNeighbourIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr___deref__")]
  public static extern IntPtr PYXNeighbourIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_swap")]
  public static extern void PYXNeighbourIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_isNull")]
  public static extern bool PYXNeighbourIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_isNotNull")]
  public static extern bool PYXNeighbourIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_create")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_test")]
  public static extern void PYXNeighbourIterator_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_end")]
  public static extern bool PYXNeighbourIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_next")]
  public static extern void PYXNeighbourIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_getIndex")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_getDirection")]
  public static extern int PYXNeighbourIterator_SPtr_getDirection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_getRootIndex")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXNeighbourIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXNeighbourIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXNeighbourIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXChildIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXChildIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXChildIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXChildIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXChildIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXChildIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXChildIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXChildIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXChildIterator_SPtr")]
  public static extern void delete_PYXChildIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXChildIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXChildIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_get")]
  public static extern IntPtr PYXChildIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr___ref__")]
  public static extern IntPtr PYXChildIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr___deref__")]
  public static extern IntPtr PYXChildIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_swap")]
  public static extern void PYXChildIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_isNull")]
  public static extern bool PYXChildIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_isNotNull")]
  public static extern bool PYXChildIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_test")]
  public static extern void PYXChildIterator_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_next")]
  public static extern void PYXChildIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_end")]
  public static extern bool PYXChildIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_getIndex")]
  public static extern IntPtr PYXChildIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXChildIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXChildIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXChildIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXChildIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEdgeIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXEdgeIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEdgeIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXEdgeIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEdgeIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXEdgeIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEdgeIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXEdgeIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXEdgeIterator_SPtr")]
  public static extern void delete_PYXEdgeIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXEdgeIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXEdgeIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_get")]
  public static extern IntPtr PYXEdgeIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr___ref__")]
  public static extern IntPtr PYXEdgeIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr___deref__")]
  public static extern IntPtr PYXEdgeIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_swap")]
  public static extern void PYXEdgeIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_isNull")]
  public static extern bool PYXEdgeIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_isNotNull")]
  public static extern bool PYXEdgeIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_test")]
  public static extern void PYXEdgeIterator_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_create")]
  public static extern IntPtr PYXEdgeIterator_SPtr_create(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_restartIterator")]
  public static extern void PYXEdgeIterator_SPtr_restartIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_setIteratorIndex")]
  public static extern bool PYXEdgeIterator_SPtr_setIteratorIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_next")]
  public static extern void PYXEdgeIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_end")]
  public static extern bool PYXEdgeIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_getIndex")]
  public static extern IntPtr PYXEdgeIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_calcCurrentOffset")]
  public static extern int PYXEdgeIterator_SPtr_calcCurrentOffset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_calcCellCount")]
  public static extern int PYXEdgeIterator_SPtr_calcCellCount(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_getRoot")]
  public static extern IntPtr PYXEdgeIterator_SPtr_getRoot(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXEdgeIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXEdgeIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXEdgeIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXEdgeIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXGeometry_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXGeometry_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXGeometry_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXGeometry_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometry_SPtr")]
  public static extern void delete_PYXGeometry_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_reset__SWIG_0")]
  public static extern void PYXGeometry_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_reset__SWIG_1")]
  public static extern void PYXGeometry_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_get")]
  public static extern IntPtr PYXGeometry_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr___ref__")]
  public static extern IntPtr PYXGeometry_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr___deref__")]
  public static extern IntPtr PYXGeometry_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_swap")]
  public static extern void PYXGeometry_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_isNull")]
  public static extern bool PYXGeometry_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_isNotNull")]
  public static extern bool PYXGeometry_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_clone")]
  public static extern IntPtr PYXGeometry_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_isCollection")]
  public static extern bool PYXGeometry_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_isEmpty")]
  public static extern bool PYXGeometry_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_getCellResolution")]
  public static extern int PYXGeometry_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_setCellResolution")]
  public static extern void PYXGeometry_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGeometry_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGeometry_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_intersects__SWIG_0")]
  public static extern bool PYXGeometry_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_intersects__SWIG_1")]
  public static extern bool PYXGeometry_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_contains")]
  public static extern bool PYXGeometry_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_disjunction")]
  public static extern IntPtr PYXGeometry_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_getIterator")]
  public static extern IntPtr PYXGeometry_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGeometry_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_calcPerimeter")]
  public static extern void PYXGeometry_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_copyTo__SWIG_0")]
  public static extern void PYXGeometry_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_copyTo__SWIG_1")]
  public static extern void PYXGeometry_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_getBoundingRects")]
  public static extern void PYXGeometry_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXGeometry_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXGeometry_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXGeometry_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXGeometry_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometry_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXGeometry_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometry_CSPtr")]
  public static extern void delete_PYXGeometry_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_reset__SWIG_0")]
  public static extern void PYXGeometry_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_reset__SWIG_1")]
  public static extern void PYXGeometry_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_get")]
  public static extern IntPtr PYXGeometry_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr___ref__")]
  public static extern IntPtr PYXGeometry_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr___deref__")]
  public static extern IntPtr PYXGeometry_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_swap")]
  public static extern void PYXGeometry_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_isNull")]
  public static extern bool PYXGeometry_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_isNotNull")]
  public static extern bool PYXGeometry_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_clone")]
  public static extern IntPtr PYXGeometry_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_isCollection")]
  public static extern bool PYXGeometry_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_isEmpty")]
  public static extern bool PYXGeometry_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_getCellResolution")]
  public static extern int PYXGeometry_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGeometry_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGeometry_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXGeometry_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXGeometry_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_contains")]
  public static extern bool PYXGeometry_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_disjunction")]
  public static extern IntPtr PYXGeometry_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_getIterator")]
  public static extern IntPtr PYXGeometry_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGeometry_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_calcPerimeter")]
  public static extern void PYXGeometry_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXGeometry_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXGeometry_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_getBoundingRects")]
  public static extern void PYXGeometry_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXGeometry_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXVectorGeometry2_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXVectorGeometry2_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXVectorGeometry2_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXVectorGeometry2_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorGeometry2_SPtr")]
  public static extern void delete_PYXVectorGeometry2_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_reset__SWIG_0")]
  public static extern void PYXVectorGeometry2_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_reset__SWIG_1")]
  public static extern void PYXVectorGeometry2_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_get")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr___ref__")]
  public static extern IntPtr PYXVectorGeometry2_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr___deref__")]
  public static extern IntPtr PYXVectorGeometry2_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_swap")]
  public static extern void PYXVectorGeometry2_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_isNull")]
  public static extern bool PYXVectorGeometry2_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_isNotNull")]
  public static extern bool PYXVectorGeometry2_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_create__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_create__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_createFromPoint")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_createFromPoint(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_createFromLine")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_createFromLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_deserialize")]
  public static extern void PYXVectorGeometry2_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_serialize__SWIG_0")]
  public static extern void PYXVectorGeometry2_SPtr_serialize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_serialize__SWIG_1")]
  public static extern void PYXVectorGeometry2_SPtr_serialize__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getRegion")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_getRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_clone")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_isEmpty")]
  public static extern bool PYXVectorGeometry2_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getCellResolution")]
  public static extern int PYXVectorGeometry2_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_setCellResolution")]
  public static extern void PYXVectorGeometry2_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersection__SWIG_4")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_contains")]
  public static extern bool PYXVectorGeometry2_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersects__SWIG_0")]
  public static extern bool PYXVectorGeometry2_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_intersects__SWIG_1")]
  public static extern bool PYXVectorGeometry2_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getIterator")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_calcPerimeter")]
  public static extern void PYXVectorGeometry2_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_copyTo__SWIG_0")]
  public static extern void PYXVectorGeometry2_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_copyTo__SWIG_1")]
  public static extern void PYXVectorGeometry2_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_getBoundingRects")]
  public static extern void PYXVectorGeometry2_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_test")]
  public static extern void PYXVectorGeometry2_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_isCollection")]
  public static extern bool PYXVectorGeometry2_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_SPtr_disjunction")]
  public static extern IntPtr PYXVectorGeometry2_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXVectorGeometry2_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXVectorGeometry2_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXVectorGeometry2_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXVectorGeometry2_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorGeometry2_CSPtr")]
  public static extern void delete_PYXVectorGeometry2_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_reset__SWIG_0")]
  public static extern void PYXVectorGeometry2_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_reset__SWIG_1")]
  public static extern void PYXVectorGeometry2_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_get")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr___ref__")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr___deref__")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_swap")]
  public static extern void PYXVectorGeometry2_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_isNull")]
  public static extern bool PYXVectorGeometry2_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_isNotNull")]
  public static extern bool PYXVectorGeometry2_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_serialize__SWIG_0")]
  public static extern void PYXVectorGeometry2_CSPtr_serialize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_serialize__SWIG_1")]
  public static extern void PYXVectorGeometry2_CSPtr_serialize__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getRegion")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_getRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_clone")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_isEmpty")]
  public static extern bool PYXVectorGeometry2_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getCellResolution")]
  public static extern int PYXVectorGeometry2_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersection__SWIG_4")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_contains")]
  public static extern bool PYXVectorGeometry2_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXVectorGeometry2_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXVectorGeometry2_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getIterator")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_calcPerimeter")]
  public static extern void PYXVectorGeometry2_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXVectorGeometry2_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXVectorGeometry2_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_getBoundingRects")]
  public static extern void PYXVectorGeometry2_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_isCollection")]
  public static extern bool PYXVectorGeometry2_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_CSPtr_disjunction")]
  public static extern IntPtr PYXVectorGeometry2_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXGlobalGeometry_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXGlobalGeometry_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXGlobalGeometry_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXGlobalGeometry_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGlobalGeometry_SPtr")]
  public static extern void delete_PYXGlobalGeometry_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_reset__SWIG_0")]
  public static extern void PYXGlobalGeometry_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_reset__SWIG_1")]
  public static extern void PYXGlobalGeometry_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_get")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr___ref__")]
  public static extern IntPtr PYXGlobalGeometry_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr___deref__")]
  public static extern IntPtr PYXGlobalGeometry_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_swap")]
  public static extern void PYXGlobalGeometry_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_isNull")]
  public static extern bool PYXGlobalGeometry_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_isNotNull")]
  public static extern bool PYXGlobalGeometry_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_test")]
  public static extern void PYXGlobalGeometry_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_create__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_clone")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_serialize")]
  public static extern void PYXGlobalGeometry_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_isEmpty")]
  public static extern bool PYXGlobalGeometry_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_getCellResolution")]
  public static extern int PYXGlobalGeometry_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_setCellResolution")]
  public static extern void PYXGlobalGeometry_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_intersects__SWIG_0")]
  public static extern bool PYXGlobalGeometry_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_intersects__SWIG_1")]
  public static extern bool PYXGlobalGeometry_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_getIterator")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_calcPerimeter")]
  public static extern void PYXGlobalGeometry_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_copyTo__SWIG_0")]
  public static extern void PYXGlobalGeometry_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_copyTo__SWIG_1")]
  public static extern void PYXGlobalGeometry_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_isCollection")]
  public static extern bool PYXGlobalGeometry_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_contains")]
  public static extern bool PYXGlobalGeometry_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_disjunction")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGlobalGeometry_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_SPtr_getBoundingRects")]
  public static extern void PYXGlobalGeometry_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXGlobalGeometry_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXGlobalGeometry_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXGlobalGeometry_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXGlobalGeometry_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGlobalGeometry_CSPtr")]
  public static extern void delete_PYXGlobalGeometry_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_reset__SWIG_0")]
  public static extern void PYXGlobalGeometry_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_reset__SWIG_1")]
  public static extern void PYXGlobalGeometry_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_get")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr___ref__")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr___deref__")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_swap")]
  public static extern void PYXGlobalGeometry_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_isNull")]
  public static extern bool PYXGlobalGeometry_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_isNotNull")]
  public static extern bool PYXGlobalGeometry_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_clone")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_serialize")]
  public static extern void PYXGlobalGeometry_CSPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_isEmpty")]
  public static extern bool PYXGlobalGeometry_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_getCellResolution")]
  public static extern int PYXGlobalGeometry_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXGlobalGeometry_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXGlobalGeometry_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_getIterator")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_calcPerimeter")]
  public static extern void PYXGlobalGeometry_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXGlobalGeometry_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXGlobalGeometry_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_isCollection")]
  public static extern bool PYXGlobalGeometry_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_contains")]
  public static extern bool PYXGlobalGeometry_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_disjunction")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGlobalGeometry_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_CSPtr_getBoundingRects")]
  public static extern void PYXGlobalGeometry_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXGeometryCollection_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXGeometryCollection_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXGeometryCollection_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXGeometryCollection_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometryCollection_SPtr")]
  public static extern void delete_PYXGeometryCollection_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_reset__SWIG_0")]
  public static extern void PYXGeometryCollection_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_reset__SWIG_1")]
  public static extern void PYXGeometryCollection_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_get")]
  public static extern IntPtr PYXGeometryCollection_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr___ref__")]
  public static extern IntPtr PYXGeometryCollection_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr___deref__")]
  public static extern IntPtr PYXGeometryCollection_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_swap")]
  public static extern void PYXGeometryCollection_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_isNull")]
  public static extern bool PYXGeometryCollection_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_isNotNull")]
  public static extern bool PYXGeometryCollection_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_isCollection")]
  public static extern bool PYXGeometryCollection_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getIterator")]
  public static extern IntPtr PYXGeometryCollection_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_clear")]
  public static extern void PYXGeometryCollection_SPtr_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_setCellResolution")]
  public static extern void PYXGeometryCollection_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getGeometryCount")]
  public static extern int PYXGeometryCollection_SPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getGeometryIterator")]
  public static extern IntPtr PYXGeometryCollection_SPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getBoundingRects")]
  public static extern void PYXGeometryCollection_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXGeometryCollection_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_clone")]
  public static extern IntPtr PYXGeometryCollection_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_isEmpty")]
  public static extern bool PYXGeometryCollection_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getCellResolution")]
  public static extern int PYXGeometryCollection_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGeometryCollection_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGeometryCollection_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_intersects__SWIG_0")]
  public static extern bool PYXGeometryCollection_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_intersects__SWIG_1")]
  public static extern bool PYXGeometryCollection_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_contains")]
  public static extern bool PYXGeometryCollection_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_disjunction")]
  public static extern IntPtr PYXGeometryCollection_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGeometryCollection_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_calcPerimeter")]
  public static extern void PYXGeometryCollection_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_copyTo__SWIG_0")]
  public static extern void PYXGeometryCollection_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_SPtr_copyTo__SWIG_1")]
  public static extern void PYXGeometryCollection_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXGeometryCollection_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXGeometryCollection_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXGeometryCollection_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryCollection_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXGeometryCollection_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometryCollection_CSPtr")]
  public static extern void delete_PYXGeometryCollection_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_reset__SWIG_0")]
  public static extern void PYXGeometryCollection_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_reset__SWIG_1")]
  public static extern void PYXGeometryCollection_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_get")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr___ref__")]
  public static extern IntPtr PYXGeometryCollection_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr___deref__")]
  public static extern IntPtr PYXGeometryCollection_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_swap")]
  public static extern void PYXGeometryCollection_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_isNull")]
  public static extern bool PYXGeometryCollection_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_isNotNull")]
  public static extern bool PYXGeometryCollection_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_isCollection")]
  public static extern bool PYXGeometryCollection_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getIterator")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getGeometryCount")]
  public static extern int PYXGeometryCollection_CSPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getGeometryIterator")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getBoundingRects")]
  public static extern void PYXGeometryCollection_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_clone")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_isEmpty")]
  public static extern bool PYXGeometryCollection_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getCellResolution")]
  public static extern int PYXGeometryCollection_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXGeometryCollection_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXGeometryCollection_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_contains")]
  public static extern bool PYXGeometryCollection_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_disjunction")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXGeometryCollection_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_calcPerimeter")]
  public static extern void PYXGeometryCollection_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXGeometryCollection_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXGeometryCollection_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXIcosIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXIcosIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXIcosIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXIcosIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosIterator_SPtr")]
  public static extern void delete_PYXIcosIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXIcosIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXIcosIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_get")]
  public static extern IntPtr PYXIcosIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr___ref__")]
  public static extern IntPtr PYXIcosIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr___deref__")]
  public static extern IntPtr PYXIcosIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_swap")]
  public static extern void PYXIcosIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_isNull")]
  public static extern bool PYXIcosIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_isNotNull")]
  public static extern bool PYXIcosIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXIcosIterator_SPtr_create__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXIcosIterator_SPtr_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_next")]
  public static extern void PYXIcosIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_end")]
  public static extern bool PYXIcosIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_getIndex")]
  public static extern IntPtr PYXIcosIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXIcosIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXIcosIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXIcosIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXIcosIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXIcosIterator_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXIcosIterator_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXIcosIterator_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXIcosIterator_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosIterator_CSPtr")]
  public static extern void delete_PYXIcosIterator_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_reset__SWIG_0")]
  public static extern void PYXIcosIterator_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_reset__SWIG_1")]
  public static extern void PYXIcosIterator_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_get")]
  public static extern IntPtr PYXIcosIterator_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr___ref__")]
  public static extern IntPtr PYXIcosIterator_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr___deref__")]
  public static extern IntPtr PYXIcosIterator_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_swap")]
  public static extern void PYXIcosIterator_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_isNull")]
  public static extern bool PYXIcosIterator_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_isNotNull")]
  public static extern bool PYXIcosIterator_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_end")]
  public static extern bool PYXIcosIterator_CSPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_getIndex")]
  public static extern IntPtr PYXIcosIterator_CSPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXIcosIterator_CSPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_CSPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXIcosIterator_CSPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXValueTile_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXValueTile_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXValueTile_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXValueTile_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueTile_SPtr")]
  public static extern void delete_PYXValueTile_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_reset__SWIG_0")]
  public static extern void PYXValueTile_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_reset__SWIG_1")]
  public static extern void PYXValueTile_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_get")]
  public static extern IntPtr PYXValueTile_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr___ref__")]
  public static extern IntPtr PYXValueTile_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr___deref__")]
  public static extern IntPtr PYXValueTile_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_swap")]
  public static extern void PYXValueTile_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isNull")]
  public static extern bool PYXValueTile_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isNotNull")]
  public static extern bool PYXValueTile_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_test")]
  public static extern void PYXValueTile_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_3")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_4")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_4(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_create__SWIG_5")]
  public static extern IntPtr PYXValueTile_SPtr_create__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isValueTileCompatible")]
  public static extern bool PYXValueTile_SPtr_isValueTileCompatible(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getTypeCompatibleValue")]
  public static extern IntPtr PYXValueTile_SPtr_getTypeCompatibleValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_serialize")]
  public static extern void PYXValueTile_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_deserialize")]
  public static extern void PYXValueTile_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getHeapBytes")]
  public static extern int PYXValueTile_SPtr_getHeapBytes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getCacheStatus")]
  public static extern IntPtr PYXValueTile_SPtr_getCacheStatus(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getNumberOfDataChannels")]
  public static extern int PYXValueTile_SPtr_getNumberOfDataChannels(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getNumberOfCells")]
  public static extern int PYXValueTile_SPtr_getNumberOfCells(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getDataChannelType")]
  public static extern int PYXValueTile_SPtr_getDataChannelType(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getDataChannelCount")]
  public static extern int PYXValueTile_SPtr_getDataChannelCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_0")]
  public static extern IntPtr PYXValueTile_SPtr_getValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_1")]
  public static extern IntPtr PYXValueTile_SPtr_getValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_2")]
  public static extern bool PYXValueTile_SPtr_getValue__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_3")]
  public static extern IntPtr PYXValueTile_SPtr_getValue__SWIG_3(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_4")]
  public static extern IntPtr PYXValueTile_SPtr_getValue__SWIG_4(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getValue__SWIG_5")]
  public static extern bool PYXValueTile_SPtr_getValue__SWIG_5(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_setValue__SWIG_0")]
  public static extern void PYXValueTile_SPtr_setValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_setValue__SWIG_1")]
  public static extern void PYXValueTile_SPtr_setValue__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isDirty")]
  public static extern bool PYXValueTile_SPtr_isDirty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isComplete")]
  public static extern bool PYXValueTile_SPtr_isComplete(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_setIsComplete")]
  public static extern void PYXValueTile_SPtr_setIsComplete(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getTile")]
  public static extern IntPtr PYXValueTile_SPtr_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_setTile")]
  public static extern void PYXValueTile_SPtr_setTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_getIterator")]
  public static extern IntPtr PYXValueTile_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_cloneFieldTile")]
  public static extern IntPtr PYXValueTile_SPtr_cloneFieldTile(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_clone")]
  public static extern IntPtr PYXValueTile_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_zoomIn")]
  public static extern IntPtr PYXValueTile_SPtr_zoomIn(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_calcStatistics")]
  public static extern IntPtr PYXValueTile_SPtr_calcStatistics(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_isTileFileComplete")]
  public static extern bool PYXValueTile_SPtr_isTileFileComplete(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_createFromFile")]
  public static extern IntPtr PYXValueTile_SPtr_createFromFile(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_createFromBase64String")]
  public static extern IntPtr PYXValueTile_SPtr_createFromBase64String(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_SPtr_toBase64String")]
  public static extern IntPtr PYXValueTile_SPtr_toBase64String(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXExhaustiveIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXExhaustiveIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXExhaustiveIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXExhaustiveIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXExhaustiveIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXExhaustiveIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXExhaustiveIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXExhaustiveIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXExhaustiveIterator_SPtr")]
  public static extern void delete_PYXExhaustiveIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXExhaustiveIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXExhaustiveIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_get")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr___ref__")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr___deref__")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_swap")]
  public static extern void PYXExhaustiveIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_isNull")]
  public static extern bool PYXExhaustiveIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_isNotNull")]
  public static extern bool PYXExhaustiveIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_create")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr_create(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_test")]
  public static extern void PYXExhaustiveIterator_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_next")]
  public static extern void PYXExhaustiveIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_end")]
  public static extern bool PYXExhaustiveIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_setEnd")]
  public static extern void PYXExhaustiveIterator_SPtr_setEnd(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_getIndex")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXExhaustiveIterator_SPtr_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_setFieldValue__SWIG_0")]
  public static extern void PYXExhaustiveIterator_SPtr_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_SPtr_setFieldValue__SWIG_1")]
  public static extern void PYXExhaustiveIterator_SPtr_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCell_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCell_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCell_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCell_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCell_SPtr")]
  public static extern void delete_PYXCell_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_reset__SWIG_0")]
  public static extern void PYXCell_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_reset__SWIG_1")]
  public static extern void PYXCell_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_get")]
  public static extern IntPtr PYXCell_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr___ref__")]
  public static extern IntPtr PYXCell_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr___deref__")]
  public static extern IntPtr PYXCell_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_swap")]
  public static extern void PYXCell_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_isNull")]
  public static extern bool PYXCell_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_isNotNull")]
  public static extern bool PYXCell_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_test")]
  public static extern void PYXCell_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXCell_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXCell_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXCell_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_setIndex")]
  public static extern void PYXCell_SPtr_setIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getIndex")]
  public static extern IntPtr PYXCell_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_clone")]
  public static extern IntPtr PYXCell_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_isEmpty")]
  public static extern bool PYXCell_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_setEmpty")]
  public static extern void PYXCell_SPtr_setEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getCellResolution")]
  public static extern int PYXCell_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_setCellResolution")]
  public static extern void PYXCell_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXCell_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXCell_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXCell_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersects__SWIG_0")]
  public static extern bool PYXCell_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersects__SWIG_1")]
  public static extern bool PYXCell_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_intersects__SWIG_2")]
  public static extern bool PYXCell_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getIterator")]
  public static extern IntPtr PYXCell_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_calcPerimeter")]
  public static extern void PYXCell_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_copyTo__SWIG_0")]
  public static extern void PYXCell_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_copyTo__SWIG_1")]
  public static extern void PYXCell_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getBoundingRects")]
  public static extern void PYXCell_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXCell_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_isCollection")]
  public static extern bool PYXCell_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_contains")]
  public static extern bool PYXCell_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_disjunction")]
  public static extern IntPtr PYXCell_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXCell_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCell_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCell_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCell_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCell_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCell_CSPtr")]
  public static extern void delete_PYXCell_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_reset__SWIG_0")]
  public static extern void PYXCell_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_reset__SWIG_1")]
  public static extern void PYXCell_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_get")]
  public static extern IntPtr PYXCell_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr___ref__")]
  public static extern IntPtr PYXCell_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr___deref__")]
  public static extern IntPtr PYXCell_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_swap")]
  public static extern void PYXCell_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_isNull")]
  public static extern bool PYXCell_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_isNotNull")]
  public static extern bool PYXCell_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getIndex")]
  public static extern IntPtr PYXCell_CSPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_clone")]
  public static extern IntPtr PYXCell_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_isEmpty")]
  public static extern bool PYXCell_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getCellResolution")]
  public static extern int PYXCell_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXCell_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXCell_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXCell_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXCell_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXCell_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_intersects__SWIG_2")]
  public static extern bool PYXCell_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getIterator")]
  public static extern IntPtr PYXCell_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_calcPerimeter")]
  public static extern void PYXCell_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXCell_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXCell_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getBoundingRects")]
  public static extern void PYXCell_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXCell_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_isCollection")]
  public static extern bool PYXCell_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_contains")]
  public static extern bool PYXCell_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_disjunction")]
  public static extern IntPtr PYXCell_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXCell_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXTile_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXTile_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXTile_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXTile_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTile_SPtr")]
  public static extern void delete_PYXTile_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_reset__SWIG_0")]
  public static extern void PYXTile_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_reset__SWIG_1")]
  public static extern void PYXTile_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_get")]
  public static extern IntPtr PYXTile_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr___ref__")]
  public static extern IntPtr PYXTile_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr___deref__")]
  public static extern IntPtr PYXTile_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_swap")]
  public static extern void PYXTile_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_isNull")]
  public static extern bool PYXTile_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_isNotNull")]
  public static extern bool PYXTile_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_test")]
  public static extern void PYXTile_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_knDefaultTileDepth_get")]
  public static extern int PYXTile_SPtr_knDefaultTileDepth_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXTile_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXTile_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_clone")]
  public static extern IntPtr PYXTile_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_isEmpty")]
  public static extern bool PYXTile_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getCellResolution")]
  public static extern int PYXTile_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_setCellResolution")]
  public static extern void PYXTile_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_setOriginChildRoot")]
  public static extern void PYXTile_SPtr_setOriginChildRoot(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getBoundingCell")]
  public static extern IntPtr PYXTile_SPtr_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getBoundingRects")]
  public static extern void PYXTile_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXTile_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXTile_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXTile_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXTile_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersects__SWIG_0")]
  public static extern bool PYXTile_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersects__SWIG_1")]
  public static extern bool PYXTile_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersects__SWIG_2")]
  public static extern bool PYXTile_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_intersects__SWIG_3")]
  public static extern bool PYXTile_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getIterator")]
  public static extern IntPtr PYXTile_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_calcPerimeter")]
  public static extern void PYXTile_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXTile_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_copyTo__SWIG_0")]
  public static extern void PYXTile_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_copyTo__SWIG_1")]
  public static extern void PYXTile_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_hasIndex")]
  public static extern bool PYXTile_SPtr_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getRootIndex")]
  public static extern IntPtr PYXTile_SPtr_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getDepth")]
  public static extern int PYXTile_SPtr_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getCellCount")]
  public static extern int PYXTile_SPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_isCollection")]
  public static extern bool PYXTile_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_contains")]
  public static extern bool PYXTile_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_disjunction")]
  public static extern IntPtr PYXTile_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXTile_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXTile_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXTile_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXTile_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXTile_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTile_CSPtr")]
  public static extern void delete_PYXTile_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_reset__SWIG_0")]
  public static extern void PYXTile_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_reset__SWIG_1")]
  public static extern void PYXTile_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_get")]
  public static extern IntPtr PYXTile_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr___ref__")]
  public static extern IntPtr PYXTile_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr___deref__")]
  public static extern IntPtr PYXTile_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_swap")]
  public static extern void PYXTile_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_isNull")]
  public static extern bool PYXTile_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_isNotNull")]
  public static extern bool PYXTile_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_knDefaultTileDepth_get")]
  public static extern int PYXTile_CSPtr_knDefaultTileDepth_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_clone")]
  public static extern IntPtr PYXTile_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_isEmpty")]
  public static extern bool PYXTile_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getCellResolution")]
  public static extern int PYXTile_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getBoundingCell")]
  public static extern IntPtr PYXTile_CSPtr_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getBoundingRects")]
  public static extern void PYXTile_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXTile_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXTile_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXTile_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXTile_CSPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXTile_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXTile_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersects__SWIG_2")]
  public static extern bool PYXTile_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_intersects__SWIG_3")]
  public static extern bool PYXTile_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getIterator")]
  public static extern IntPtr PYXTile_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_calcPerimeter")]
  public static extern void PYXTile_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXTile_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXTile_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXTile_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_hasIndex")]
  public static extern bool PYXTile_CSPtr_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getRootIndex")]
  public static extern IntPtr PYXTile_CSPtr_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getDepth")]
  public static extern int PYXTile_CSPtr_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getCellCount")]
  public static extern int PYXTile_CSPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_isCollection")]
  public static extern bool PYXTile_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_contains")]
  public static extern bool PYXTile_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_disjunction")]
  public static extern IntPtr PYXTile_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXTile_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXInnerTile_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXInnerTile_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXInnerTile_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXInnerTile_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerTile_SPtr")]
  public static extern void delete_PYXInnerTile_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_reset__SWIG_0")]
  public static extern void PYXInnerTile_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_reset__SWIG_1")]
  public static extern void PYXInnerTile_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_get")]
  public static extern IntPtr PYXInnerTile_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr___ref__")]
  public static extern IntPtr PYXInnerTile_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr___deref__")]
  public static extern IntPtr PYXInnerTile_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_swap")]
  public static extern void PYXInnerTile_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_isNull")]
  public static extern bool PYXInnerTile_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_isNotNull")]
  public static extern bool PYXInnerTile_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_test")]
  public static extern void PYXInnerTile_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXInnerTile_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXInnerTile_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_covertToInnerTile")]
  public static extern bool PYXInnerTile_SPtr_covertToInnerTile(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_createInnerTiles")]
  public static extern IntPtr PYXInnerTile_SPtr_createInnerTiles(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_clone")]
  public static extern IntPtr PYXInnerTile_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_isEmpty")]
  public static extern bool PYXInnerTile_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_isAncestorOf")]
  public static extern bool PYXInnerTile_SPtr_isAncestorOf(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getCellResolution")]
  public static extern int PYXInnerTile_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_setCellResolution")]
  public static extern void PYXInnerTile_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getBoundingCell")]
  public static extern IntPtr PYXInnerTile_SPtr_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getBoundingRects")]
  public static extern void PYXInnerTile_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXInnerTile_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXInnerTile_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXInnerTile_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXInnerTile_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersects__SWIG_0")]
  public static extern bool PYXInnerTile_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersects__SWIG_1")]
  public static extern bool PYXInnerTile_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersects__SWIG_2")]
  public static extern bool PYXInnerTile_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_intersects__SWIG_3")]
  public static extern bool PYXInnerTile_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getIterator")]
  public static extern IntPtr PYXInnerTile_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_calcPerimeter")]
  public static extern void PYXInnerTile_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXInnerTile_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_copyTo__SWIG_0")]
  public static extern void PYXInnerTile_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_copyTo__SWIG_1")]
  public static extern void PYXInnerTile_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_hasIndex")]
  public static extern bool PYXInnerTile_SPtr_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getRootIndex")]
  public static extern IntPtr PYXInnerTile_SPtr_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getDepth")]
  public static extern int PYXInnerTile_SPtr_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getCellCount")]
  public static extern int PYXInnerTile_SPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_asTile")]
  public static extern IntPtr PYXInnerTile_SPtr_asTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_isCollection")]
  public static extern bool PYXInnerTile_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_contains")]
  public static extern bool PYXInnerTile_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_disjunction")]
  public static extern IntPtr PYXInnerTile_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXInnerTile_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXInnerTile_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXInnerTile_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXInnerTile_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXInnerTile_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerTile_CSPtr")]
  public static extern void delete_PYXInnerTile_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_reset__SWIG_0")]
  public static extern void PYXInnerTile_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_reset__SWIG_1")]
  public static extern void PYXInnerTile_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_get")]
  public static extern IntPtr PYXInnerTile_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr___ref__")]
  public static extern IntPtr PYXInnerTile_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr___deref__")]
  public static extern IntPtr PYXInnerTile_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_swap")]
  public static extern void PYXInnerTile_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_isNull")]
  public static extern bool PYXInnerTile_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_isNotNull")]
  public static extern bool PYXInnerTile_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_clone")]
  public static extern IntPtr PYXInnerTile_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_isEmpty")]
  public static extern bool PYXInnerTile_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getCellResolution")]
  public static extern int PYXInnerTile_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getBoundingCell")]
  public static extern IntPtr PYXInnerTile_CSPtr_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getBoundingRects")]
  public static extern void PYXInnerTile_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXInnerTile_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXInnerTile_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXInnerTile_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXInnerTile_CSPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXInnerTile_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXInnerTile_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersects__SWIG_2")]
  public static extern bool PYXInnerTile_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_intersects__SWIG_3")]
  public static extern bool PYXInnerTile_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getIterator")]
  public static extern IntPtr PYXInnerTile_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_calcPerimeter")]
  public static extern void PYXInnerTile_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXInnerTile_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXInnerTile_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXInnerTile_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_hasIndex")]
  public static extern bool PYXInnerTile_CSPtr_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getRootIndex")]
  public static extern IntPtr PYXInnerTile_CSPtr_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getDepth")]
  public static extern int PYXInnerTile_CSPtr_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getCellCount")]
  public static extern int PYXInnerTile_CSPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_asTile")]
  public static extern IntPtr PYXInnerTile_CSPtr_asTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_isCollection")]
  public static extern bool PYXInnerTile_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_contains")]
  public static extern bool PYXInnerTile_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_disjunction")]
  public static extern IntPtr PYXInnerTile_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXInnerTile_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTileIntersectionIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXInnerTileIntersectionIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTileIntersectionIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXInnerTileIntersectionIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTileIntersectionIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXInnerTileIntersectionIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTileIntersectionIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXInnerTileIntersectionIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerTileIntersectionIterator_SPtr")]
  public static extern void delete_PYXInnerTileIntersectionIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXInnerTileIntersectionIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXInnerTileIntersectionIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_get")]
  public static extern IntPtr PYXInnerTileIntersectionIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr___ref__")]
  public static extern IntPtr PYXInnerTileIntersectionIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr___deref__")]
  public static extern IntPtr PYXInnerTileIntersectionIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_swap")]
  public static extern void PYXInnerTileIntersectionIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_isNull")]
  public static extern bool PYXInnerTileIntersectionIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_isNotNull")]
  public static extern bool PYXInnerTileIntersectionIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_getTile")]
  public static extern IntPtr PYXInnerTileIntersectionIterator_SPtr_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_getIntersection")]
  public static extern int PYXInnerTileIntersectionIterator_SPtr_getIntersection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_intersects")]
  public static extern bool PYXInnerTileIntersectionIterator_SPtr_intersects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_nextTileWithIntersection")]
  public static extern void PYXInnerTileIntersectionIterator_SPtr_nextTileWithIntersection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_next")]
  public static extern void PYXInnerTileIntersectionIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_SPtr_end")]
  public static extern bool PYXInnerTileIntersectionIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCircleGeometry_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCircleGeometry_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCircleGeometry_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCircleGeometry_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleGeometry_SPtr")]
  public static extern void delete_PYXCircleGeometry_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_reset__SWIG_0")]
  public static extern void PYXCircleGeometry_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_reset__SWIG_1")]
  public static extern void PYXCircleGeometry_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_get")]
  public static extern IntPtr PYXCircleGeometry_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr___ref__")]
  public static extern IntPtr PYXCircleGeometry_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr___deref__")]
  public static extern IntPtr PYXCircleGeometry_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_swap")]
  public static extern void PYXCircleGeometry_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_isNull")]
  public static extern bool PYXCircleGeometry_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_isNotNull")]
  public static extern bool PYXCircleGeometry_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_test")]
  public static extern void PYXCircleGeometry_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXCircleGeometry_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXCircleGeometry_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_isEmpty")]
  public static extern bool PYXCircleGeometry_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_setRadius")]
  public static extern void PYXCircleGeometry_SPtr_setRadius(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getRadius")]
  public static extern double PYXCircleGeometry_SPtr_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getCentre")]
  public static extern IntPtr PYXCircleGeometry_SPtr_getCentre(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_clear")]
  public static extern void PYXCircleGeometry_SPtr_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getGeometryCount")]
  public static extern int PYXCircleGeometry_SPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_setCellResolution")]
  public static extern void PYXCircleGeometry_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getCellResolution")]
  public static extern int PYXCircleGeometry_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getGeometryIterator")]
  public static extern IntPtr PYXCircleGeometry_SPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_calcPerimeter")]
  public static extern void PYXCircleGeometry_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_clone")]
  public static extern IntPtr PYXCircleGeometry_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_copyTo__SWIG_0")]
  public static extern void PYXCircleGeometry_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_copyTo__SWIG_1")]
  public static extern void PYXCircleGeometry_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_setCentrePoint")]
  public static extern void PYXCircleGeometry_SPtr_setCentrePoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_serialize")]
  public static extern void PYXCircleGeometry_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_deserialize")]
  public static extern void PYXCircleGeometry_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_intersects__SWIG_0")]
  public static extern bool PYXCircleGeometry_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_intersects__SWIG_1")]
  public static extern bool PYXCircleGeometry_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXCircleGeometry_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXCircleGeometry_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXCircleGeometry_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_isCollection")]
  public static extern bool PYXCircleGeometry_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getIterator")]
  public static extern IntPtr PYXCircleGeometry_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getBoundingRects")]
  public static extern void PYXCircleGeometry_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_contains")]
  public static extern bool PYXCircleGeometry_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_disjunction")]
  public static extern IntPtr PYXCircleGeometry_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXCircleGeometry_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCircleGeometry_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCircleGeometry_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCircleGeometry_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleGeometry_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCircleGeometry_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleGeometry_CSPtr")]
  public static extern void delete_PYXCircleGeometry_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_reset__SWIG_0")]
  public static extern void PYXCircleGeometry_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_reset__SWIG_1")]
  public static extern void PYXCircleGeometry_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_get")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr___ref__")]
  public static extern IntPtr PYXCircleGeometry_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr___deref__")]
  public static extern IntPtr PYXCircleGeometry_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_swap")]
  public static extern void PYXCircleGeometry_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_isNull")]
  public static extern bool PYXCircleGeometry_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_isNotNull")]
  public static extern bool PYXCircleGeometry_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_isEmpty")]
  public static extern bool PYXCircleGeometry_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getRadius")]
  public static extern double PYXCircleGeometry_CSPtr_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getCentre")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_getCentre(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getGeometryCount")]
  public static extern int PYXCircleGeometry_CSPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getCellResolution")]
  public static extern int PYXCircleGeometry_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getGeometryIterator")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_calcPerimeter")]
  public static extern void PYXCircleGeometry_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_clone")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXCircleGeometry_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXCircleGeometry_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_serialize")]
  public static extern void PYXCircleGeometry_CSPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXCircleGeometry_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXCircleGeometry_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_isCollection")]
  public static extern bool PYXCircleGeometry_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getIterator")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getBoundingRects")]
  public static extern void PYXCircleGeometry_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_contains")]
  public static extern bool PYXCircleGeometry_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_disjunction")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXCircleGeometry_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_IRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_IRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_IRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_IRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRegion_SPtr")]
  public static extern void delete_IRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_reset__SWIG_0")]
  public static extern void IRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_reset__SWIG_1")]
  public static extern void IRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_get")]
  public static extern IntPtr IRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr___ref__")]
  public static extern IntPtr IRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr___deref__")]
  public static extern IntPtr IRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_swap")]
  public static extern void IRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_isNull")]
  public static extern bool IRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_isNotNull")]
  public static extern bool IRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_clone")]
  public static extern IntPtr IRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_getVerticesCount")]
  public static extern int IRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_getVisitor")]
  public static extern IntPtr IRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_serializeVisitor")]
  public static extern void IRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_deserializeVisitor__SWIG_0")]
  public static extern IntPtr IRegion_SPtr_deserializeVisitor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_SPtr_deserializeVisitor__SWIG_1")]
  public static extern IntPtr IRegion_SPtr_deserializeVisitor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXVectorRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXVectorRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXVectorRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXVectorRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorRegion_SPtr")]
  public static extern void delete_PYXVectorRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXVectorRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXVectorRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_get")]
  public static extern IntPtr PYXVectorRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr___ref__")]
  public static extern IntPtr PYXVectorRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr___deref__")]
  public static extern IntPtr PYXVectorRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_swap")]
  public static extern void PYXVectorRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_isNull")]
  public static extern bool PYXVectorRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_isNotNull")]
  public static extern bool PYXVectorRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_isPointContained__SWIG_0")]
  public static extern bool PYXVectorRegion_SPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_isPointContained__SWIG_1")]
  public static extern bool PYXVectorRegion_SPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXVectorRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXVectorRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXVectorRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXVectorRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXVectorRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXVectorRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_serializeVisitor")]
  public static extern void PYXVectorRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_deserializeVisitor")]
  public static extern IntPtr PYXVectorRegion_SPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_clone")]
  public static extern IntPtr PYXVectorRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_SPtr_getVerticesCount")]
  public static extern int PYXVectorRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXVectorPointRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXVectorPointRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXVectorPointRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXVectorPointRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorPointRegion_SPtr")]
  public static extern void delete_PYXVectorPointRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXVectorPointRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXVectorPointRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_get")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr___ref__")]
  public static extern IntPtr PYXVectorPointRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr___deref__")]
  public static extern IntPtr PYXVectorPointRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_swap")]
  public static extern void PYXVectorPointRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_isNull")]
  public static extern bool PYXVectorPointRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_isNotNull")]
  public static extern bool PYXVectorPointRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_clone")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getVerticesCount")]
  public static extern int PYXVectorPointRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_serializeVisitor")]
  public static extern void PYXVectorPointRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_deserializeVisitor")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorPointRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorPointRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_isPointContained__SWIG_0")]
  public static extern bool PYXVectorPointRegion_SPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_isPointContained__SWIG_1")]
  public static extern bool PYXVectorPointRegion_SPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_getPoint")]
  public static extern IntPtr PYXVectorPointRegion_SPtr_getPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXVectorPointRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXVectorPointRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXVectorPointRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXVectorPointRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXVectorPointRegion_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXVectorPointRegion_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXVectorPointRegion_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXVectorPointRegion_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorPointRegion_CSPtr")]
  public static extern void delete_PYXVectorPointRegion_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_reset__SWIG_0")]
  public static extern void PYXVectorPointRegion_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_reset__SWIG_1")]
  public static extern void PYXVectorPointRegion_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_get")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr___ref__")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr___deref__")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_swap")]
  public static extern void PYXVectorPointRegion_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_isNull")]
  public static extern bool PYXVectorPointRegion_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_isNotNull")]
  public static extern bool PYXVectorPointRegion_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_clone")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getVerticesCount")]
  public static extern int PYXVectorPointRegion_CSPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getVisitor")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_serializeVisitor")]
  public static extern void PYXVectorPointRegion_CSPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_deserializeVisitor")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorPointRegion_CSPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorPointRegion_CSPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_isPointContained__SWIG_0")]
  public static extern bool PYXVectorPointRegion_CSPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_isPointContained__SWIG_1")]
  public static extern bool PYXVectorPointRegion_CSPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_getPoint")]
  public static extern IntPtr PYXVectorPointRegion_CSPtr_getPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_intersects__SWIG_0")]
  public static extern int PYXVectorPointRegion_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_intersects__SWIG_1")]
  public static extern int PYXVectorPointRegion_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_intersects__SWIG_2")]
  public static extern int PYXVectorPointRegion_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_CSPtr_intersects__SWIG_3")]
  public static extern int PYXVectorPointRegion_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCircleRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCircleRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCircleRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCircleRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleRegion_SPtr")]
  public static extern void delete_PYXCircleRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXCircleRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXCircleRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_get")]
  public static extern IntPtr PYXCircleRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr___ref__")]
  public static extern IntPtr PYXCircleRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr___deref__")]
  public static extern IntPtr PYXCircleRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_swap")]
  public static extern void PYXCircleRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_isNull")]
  public static extern bool PYXCircleRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_isNotNull")]
  public static extern bool PYXCircleRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_clone")]
  public static extern IntPtr PYXCircleRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getVerticesCount")]
  public static extern int PYXCircleRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXCircleRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_serializeVisitor")]
  public static extern void PYXCircleRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_deserializeVisitor")]
  public static extern IntPtr PYXCircleRegion_SPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCircleRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCircleRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_isPointContained__SWIG_0")]
  public static extern bool PYXCircleRegion_SPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_isPointContained__SWIG_1")]
  public static extern bool PYXCircleRegion_SPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXCircleRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXCircleRegion_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXCircleRegion_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXCircleRegion_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getCenter")]
  public static extern IntPtr PYXCircleRegion_SPtr_getCenter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_getRadius")]
  public static extern double PYXCircleRegion_SPtr_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXCircleRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXCircleRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXCircleRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXCircleRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCircleRegion_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCircleRegion_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCircleRegion_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCircleRegion_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleRegion_CSPtr")]
  public static extern void delete_PYXCircleRegion_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_reset__SWIG_0")]
  public static extern void PYXCircleRegion_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_reset__SWIG_1")]
  public static extern void PYXCircleRegion_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_get")]
  public static extern IntPtr PYXCircleRegion_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr___ref__")]
  public static extern IntPtr PYXCircleRegion_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr___deref__")]
  public static extern IntPtr PYXCircleRegion_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_swap")]
  public static extern void PYXCircleRegion_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_isNull")]
  public static extern bool PYXCircleRegion_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_isNotNull")]
  public static extern bool PYXCircleRegion_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_clone")]
  public static extern IntPtr PYXCircleRegion_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getVerticesCount")]
  public static extern int PYXCircleRegion_CSPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getVisitor")]
  public static extern IntPtr PYXCircleRegion_CSPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_serializeVisitor")]
  public static extern void PYXCircleRegion_CSPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_deserializeVisitor")]
  public static extern IntPtr PYXCircleRegion_CSPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCircleRegion_CSPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCircleRegion_CSPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_isPointContained__SWIG_0")]
  public static extern bool PYXCircleRegion_CSPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_isPointContained__SWIG_1")]
  public static extern bool PYXCircleRegion_CSPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXCircleRegion_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getCenter")]
  public static extern IntPtr PYXCircleRegion_CSPtr_getCenter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_getRadius")]
  public static extern double PYXCircleRegion_CSPtr_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_intersects__SWIG_0")]
  public static extern int PYXCircleRegion_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_intersects__SWIG_1")]
  public static extern int PYXCircleRegion_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_intersects__SWIG_2")]
  public static extern int PYXCircleRegion_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_CSPtr_intersects__SWIG_3")]
  public static extern int PYXCircleRegion_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCurveRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCurveRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCurveRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCurveRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCurveRegion_SPtr")]
  public static extern void delete_PYXCurveRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXCurveRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXCurveRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_get")]
  public static extern IntPtr PYXCurveRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr___ref__")]
  public static extern IntPtr PYXCurveRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr___deref__")]
  public static extern IntPtr PYXCurveRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_swap")]
  public static extern void PYXCurveRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_isNull")]
  public static extern bool PYXCurveRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_isNotNull")]
  public static extern bool PYXCurveRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_clone")]
  public static extern IntPtr PYXCurveRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getVerticesCount")]
  public static extern int PYXCurveRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXCurveRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_serializeVisitor")]
  public static extern void PYXCurveRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_deserializeVisitor")]
  public static extern IntPtr PYXCurveRegion_SPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCurveRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCurveRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_isPointContained__SWIG_0")]
  public static extern bool PYXCurveRegion_SPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_isPointContained__SWIG_1")]
  public static extern bool PYXCurveRegion_SPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXCurveRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXCurveRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXCurveRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXCurveRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXCurveRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXCurveRegion_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXCurveRegion_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXCurveRegion_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_create__SWIG_3")]
  public static extern IntPtr PYXCurveRegion_SPtr_create__SWIG_3(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_create__SWIG_4")]
  public static extern IntPtr PYXCurveRegion_SPtr_create__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_closeCurve")]
  public static extern void PYXCurveRegion_SPtr_closeCurve(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_isClosed")]
  public static extern bool PYXCurveRegion_SPtr_isClosed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_getVertex")]
  public static extern IntPtr PYXCurveRegion_SPtr_getVertex(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_SPtr_test")]
  public static extern void PYXCurveRegion_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCurveRegion_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCurveRegion_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCurveRegion_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCurveRegion_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCurveRegion_CSPtr")]
  public static extern void delete_PYXCurveRegion_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_reset__SWIG_0")]
  public static extern void PYXCurveRegion_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_reset__SWIG_1")]
  public static extern void PYXCurveRegion_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_get")]
  public static extern IntPtr PYXCurveRegion_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr___ref__")]
  public static extern IntPtr PYXCurveRegion_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr___deref__")]
  public static extern IntPtr PYXCurveRegion_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_swap")]
  public static extern void PYXCurveRegion_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_isNull")]
  public static extern bool PYXCurveRegion_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_isNotNull")]
  public static extern bool PYXCurveRegion_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_clone")]
  public static extern IntPtr PYXCurveRegion_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getVerticesCount")]
  public static extern int PYXCurveRegion_CSPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getVisitor")]
  public static extern IntPtr PYXCurveRegion_CSPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_serializeVisitor")]
  public static extern void PYXCurveRegion_CSPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_deserializeVisitor")]
  public static extern IntPtr PYXCurveRegion_CSPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCurveRegion_CSPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCurveRegion_CSPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_isPointContained__SWIG_0")]
  public static extern bool PYXCurveRegion_CSPtr_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_isPointContained__SWIG_1")]
  public static extern bool PYXCurveRegion_CSPtr_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_intersects__SWIG_0")]
  public static extern int PYXCurveRegion_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_intersects__SWIG_1")]
  public static extern int PYXCurveRegion_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_intersects__SWIG_2")]
  public static extern int PYXCurveRegion_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_intersects__SWIG_3")]
  public static extern int PYXCurveRegion_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXCurveRegion_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_isClosed")]
  public static extern bool PYXCurveRegion_CSPtr_isClosed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_CSPtr_getVertex")]
  public static extern IntPtr PYXCurveRegion_CSPtr_getVertex(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiCurveRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiCurveRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiCurveRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiCurveRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCurveRegion_SPtr")]
  public static extern void delete_PYXMultiCurveRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXMultiCurveRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXMultiCurveRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_get")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr___ref__")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr___deref__")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_swap")]
  public static extern void PYXMultiCurveRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_isNull")]
  public static extern bool PYXMultiCurveRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_isNotNull")]
  public static extern bool PYXMultiCurveRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_clone")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getVerticesCount")]
  public static extern int PYXMultiCurveRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiCurveRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiCurveRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_isPointContained")]
  public static extern bool PYXMultiCurveRegion_SPtr_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXMultiCurveRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXMultiCurveRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXMultiCurveRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXMultiCurveRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_serializeVisitor")]
  public static extern void PYXMultiCurveRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_deserializeVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getCurveCount")]
  public static extern int PYXMultiCurveRegion_SPtr_getCurveCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getCurveVerticesCount")]
  public static extern int PYXMultiCurveRegion_SPtr_getCurveVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_SPtr_getCurveVertex")]
  public static extern IntPtr PYXMultiCurveRegion_SPtr_getCurveVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiCurveRegion_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiCurveRegion_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiCurveRegion_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCurveRegion_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiCurveRegion_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCurveRegion_CSPtr")]
  public static extern void delete_PYXMultiCurveRegion_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_reset__SWIG_0")]
  public static extern void PYXMultiCurveRegion_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_reset__SWIG_1")]
  public static extern void PYXMultiCurveRegion_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_get")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr___ref__")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr___deref__")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_swap")]
  public static extern void PYXMultiCurveRegion_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_isNull")]
  public static extern bool PYXMultiCurveRegion_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_isNotNull")]
  public static extern bool PYXMultiCurveRegion_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_clone")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getVerticesCount")]
  public static extern int PYXMultiCurveRegion_CSPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiCurveRegion_CSPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiCurveRegion_CSPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_isPointContained")]
  public static extern bool PYXMultiCurveRegion_CSPtr_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_intersects__SWIG_0")]
  public static extern int PYXMultiCurveRegion_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_intersects__SWIG_1")]
  public static extern int PYXMultiCurveRegion_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_intersects__SWIG_2")]
  public static extern int PYXMultiCurveRegion_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_intersects__SWIG_3")]
  public static extern int PYXMultiCurveRegion_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_serializeVisitor")]
  public static extern void PYXMultiCurveRegion_CSPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_deserializeVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getCurveCount")]
  public static extern int PYXMultiCurveRegion_CSPtr_getCurveCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getCurveVerticesCount")]
  public static extern int PYXMultiCurveRegion_CSPtr_getCurveVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_CSPtr_getCurveVertex")]
  public static extern IntPtr PYXMultiCurveRegion_CSPtr_getCurveVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiPolygonRegion_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiPolygonRegion_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiPolygonRegion_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiPolygonRegion_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiPolygonRegion_SPtr")]
  public static extern void delete_PYXMultiPolygonRegion_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_reset__SWIG_0")]
  public static extern void PYXMultiPolygonRegion_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_reset__SWIG_1")]
  public static extern void PYXMultiPolygonRegion_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_get")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr___ref__")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr___deref__")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_swap")]
  public static extern void PYXMultiPolygonRegion_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_isNull")]
  public static extern bool PYXMultiPolygonRegion_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_isNotNull")]
  public static extern bool PYXMultiPolygonRegion_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_clone")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getVerticesCount")]
  public static extern int PYXMultiPolygonRegion_SPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getVisitor")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiPolygonRegion_SPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiPolygonRegion_SPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_isPointContained")]
  public static extern bool PYXMultiPolygonRegion_SPtr_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_intersects__SWIG_0")]
  public static extern int PYXMultiPolygonRegion_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_intersects__SWIG_1")]
  public static extern int PYXMultiPolygonRegion_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_intersects__SWIG_2")]
  public static extern int PYXMultiPolygonRegion_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_intersects__SWIG_3")]
  public static extern int PYXMultiPolygonRegion_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_serializeVisitor")]
  public static extern void PYXMultiPolygonRegion_SPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_deserializeVisitor__SWIG_0")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_deserializeVisitor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_deserializeVisitor__SWIG_1")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_deserializeVisitor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getExteriorPoint")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_getExteriorPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getExteriorPointContained")]
  public static extern bool PYXMultiPolygonRegion_SPtr_getExteriorPointContained(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getRingsCount")]
  public static extern int PYXMultiPolygonRegion_SPtr_getRingsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getRingVerticesCount")]
  public static extern int PYXMultiPolygonRegion_SPtr_getRingVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_SPtr_getRingVertex")]
  public static extern IntPtr PYXMultiPolygonRegion_SPtr_getRingVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiPolygonRegion_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiPolygonRegion_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiPolygonRegion_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiPolygonRegion_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiPolygonRegion_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiPolygonRegion_CSPtr")]
  public static extern void delete_PYXMultiPolygonRegion_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_reset__SWIG_0")]
  public static extern void PYXMultiPolygonRegion_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_reset__SWIG_1")]
  public static extern void PYXMultiPolygonRegion_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_get")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr___ref__")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr___deref__")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_swap")]
  public static extern void PYXMultiPolygonRegion_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_isNull")]
  public static extern bool PYXMultiPolygonRegion_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_isNotNull")]
  public static extern bool PYXMultiPolygonRegion_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_clone")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getVerticesCount")]
  public static extern int PYXMultiPolygonRegion_CSPtr_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getVisitor")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiPolygonRegion_CSPtr_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiPolygonRegion_CSPtr_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_isPointContained")]
  public static extern bool PYXMultiPolygonRegion_CSPtr_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_intersects__SWIG_0")]
  public static extern int PYXMultiPolygonRegion_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_intersects__SWIG_1")]
  public static extern int PYXMultiPolygonRegion_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_intersects__SWIG_2")]
  public static extern int PYXMultiPolygonRegion_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_intersects__SWIG_3")]
  public static extern int PYXMultiPolygonRegion_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_serializeVisitor")]
  public static extern void PYXMultiPolygonRegion_CSPtr_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_deserializeVisitor__SWIG_0")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_deserializeVisitor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_deserializeVisitor__SWIG_1")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_deserializeVisitor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getExteriorPoint")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_getExteriorPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getExteriorPointContained")]
  public static extern bool PYXMultiPolygonRegion_CSPtr_getExteriorPointContained(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getRingsCount")]
  public static extern int PYXMultiPolygonRegion_CSPtr_getRingsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getRingVerticesCount")]
  public static extern int PYXMultiPolygonRegion_CSPtr_getRingVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_CSPtr_getRingVertex")]
  public static extern IntPtr PYXMultiPolygonRegion_CSPtr_getRingVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXTileCollection_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXTileCollection_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXTileCollection_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXTileCollection_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTileCollection_SPtr")]
  public static extern void delete_PYXTileCollection_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_reset__SWIG_0")]
  public static extern void PYXTileCollection_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_reset__SWIG_1")]
  public static extern void PYXTileCollection_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_get")]
  public static extern IntPtr PYXTileCollection_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr___ref__")]
  public static extern IntPtr PYXTileCollection_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr___deref__")]
  public static extern IntPtr PYXTileCollection_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_swap")]
  public static extern void PYXTileCollection_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_isNull")]
  public static extern bool PYXTileCollection_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_isNotNull")]
  public static extern bool PYXTileCollection_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_test")]
  public static extern void PYXTileCollection_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXTileCollection_SPtr_create__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXTileCollection_SPtr_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXTileCollection_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_create__SWIG_3")]
  public static extern IntPtr PYXTileCollection_SPtr_create__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_create__SWIG_4")]
  public static extern IntPtr PYXTileCollection_SPtr_create__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_clone")]
  public static extern IntPtr PYXTileCollection_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_serialize")]
  public static extern void PYXTileCollection_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_deserialize")]
  public static extern void PYXTileCollection_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_isEmpty")]
  public static extern bool PYXTileCollection_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_clear")]
  public static extern void PYXTileCollection_SPtr_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getCellResolution")]
  public static extern int PYXTileCollection_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_setCellResolution")]
  public static extern void PYXTileCollection_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXTileCollection_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXTileCollection_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXTileCollection_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXTileCollection_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersection__SWIG_4")]
  public static extern IntPtr PYXTileCollection_SPtr_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_0")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_1")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_2")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_3")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_4")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_intersects__SWIG_5")]
  public static extern bool PYXTileCollection_SPtr_intersects__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_contains__SWIG_0")]
  public static extern bool PYXTileCollection_SPtr_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_contains__SWIG_1")]
  public static extern bool PYXTileCollection_SPtr_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_disjunction__SWIG_0")]
  public static extern IntPtr PYXTileCollection_SPtr_disjunction__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_disjunction__SWIG_1")]
  public static extern IntPtr PYXTileCollection_SPtr_disjunction__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getGeometryCount")]
  public static extern int PYXTileCollection_SPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getGeometryIterator")]
  public static extern IntPtr PYXTileCollection_SPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getTileIterator")]
  public static extern IntPtr PYXTileCollection_SPtr_getTileIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXTileCollection_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_calcPerimeter")]
  public static extern void PYXTileCollection_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_copyTo__SWIG_0")]
  public static extern void PYXTileCollection_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_copyTo__SWIG_1")]
  public static extern void PYXTileCollection_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXTileCollection_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_addTile__SWIG_0")]
  public static extern void PYXTileCollection_SPtr_addTile__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_addTile__SWIG_1")]
  public static extern void PYXTileCollection_SPtr_addTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_addTile__SWIG_2")]
  public static extern void PYXTileCollection_SPtr_addTile__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_addGeometry")]
  public static extern void PYXTileCollection_SPtr_addGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getAutoAggregate")]
  public static extern bool PYXTileCollection_SPtr_getAutoAggregate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_isEqual")]
  public static extern bool PYXTileCollection_SPtr_isEqual(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_limitCellsCountTo")]
  public static extern void PYXTileCollection_SPtr_limitCellsCountTo(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getCellCount")]
  public static extern int PYXTileCollection_SPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getAreaOnReferenceShpere")]
  public static extern double PYXTileCollection_SPtr_getAreaOnReferenceShpere(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_isCollection")]
  public static extern bool PYXTileCollection_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getIterator")]
  public static extern IntPtr PYXTileCollection_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_SPtr_getBoundingRects")]
  public static extern void PYXTileCollection_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXTileCollection_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXTileCollection_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXTileCollection_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXTileCollection_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTileCollection_CSPtr")]
  public static extern void delete_PYXTileCollection_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_reset__SWIG_0")]
  public static extern void PYXTileCollection_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_reset__SWIG_1")]
  public static extern void PYXTileCollection_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_get")]
  public static extern IntPtr PYXTileCollection_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr___ref__")]
  public static extern IntPtr PYXTileCollection_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr___deref__")]
  public static extern IntPtr PYXTileCollection_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_swap")]
  public static extern void PYXTileCollection_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_isNull")]
  public static extern bool PYXTileCollection_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_isNotNull")]
  public static extern bool PYXTileCollection_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_clone")]
  public static extern IntPtr PYXTileCollection_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_serialize")]
  public static extern void PYXTileCollection_CSPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_isEmpty")]
  public static extern bool PYXTileCollection_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getCellResolution")]
  public static extern int PYXTileCollection_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXTileCollection_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXTileCollection_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXTileCollection_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXTileCollection_CSPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersection__SWIG_4")]
  public static extern IntPtr PYXTileCollection_CSPtr_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_2")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_3")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_4")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_intersects__SWIG_5")]
  public static extern bool PYXTileCollection_CSPtr_intersects__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_contains__SWIG_0")]
  public static extern bool PYXTileCollection_CSPtr_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_contains__SWIG_1")]
  public static extern bool PYXTileCollection_CSPtr_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_disjunction__SWIG_0")]
  public static extern IntPtr PYXTileCollection_CSPtr_disjunction__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_disjunction__SWIG_1")]
  public static extern IntPtr PYXTileCollection_CSPtr_disjunction__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getGeometryCount")]
  public static extern int PYXTileCollection_CSPtr_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getGeometryIterator")]
  public static extern IntPtr PYXTileCollection_CSPtr_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getTileIterator")]
  public static extern IntPtr PYXTileCollection_CSPtr_getTileIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXTileCollection_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_calcPerimeter")]
  public static extern void PYXTileCollection_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXTileCollection_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXTileCollection_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXTileCollection_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getAutoAggregate")]
  public static extern bool PYXTileCollection_CSPtr_getAutoAggregate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getCellCount")]
  public static extern int PYXTileCollection_CSPtr_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getAreaOnReferenceShpere")]
  public static extern double PYXTileCollection_CSPtr_getAreaOnReferenceShpere(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_isCollection")]
  public static extern bool PYXTileCollection_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getIterator")]
  public static extern IntPtr PYXTileCollection_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_CSPtr_getBoundingRects")]
  public static extern void PYXTileCollection_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiCell_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiCell_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiCell_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiCell_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCell_SPtr")]
  public static extern void delete_PYXMultiCell_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_reset__SWIG_0")]
  public static extern void PYXMultiCell_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_reset__SWIG_1")]
  public static extern void PYXMultiCell_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_get")]
  public static extern IntPtr PYXMultiCell_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr___ref__")]
  public static extern IntPtr PYXMultiCell_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr___deref__")]
  public static extern IntPtr PYXMultiCell_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_swap")]
  public static extern void PYXMultiCell_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_isNull")]
  public static extern bool PYXMultiCell_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_isNotNull")]
  public static extern bool PYXMultiCell_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_test")]
  public static extern void PYXMultiCell_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXMultiCell_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXMultiCell_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_addIndex")]
  public static extern void PYXMultiCell_SPtr_addIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_addCell")]
  public static extern void PYXMultiCell_SPtr_addCell(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_clone")]
  public static extern IntPtr PYXMultiCell_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_isEmpty")]
  public static extern bool PYXMultiCell_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_setEmpty")]
  public static extern void PYXMultiCell_SPtr_setEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_getCellResolution")]
  public static extern int PYXMultiCell_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_setCellResolution")]
  public static extern void PYXMultiCell_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXMultiCell_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXMultiCell_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXMultiCell_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXMultiCell_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersects__SWIG_0")]
  public static extern bool PYXMultiCell_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersects__SWIG_1")]
  public static extern bool PYXMultiCell_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersects__SWIG_2")]
  public static extern bool PYXMultiCell_SPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_intersects__SWIG_3")]
  public static extern bool PYXMultiCell_SPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_getIterator")]
  public static extern IntPtr PYXMultiCell_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_calcPerimeter")]
  public static extern void PYXMultiCell_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_copyTo__SWIG_0")]
  public static extern void PYXMultiCell_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_copyTo__SWIG_1")]
  public static extern void PYXMultiCell_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiCell_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_isCollection")]
  public static extern bool PYXMultiCell_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_contains")]
  public static extern bool PYXMultiCell_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_disjunction")]
  public static extern IntPtr PYXMultiCell_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXMultiCell_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_SPtr_getBoundingRects")]
  public static extern void PYXMultiCell_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXMultiCell_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXMultiCell_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXMultiCell_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXMultiCell_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCell_CSPtr")]
  public static extern void delete_PYXMultiCell_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_reset__SWIG_0")]
  public static extern void PYXMultiCell_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_reset__SWIG_1")]
  public static extern void PYXMultiCell_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_get")]
  public static extern IntPtr PYXMultiCell_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr___ref__")]
  public static extern IntPtr PYXMultiCell_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr___deref__")]
  public static extern IntPtr PYXMultiCell_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_swap")]
  public static extern void PYXMultiCell_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_isNull")]
  public static extern bool PYXMultiCell_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_isNotNull")]
  public static extern bool PYXMultiCell_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_clone")]
  public static extern IntPtr PYXMultiCell_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_isEmpty")]
  public static extern bool PYXMultiCell_CSPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_getCellResolution")]
  public static extern int PYXMultiCell_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXMultiCell_CSPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXMultiCell_CSPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXMultiCell_CSPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXMultiCell_CSPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersects__SWIG_0")]
  public static extern bool PYXMultiCell_CSPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersects__SWIG_1")]
  public static extern bool PYXMultiCell_CSPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersects__SWIG_2")]
  public static extern bool PYXMultiCell_CSPtr_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_intersects__SWIG_3")]
  public static extern bool PYXMultiCell_CSPtr_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_getIterator")]
  public static extern IntPtr PYXMultiCell_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_calcPerimeter")]
  public static extern void PYXMultiCell_CSPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_copyTo__SWIG_0")]
  public static extern void PYXMultiCell_CSPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_copyTo__SWIG_1")]
  public static extern void PYXMultiCell_CSPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_getBoundingCircle")]
  public static extern IntPtr PYXMultiCell_CSPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_isCollection")]
  public static extern bool PYXMultiCell_CSPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_contains")]
  public static extern bool PYXMultiCell_CSPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_disjunction")]
  public static extern IntPtr PYXMultiCell_CSPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_getInnerTileIterator")]
  public static extern IntPtr PYXMultiCell_CSPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_CSPtr_getBoundingRects")]
  public static extern void PYXMultiCell_CSPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollectionIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXTileCollectionIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollectionIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXTileCollectionIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollectionIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXTileCollectionIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollectionIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXTileCollectionIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTileCollectionIterator_SPtr")]
  public static extern void delete_PYXTileCollectionIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_reset__SWIG_0")]
  public static extern void PYXTileCollectionIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_reset__SWIG_1")]
  public static extern void PYXTileCollectionIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_get")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr___ref__")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr___deref__")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_swap")]
  public static extern void PYXTileCollectionIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_isNull")]
  public static extern bool PYXTileCollectionIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_isNotNull")]
  public static extern bool PYXTileCollectionIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_create")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_next")]
  public static extern void PYXTileCollectionIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_end")]
  public static extern bool PYXTileCollectionIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_getGeometry")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_SPtr_getTile")]
  public static extern IntPtr PYXTileCollectionIterator_SPtr_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhere_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXWhere_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhere_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXWhere_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhere_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXWhere_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhere_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXWhere_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXWhere_SPtr")]
  public static extern void delete_PYXWhere_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_reset__SWIG_0")]
  public static extern void PYXWhere_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_reset__SWIG_1")]
  public static extern void PYXWhere_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_get")]
  public static extern IntPtr PYXWhere_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr___ref__")]
  public static extern IntPtr PYXWhere_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr___deref__")]
  public static extern IntPtr PYXWhere_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_swap")]
  public static extern void PYXWhere_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_isNull")]
  public static extern bool PYXWhere_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_isNotNull")]
  public static extern bool PYXWhere_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXWhere_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXWhere_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_intersect__SWIG_0")]
  public static extern IntPtr PYXWhere_SPtr_intersect__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_intersect__SWIG_1")]
  public static extern IntPtr PYXWhere_SPtr_intersect__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_intersect__SWIG_2")]
  public static extern IntPtr PYXWhere_SPtr_intersect__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_intersect__SWIG_3")]
  public static extern IntPtr PYXWhere_SPtr_intersect__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_intersect__SWIG_4")]
  public static extern IntPtr PYXWhere_SPtr_intersect__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_subtract__SWIG_0")]
  public static extern IntPtr PYXWhere_SPtr_subtract__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_subtract__SWIG_1")]
  public static extern IntPtr PYXWhere_SPtr_subtract__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_subtract__SWIG_2")]
  public static extern IntPtr PYXWhere_SPtr_subtract__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_subtract__SWIG_3")]
  public static extern IntPtr PYXWhere_SPtr_subtract__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_subtract__SWIG_4")]
  public static extern IntPtr PYXWhere_SPtr_subtract__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_disjunct__SWIG_0")]
  public static extern IntPtr PYXWhere_SPtr_disjunct__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_disjunct__SWIG_1")]
  public static extern IntPtr PYXWhere_SPtr_disjunct__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_disjunct__SWIG_2")]
  public static extern IntPtr PYXWhere_SPtr_disjunct__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_disjunct__SWIG_3")]
  public static extern IntPtr PYXWhere_SPtr_disjunct__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_disjunct__SWIG_4")]
  public static extern IntPtr PYXWhere_SPtr_disjunct__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_on__SWIG_0")]
  public static extern IntPtr PYXWhere_SPtr_on__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_on__SWIG_1")]
  public static extern IntPtr PYXWhere_SPtr_on__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_SPtr_on__SWIG_2")]
  public static extern IntPtr PYXWhere_SPtr_on__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhereCondition_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXWhereCondition_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhereCondition_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXWhereCondition_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhereCondition_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXWhereCondition_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXWhereCondition_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXWhereCondition_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXWhereCondition_SPtr")]
  public static extern void delete_PYXWhereCondition_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_reset__SWIG_0")]
  public static extern void PYXWhereCondition_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_reset__SWIG_1")]
  public static extern void PYXWhereCondition_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_get")]
  public static extern IntPtr PYXWhereCondition_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr___ref__")]
  public static extern IntPtr PYXWhereCondition_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr___deref__")]
  public static extern IntPtr PYXWhereCondition_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_swap")]
  public static extern void PYXWhereCondition_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_isNull")]
  public static extern bool PYXWhereCondition_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_isNotNull")]
  public static extern bool PYXWhereCondition_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_match__SWIG_0")]
  public static extern bool PYXWhereCondition_SPtr_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_match__SWIG_1")]
  public static extern IntPtr PYXWhereCondition_SPtr_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_coverageHasValues")]
  public static extern IntPtr PYXWhereCondition_SPtr_coverageHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_featuresHasValues")]
  public static extern IntPtr PYXWhereCondition_SPtr_featuresHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_SPtr_geometry")]
  public static extern IntPtr PYXWhereCondition_SPtr_geometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoverageWhereCondition_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCoverageWhereCondition_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoverageWhereCondition_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCoverageWhereCondition_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoverageWhereCondition_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCoverageWhereCondition_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoverageWhereCondition_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCoverageWhereCondition_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoverageWhereCondition_SPtr")]
  public static extern void delete_PYXCoverageWhereCondition_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_reset__SWIG_0")]
  public static extern void PYXCoverageWhereCondition_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_reset__SWIG_1")]
  public static extern void PYXCoverageWhereCondition_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_get")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr___ref__")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr___deref__")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_swap")]
  public static extern void PYXCoverageWhereCondition_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_isNull")]
  public static extern bool PYXCoverageWhereCondition_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_isNotNull")]
  public static extern bool PYXCoverageWhereCondition_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_match__SWIG_0")]
  public static extern bool PYXCoverageWhereCondition_SPtr_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_match__SWIG_1")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_create")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_range")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_range(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_coverageHasValues")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_coverageHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_featuresHasValues")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_featuresHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_SPtr_geometry")]
  public static extern IntPtr PYXCoverageWhereCondition_SPtr_geometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeaturesWhereCondition_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXFeaturesWhereCondition_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeaturesWhereCondition_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXFeaturesWhereCondition_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeaturesWhereCondition_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXFeaturesWhereCondition_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeaturesWhereCondition_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXFeaturesWhereCondition_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFeaturesWhereCondition_SPtr")]
  public static extern void delete_PYXFeaturesWhereCondition_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_reset__SWIG_0")]
  public static extern void PYXFeaturesWhereCondition_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_reset__SWIG_1")]
  public static extern void PYXFeaturesWhereCondition_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_get")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr___ref__")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr___deref__")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_swap")]
  public static extern void PYXFeaturesWhereCondition_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_isNull")]
  public static extern bool PYXFeaturesWhereCondition_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_isNotNull")]
  public static extern bool PYXFeaturesWhereCondition_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_match__SWIG_0")]
  public static extern bool PYXFeaturesWhereCondition_SPtr_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_match__SWIG_1")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_create")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_field")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_field(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_range")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_range(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_coverageHasValues")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_coverageHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_featuresHasValues")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_featuresHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_SPtr_geometry")]
  public static extern IntPtr PYXFeaturesWhereCondition_SPtr_geometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryWhereCondition_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXGeometryWhereCondition_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryWhereCondition_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXGeometryWhereCondition_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryWhereCondition_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXGeometryWhereCondition_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometryWhereCondition_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXGeometryWhereCondition_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometryWhereCondition_SPtr")]
  public static extern void delete_PYXGeometryWhereCondition_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_reset__SWIG_0")]
  public static extern void PYXGeometryWhereCondition_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_reset__SWIG_1")]
  public static extern void PYXGeometryWhereCondition_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_get")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr___ref__")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr___deref__")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_swap")]
  public static extern void PYXGeometryWhereCondition_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_isNull")]
  public static extern bool PYXGeometryWhereCondition_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_isNotNull")]
  public static extern bool PYXGeometryWhereCondition_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_match__SWIG_0")]
  public static extern bool PYXGeometryWhereCondition_SPtr_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_match__SWIG_1")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_create")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_coverageHasValues")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_coverageHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_featuresHasValues")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_featuresHasValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_SPtr_geometry")]
  public static extern IntPtr PYXGeometryWhereCondition_SPtr_geometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpFunctionProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_CSharpFunctionProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpFunctionProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_CSharpFunctionProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpFunctionProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_CSharpFunctionProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpFunctionProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_CSharpFunctionProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CSharpFunctionProvider_SPtr")]
  public static extern void delete_CSharpFunctionProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_reset__SWIG_0")]
  public static extern void CSharpFunctionProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_reset__SWIG_1")]
  public static extern void CSharpFunctionProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_get")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr___ref__")]
  public static extern IntPtr CSharpFunctionProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr___deref__")]
  public static extern IntPtr CSharpFunctionProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_swap")]
  public static extern void CSharpFunctionProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_isNull")]
  public static extern bool CSharpFunctionProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_isNotNull")]
  public static extern bool CSharpFunctionProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_applyXsltTransform")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_applyXsltTransform(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_doesXPathMatch")]
  public static extern bool CSharpFunctionProvider_SPtr_doesXPathMatch(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_isWellFormedURI")]
  public static extern bool CSharpFunctionProvider_SPtr_isWellFormedURI(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_setDefaultValueForUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_setDefaultValueForUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_overwriteUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_overwriteUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_removeUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_removeUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getUrlHost")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getUrlHost(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_XMLSerialize")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_XMLSerialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_XMLDeserialize")]
  public static extern bool CSharpFunctionProvider_SPtr_XMLDeserialize(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getSerializedManifest")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getSerializedManifest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getSerializedManifestForFile")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getSerializedManifestForFile(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getIdentity")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getIdentity(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_release")]
  public static extern int CSharpFunctionProvider_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_addRef")]
  public static extern int CSharpFunctionProvider_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_getCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_SPtr_getCSharpFunctionProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_SPtr_setCSharpFunctionProvider")]
  public static extern void CSharpFunctionProvider_SPtr_setCSharpFunctionProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpXMLDocProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_CSharpXMLDocProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpXMLDocProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_CSharpXMLDocProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpXMLDocProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_CSharpXMLDocProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpXMLDocProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_CSharpXMLDocProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CSharpXMLDocProvider_SPtr")]
  public static extern void delete_CSharpXMLDocProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_reset__SWIG_0")]
  public static extern void CSharpXMLDocProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_reset__SWIG_1")]
  public static extern void CSharpXMLDocProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_get")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr___ref__")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr___deref__")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_swap")]
  public static extern void CSharpXMLDocProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_isNull")]
  public static extern bool CSharpXMLDocProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_isNotNull")]
  public static extern bool CSharpXMLDocProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_createDocument")]
  public static extern int CSharpXMLDocProvider_SPtr_createDocument(HandleRef jarg1, IntPtr jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_destroyDocument")]
  public static extern void CSharpXMLDocProvider_SPtr_destroyDocument(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_saveToFile")]
  public static extern void CSharpXMLDocProvider_SPtr_saveToFile(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getNodesCount")]
  public static extern int CSharpXMLDocProvider_SPtr_getNodesCount(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_hasNode")]
  public static extern bool CSharpXMLDocProvider_SPtr_hasNode(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_setNodeText")]
  public static extern void CSharpXMLDocProvider_SPtr_setNodeText(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getNodeText")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_getNodeText(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getInnerXMLString")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_getInnerXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_setInnerXMLString")]
  public static extern void CSharpXMLDocProvider_SPtr_setInnerXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getOuterXMLString")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_getOuterXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_removeNode")]
  public static extern void CSharpXMLDocProvider_SPtr_removeNode(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_addChild")]
  public static extern void CSharpXMLDocProvider_SPtr_addChild(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_addChildWithInnerText")]
  public static extern void CSharpXMLDocProvider_SPtr_addChildWithInnerText(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_hasAttribute")]
  public static extern bool CSharpXMLDocProvider_SPtr_hasAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getAttributeValue")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_getAttributeValue(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_setAttributeValue")]
  public static extern void CSharpXMLDocProvider_SPtr_setAttributeValue(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_addAttribute")]
  public static extern void CSharpXMLDocProvider_SPtr_addAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_removeAttribute")]
  public static extern void CSharpXMLDocProvider_SPtr_removeAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_addNamespace")]
  public static extern void CSharpXMLDocProvider_SPtr_addNamespace(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_release")]
  public static extern int CSharpXMLDocProvider_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_addRef")]
  public static extern int CSharpXMLDocProvider_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_getCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_SPtr_getCSharpXMLDocProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_SPtr_setCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_SPtr_setCSharpXMLDocProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpRequestProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_HttpRequestProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpRequestProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_HttpRequestProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpRequestProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_HttpRequestProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpRequestProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_HttpRequestProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_HttpRequestProvider_SPtr")]
  public static extern void delete_HttpRequestProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_reset__SWIG_0")]
  public static extern void HttpRequestProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_reset__SWIG_1")]
  public static extern void HttpRequestProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_get")]
  public static extern IntPtr HttpRequestProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr___ref__")]
  public static extern IntPtr HttpRequestProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr___deref__")]
  public static extern IntPtr HttpRequestProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_swap")]
  public static extern void HttpRequestProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_isNull")]
  public static extern bool HttpRequestProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_isNotNull")]
  public static extern bool HttpRequestProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_createRequest__SWIG_0")]
  public static extern int HttpRequestProvider_SPtr_createRequest__SWIG_0(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_createRequest__SWIG_1")]
  public static extern int HttpRequestProvider_SPtr_createRequest__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_destroyRequest")]
  public static extern void HttpRequestProvider_SPtr_destroyRequest(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_getResponse")]
  public static extern bool HttpRequestProvider_SPtr_getResponse(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_getResponseBody")]
  public static extern IntPtr HttpRequestProvider_SPtr_getResponseBody(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_downloadResponse")]
  public static extern bool HttpRequestProvider_SPtr_downloadResponse(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_addRequestBody")]
  public static extern void HttpRequestProvider_SPtr_addRequestBody(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_addRequestHeader")]
  public static extern void HttpRequestProvider_SPtr_addRequestHeader(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_release")]
  public static extern int HttpRequestProvider_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_addRef")]
  public static extern int HttpRequestProvider_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_getHttpRequestProvider")]
  public static extern IntPtr HttpRequestProvider_SPtr_getHttpRequestProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_SPtr_setHttpRequestProvider")]
  public static extern void HttpRequestProvider_SPtr_setHttpRequestProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ChecksumCalculator_SPtr__SWIG_0")]
  public static extern IntPtr new_ChecksumCalculator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ChecksumCalculator_SPtr__SWIG_1")]
  public static extern IntPtr new_ChecksumCalculator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ChecksumCalculator_SPtr__SWIG_2")]
  public static extern IntPtr new_ChecksumCalculator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ChecksumCalculator_SPtr__SWIG_3")]
  public static extern IntPtr new_ChecksumCalculator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ChecksumCalculator_SPtr")]
  public static extern void delete_ChecksumCalculator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_reset__SWIG_0")]
  public static extern void ChecksumCalculator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_reset__SWIG_1")]
  public static extern void ChecksumCalculator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_get")]
  public static extern IntPtr ChecksumCalculator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr___ref__")]
  public static extern IntPtr ChecksumCalculator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr___deref__")]
  public static extern IntPtr ChecksumCalculator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_swap")]
  public static extern void ChecksumCalculator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_isNull")]
  public static extern bool ChecksumCalculator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_isNotNull")]
  public static extern bool ChecksumCalculator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_calculateCheckSum")]
  public static extern IntPtr ChecksumCalculator_SPtr_calculateCheckSum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_calculateFileCheckSum")]
  public static extern IntPtr ChecksumCalculator_SPtr_calculateFileCheckSum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_findFileMatchingChecksum")]
  public static extern IntPtr ChecksumCalculator_SPtr_findFileMatchingChecksum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_getChecksumCalculator")]
  public static extern IntPtr ChecksumCalculator_SPtr_getChecksumCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_setChecksumCalculator")]
  public static extern void ChecksumCalculator_SPtr_setChecksumCalculator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_release")]
  public static extern int ChecksumCalculator_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_SPtr_addRef")]
  public static extern int ChecksumCalculator_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessSpec_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessSpec_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessSpec_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessSpec_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessSpec_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessSpec_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessSpec_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessSpec_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessSpec_SPtr")]
  public static extern void delete_ProcessSpec_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_reset__SWIG_0")]
  public static extern void ProcessSpec_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_reset__SWIG_1")]
  public static extern void ProcessSpec_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_get")]
  public static extern IntPtr ProcessSpec_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr___ref__")]
  public static extern IntPtr ProcessSpec_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr___deref__")]
  public static extern IntPtr ProcessSpec_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_swap")]
  public static extern void ProcessSpec_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_isNull")]
  public static extern bool ProcessSpec_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_isNotNull")]
  public static extern bool ProcessSpec_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_create__SWIG_0")]
  public static extern IntPtr ProcessSpec_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4, IntPtr jarg5, IntPtr jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_create__SWIG_1")]
  public static extern IntPtr ProcessSpec_SPtr_create__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_write__SWIG_0")]
  public static extern void ProcessSpec_SPtr_write__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_write__SWIG_1")]
  public static extern IntPtr ProcessSpec_SPtr_write__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_read__SWIG_0")]
  public static extern void ProcessSpec_SPtr_read__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_read__SWIG_1")]
  public static extern void ProcessSpec_SPtr_read__SWIG_1(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getOutputInterfaces")]
  public static extern IntPtr ProcessSpec_SPtr_getOutputInterfaces(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getClass")]
  public static extern IntPtr ProcessSpec_SPtr_getClass(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getParameterCount")]
  public static extern int ProcessSpec_SPtr_getParameterCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getParameter")]
  public static extern IntPtr ProcessSpec_SPtr_getParameter(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getName")]
  public static extern IntPtr ProcessSpec_SPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getDescription")]
  public static extern IntPtr ProcessSpec_SPtr_getDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_getCategory")]
  public static extern IntPtr ProcessSpec_SPtr_getCategory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_providesOutputType")]
  public static extern bool ProcessSpec_SPtr_providesOutputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_hasInputType")]
  public static extern bool ProcessSpec_SPtr_hasInputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setOutputIIDs")]
  public static extern void ProcessSpec_SPtr_setOutputIIDs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setClass")]
  public static extern void ProcessSpec_SPtr_setClass(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setName")]
  public static extern void ProcessSpec_SPtr_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setDescription")]
  public static extern void ProcessSpec_SPtr_setDescription(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setCategory")]
  public static extern void ProcessSpec_SPtr_setCategory(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_SPtr_setParameterSpecs")]
  public static extern void ProcessSpec_SPtr_setParameterSpecs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_SPtr__SWIG_0")]
  public static extern IntPtr new_IUnknown_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_SPtr__SWIG_1")]
  public static extern IntPtr new_IUnknown_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_SPtr__SWIG_2")]
  public static extern IntPtr new_IUnknown_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_SPtr__SWIG_3")]
  public static extern IntPtr new_IUnknown_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUnknown_SPtr")]
  public static extern void delete_IUnknown_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_reset__SWIG_0")]
  public static extern void IUnknown_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_reset__SWIG_1")]
  public static extern void IUnknown_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_get")]
  public static extern IntPtr IUnknown_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr___ref__")]
  public static extern IntPtr IUnknown_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr___deref__")]
  public static extern IntPtr IUnknown_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_swap")]
  public static extern void IUnknown_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_isNull")]
  public static extern bool IUnknown_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_isNotNull")]
  public static extern bool IUnknown_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_iid_get")]
  public static extern IntPtr IUnknown_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_AddRef")]
  public static extern uint IUnknown_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_SPtr_Release")]
  public static extern uint IUnknown_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_CSPtr__SWIG_0")]
  public static extern IntPtr new_IUnknown_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_CSPtr__SWIG_1")]
  public static extern IntPtr new_IUnknown_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_CSPtr__SWIG_2")]
  public static extern IntPtr new_IUnknown_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUnknown_CSPtr__SWIG_3")]
  public static extern IntPtr new_IUnknown_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUnknown_CSPtr")]
  public static extern void delete_IUnknown_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_reset__SWIG_0")]
  public static extern void IUnknown_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_reset__SWIG_1")]
  public static extern void IUnknown_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_get")]
  public static extern IntPtr IUnknown_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr___ref__")]
  public static extern IntPtr IUnknown_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr___deref__")]
  public static extern IntPtr IUnknown_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_swap")]
  public static extern void IUnknown_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_isNull")]
  public static extern bool IUnknown_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_isNotNull")]
  public static extern bool IUnknown_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUnknown_CSPtr_iid_get")]
  public static extern IntPtr IUnknown_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Parameter_SPtr__SWIG_0")]
  public static extern IntPtr new_Parameter_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Parameter_SPtr__SWIG_1")]
  public static extern IntPtr new_Parameter_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Parameter_SPtr__SWIG_2")]
  public static extern IntPtr new_Parameter_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Parameter_SPtr__SWIG_3")]
  public static extern IntPtr new_Parameter_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Parameter_SPtr")]
  public static extern void delete_Parameter_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_reset__SWIG_0")]
  public static extern void Parameter_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_reset__SWIG_1")]
  public static extern void Parameter_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_get")]
  public static extern IntPtr Parameter_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr___ref__")]
  public static extern IntPtr Parameter_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr___deref__")]
  public static extern IntPtr Parameter_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_swap")]
  public static extern void Parameter_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_isNull")]
  public static extern bool Parameter_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_isNotNull")]
  public static extern bool Parameter_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_create__SWIG_0")]
  public static extern IntPtr Parameter_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_create__SWIG_1")]
  public static extern IntPtr Parameter_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_getSpec")]
  public static extern IntPtr Parameter_SPtr_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_getValueCount")]
  public static extern int Parameter_SPtr_getValueCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_getValue")]
  public static extern IntPtr Parameter_SPtr_getValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_getValues")]
  public static extern IntPtr Parameter_SPtr_getValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_findValue__SWIG_0")]
  public static extern int Parameter_SPtr_findValue__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_findValue__SWIG_1")]
  public static extern int Parameter_SPtr_findValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_setValues")]
  public static extern void Parameter_SPtr_setValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_setValue")]
  public static extern void Parameter_SPtr_setValue(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_addValue")]
  public static extern void Parameter_SPtr_addValue(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_removeValue")]
  public static extern void Parameter_SPtr_removeValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_swapValues")]
  public static extern void Parameter_SPtr_swapValues(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_removeAllValues")]
  public static extern void Parameter_SPtr_removeAllValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_SPtr_getChangeNotifier")]
  public static extern IntPtr Parameter_SPtr_getChangeNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Clear")]
  public static extern void Vector_GUID_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Add")]
  public static extern void Vector_GUID_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_size")]
  public static extern uint Vector_GUID_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_capacity")]
  public static extern uint Vector_GUID_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_reserve")]
  public static extern void Vector_GUID_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_GUID__SWIG_0")]
  public static extern IntPtr new_Vector_GUID__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_GUID__SWIG_1")]
  public static extern IntPtr new_Vector_GUID__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_getitemcopy")]
  public static extern IntPtr Vector_GUID_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_getitem")]
  public static extern IntPtr Vector_GUID_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_setitem")]
  public static extern void Vector_GUID_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_AddRange")]
  public static extern void Vector_GUID_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_GetRange")]
  public static extern IntPtr Vector_GUID_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Insert")]
  public static extern void Vector_GUID_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_InsertRange")]
  public static extern void Vector_GUID_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_RemoveAt")]
  public static extern void Vector_GUID_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_RemoveRange")]
  public static extern void Vector_GUID_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Repeat")]
  public static extern IntPtr Vector_GUID_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Reverse__SWIG_0")]
  public static extern void Vector_GUID_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_Reverse__SWIG_1")]
  public static extern void Vector_GUID_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_GUID_SetRange")]
  public static extern void Vector_GUID_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_GUID")]
  public static extern void delete_Vector_GUID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ParameterSpec_SPtr__SWIG_0")]
  public static extern IntPtr new_ParameterSpec_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ParameterSpec_SPtr__SWIG_1")]
  public static extern IntPtr new_ParameterSpec_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ParameterSpec_SPtr__SWIG_2")]
  public static extern IntPtr new_ParameterSpec_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ParameterSpec_SPtr__SWIG_3")]
  public static extern IntPtr new_ParameterSpec_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ParameterSpec_SPtr")]
  public static extern void delete_ParameterSpec_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_reset__SWIG_0")]
  public static extern void ParameterSpec_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_reset__SWIG_1")]
  public static extern void ParameterSpec_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_get")]
  public static extern IntPtr ParameterSpec_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr___ref__")]
  public static extern IntPtr ParameterSpec_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr___deref__")]
  public static extern IntPtr ParameterSpec_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_swap")]
  public static extern void ParameterSpec_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_isNull")]
  public static extern bool ParameterSpec_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_isNotNull")]
  public static extern bool ParameterSpec_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_create")]
  public static extern IntPtr ParameterSpec_SPtr_create(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4, IntPtr jarg5, IntPtr jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_getInterface")]
  public static extern IntPtr ParameterSpec_SPtr_getInterface(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_getMinOccurs")]
  public static extern int ParameterSpec_SPtr_getMinOccurs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_getMaxOccurs")]
  public static extern int ParameterSpec_SPtr_getMaxOccurs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_getName")]
  public static extern IntPtr ParameterSpec_SPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_SPtr_getDescription")]
  public static extern IntPtr ParameterSpec_SPtr_getDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_SPtr__SWIG_0")]
  public static extern IntPtr new_IProcess_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_SPtr__SWIG_1")]
  public static extern IntPtr new_IProcess_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_SPtr__SWIG_2")]
  public static extern IntPtr new_IProcess_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_SPtr__SWIG_3")]
  public static extern IntPtr new_IProcess_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcess_SPtr")]
  public static extern void delete_IProcess_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_reset__SWIG_0")]
  public static extern void IProcess_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_reset__SWIG_1")]
  public static extern void IProcess_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_get")]
  public static extern IntPtr IProcess_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr___ref__")]
  public static extern IntPtr IProcess_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr___deref__")]
  public static extern IntPtr IProcess_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_swap")]
  public static extern void IProcess_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_isNull")]
  public static extern bool IProcess_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_isNotNull")]
  public static extern bool IProcess_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_iid_get")]
  public static extern IntPtr IProcess_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getProcID")]
  public static extern IntPtr IProcess_SPtr_getProcID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getProcVersion")]
  public static extern int IProcess_SPtr_getProcVersion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getProcName")]
  public static extern IntPtr IProcess_SPtr_getProcName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getProcDescription")]
  public static extern IntPtr IProcess_SPtr_getProcDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getSpec")]
  public static extern IntPtr IProcess_SPtr_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getOutput_const")]
  public static extern IntPtr IProcess_SPtr_getOutput_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getOutput")]
  public static extern IntPtr IProcess_SPtr_getOutput(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getParameterCount")]
  public static extern int IProcess_SPtr_getParameterCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getParameter")]
  public static extern IntPtr IProcess_SPtr_getParameter(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getParameters")]
  public static extern IntPtr IProcess_SPtr_getParameters(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_equals")]
  public static extern bool IProcess_SPtr_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getHashCode")]
  public static extern int IProcess_SPtr_getHashCode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getIdentity")]
  public static extern IntPtr IProcess_SPtr_getIdentity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getAttributeSchema")]
  public static extern IntPtr IProcess_SPtr_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getAttributes")]
  public static extern IntPtr IProcess_SPtr_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getData")]
  public static extern IntPtr IProcess_SPtr_getData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getNotifier")]
  public static extern IntPtr IProcess_SPtr_getNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getDataChanged")]
  public static extern IntPtr IProcess_SPtr_getDataChanged(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setProcID")]
  public static extern void IProcess_SPtr_setProcID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setProcVersion")]
  public static extern void IProcess_SPtr_setProcVersion(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setProcName")]
  public static extern void IProcess_SPtr_setProcName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setProcDescription")]
  public static extern void IProcess_SPtr_setProcDescription(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setAttributes")]
  public static extern void IProcess_SPtr_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setData")]
  public static extern void IProcess_SPtr_setData(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setParameters")]
  public static extern void IProcess_SPtr_setParameters(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_initProc__SWIG_0")]
  public static extern int IProcess_SPtr_initProc__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_initProc__SWIG_1")]
  public static extern int IProcess_SPtr_initProc__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_reinitProc__SWIG_0")]
  public static extern int IProcess_SPtr_reinitProc__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_reinitProc__SWIG_1")]
  public static extern int IProcess_SPtr_reinitProc__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getInitError")]
  public static extern IntPtr IProcess_SPtr_getInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_getInitState")]
  public static extern int IProcess_SPtr_getInitState(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_setFinalize")]
  public static extern bool IProcess_SPtr_setFinalize(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_ProvidesOutputType")]
  public static extern bool IProcess_SPtr_ProvidesOutputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_AddRef")]
  public static extern uint IProcess_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_SPtr_Release")]
  public static extern uint IProcess_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_CSPtr__SWIG_0")]
  public static extern IntPtr new_IProcess_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_CSPtr__SWIG_1")]
  public static extern IntPtr new_IProcess_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_CSPtr__SWIG_2")]
  public static extern IntPtr new_IProcess_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcess_CSPtr__SWIG_3")]
  public static extern IntPtr new_IProcess_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcess_CSPtr")]
  public static extern void delete_IProcess_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_reset__SWIG_0")]
  public static extern void IProcess_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_reset__SWIG_1")]
  public static extern void IProcess_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_get")]
  public static extern IntPtr IProcess_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr___ref__")]
  public static extern IntPtr IProcess_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr___deref__")]
  public static extern IntPtr IProcess_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_swap")]
  public static extern void IProcess_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_isNull")]
  public static extern bool IProcess_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_isNotNull")]
  public static extern bool IProcess_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_iid_get")]
  public static extern IntPtr IProcess_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getProcID")]
  public static extern IntPtr IProcess_CSPtr_getProcID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getProcVersion")]
  public static extern int IProcess_CSPtr_getProcVersion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getProcName")]
  public static extern IntPtr IProcess_CSPtr_getProcName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getProcDescription")]
  public static extern IntPtr IProcess_CSPtr_getProcDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getSpec")]
  public static extern IntPtr IProcess_CSPtr_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getOutput_const")]
  public static extern IntPtr IProcess_CSPtr_getOutput_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getParameterCount")]
  public static extern int IProcess_CSPtr_getParameterCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getParameter")]
  public static extern IntPtr IProcess_CSPtr_getParameter(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getParameters")]
  public static extern IntPtr IProcess_CSPtr_getParameters(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_equals")]
  public static extern bool IProcess_CSPtr_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getHashCode")]
  public static extern int IProcess_CSPtr_getHashCode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getIdentity")]
  public static extern IntPtr IProcess_CSPtr_getIdentity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getAttributeSchema")]
  public static extern IntPtr IProcess_CSPtr_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getAttributes")]
  public static extern IntPtr IProcess_CSPtr_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getData")]
  public static extern IntPtr IProcess_CSPtr_getData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getInitError")]
  public static extern IntPtr IProcess_CSPtr_getInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_CSPtr_getInitState")]
  public static extern int IProcess_CSPtr_getInitState(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPath_SPtr__SWIG_0")]
  public static extern IntPtr new_IPath_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPath_SPtr__SWIG_1")]
  public static extern IntPtr new_IPath_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPath_SPtr__SWIG_2")]
  public static extern IntPtr new_IPath_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPath_SPtr__SWIG_3")]
  public static extern IntPtr new_IPath_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPath_SPtr")]
  public static extern void delete_IPath_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_reset__SWIG_0")]
  public static extern void IPath_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_reset__SWIG_1")]
  public static extern void IPath_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_get")]
  public static extern IntPtr IPath_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr___ref__")]
  public static extern IntPtr IPath_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr___deref__")]
  public static extern IntPtr IPath_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_swap")]
  public static extern void IPath_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_isNull")]
  public static extern bool IPath_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_isNotNull")]
  public static extern bool IPath_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_iid_get")]
  public static extern IntPtr IPath_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_getPath__SWIG_0")]
  public static extern IntPtr IPath_SPtr_getPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_getPath__SWIG_1")]
  public static extern IntPtr IPath_SPtr_getPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_getLocallyResolvedPath__SWIG_0")]
  public static extern IntPtr IPath_SPtr_getLocallyResolvedPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_getLocallyResolvedPath__SWIG_1")]
  public static extern IntPtr IPath_SPtr_getLocallyResolvedPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_setPath__SWIG_0")]
  public static extern bool IPath_SPtr_setPath__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_setPath__SWIG_1")]
  public static extern bool IPath_SPtr_setPath__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_addPath")]
  public static extern bool IPath_SPtr_addPath(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_getLength")]
  public static extern int IPath_SPtr_getLength(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_AddRef")]
  public static extern uint IPath_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_SPtr_Release")]
  public static extern uint IPath_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IBitmap_SPtr__SWIG_0")]
  public static extern IntPtr new_IBitmap_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IBitmap_SPtr__SWIG_1")]
  public static extern IntPtr new_IBitmap_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IBitmap_SPtr__SWIG_2")]
  public static extern IntPtr new_IBitmap_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IBitmap_SPtr__SWIG_3")]
  public static extern IntPtr new_IBitmap_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IBitmap_SPtr")]
  public static extern void delete_IBitmap_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_reset__SWIG_0")]
  public static extern void IBitmap_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_reset__SWIG_1")]
  public static extern void IBitmap_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_get")]
  public static extern IntPtr IBitmap_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr___ref__")]
  public static extern IntPtr IBitmap_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr___deref__")]
  public static extern IntPtr IBitmap_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_swap")]
  public static extern void IBitmap_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_isNull")]
  public static extern bool IBitmap_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_isNotNull")]
  public static extern bool IBitmap_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_iid_get")]
  public static extern IntPtr IBitmap_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getBitmapCount")]
  public static extern int IBitmap_SPtr_getBitmapCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getWidth__SWIG_0")]
  public static extern int IBitmap_SPtr_getWidth__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getWidth__SWIG_1")]
  public static extern int IBitmap_SPtr_getWidth__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getHeight__SWIG_0")]
  public static extern int IBitmap_SPtr_getHeight__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getHeight__SWIG_1")]
  public static extern int IBitmap_SPtr_getHeight__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getRawBitmap__SWIG_0")]
  public static extern IntPtr IBitmap_SPtr_getRawBitmap__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getRawBitmap__SWIG_1")]
  public static extern IntPtr IBitmap_SPtr_getRawBitmap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getBitmapDefinition__SWIG_0")]
  public static extern IntPtr IBitmap_SPtr_getBitmapDefinition__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_getBitmapDefinition__SWIG_1")]
  public static extern IntPtr IBitmap_SPtr_getBitmapDefinition__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_AddRef")]
  public static extern uint IBitmap_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_SPtr_Release")]
  public static extern uint IBitmap_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IEmbeddedResourceHolder_SPtr__SWIG_0")]
  public static extern IntPtr new_IEmbeddedResourceHolder_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IEmbeddedResourceHolder_SPtr__SWIG_1")]
  public static extern IntPtr new_IEmbeddedResourceHolder_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IEmbeddedResourceHolder_SPtr__SWIG_2")]
  public static extern IntPtr new_IEmbeddedResourceHolder_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IEmbeddedResourceHolder_SPtr__SWIG_3")]
  public static extern IntPtr new_IEmbeddedResourceHolder_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IEmbeddedResourceHolder_SPtr")]
  public static extern void delete_IEmbeddedResourceHolder_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_reset__SWIG_0")]
  public static extern void IEmbeddedResourceHolder_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_reset__SWIG_1")]
  public static extern void IEmbeddedResourceHolder_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_get")]
  public static extern IntPtr IEmbeddedResourceHolder_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr___ref__")]
  public static extern IntPtr IEmbeddedResourceHolder_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr___deref__")]
  public static extern IntPtr IEmbeddedResourceHolder_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_swap")]
  public static extern void IEmbeddedResourceHolder_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_isNull")]
  public static extern bool IEmbeddedResourceHolder_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_isNotNull")]
  public static extern bool IEmbeddedResourceHolder_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_iid_get")]
  public static extern IntPtr IEmbeddedResourceHolder_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_getEmbeddedResourceCount")]
  public static extern int IEmbeddedResourceHolder_SPtr_getEmbeddedResourceCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_getEmbeddedResource")]
  public static extern IntPtr IEmbeddedResourceHolder_SPtr_getEmbeddedResource(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_AddRef")]
  public static extern uint IEmbeddedResourceHolder_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_SPtr_Release")]
  public static extern uint IEmbeddedResourceHolder_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUrl_SPtr__SWIG_0")]
  public static extern IntPtr new_IUrl_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUrl_SPtr__SWIG_1")]
  public static extern IntPtr new_IUrl_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUrl_SPtr__SWIG_2")]
  public static extern IntPtr new_IUrl_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUrl_SPtr__SWIG_3")]
  public static extern IntPtr new_IUrl_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUrl_SPtr")]
  public static extern void delete_IUrl_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_reset__SWIG_0")]
  public static extern void IUrl_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_reset__SWIG_1")]
  public static extern void IUrl_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_get")]
  public static extern IntPtr IUrl_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr___ref__")]
  public static extern IntPtr IUrl_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr___deref__")]
  public static extern IntPtr IUrl_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_swap")]
  public static extern void IUrl_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_isNull")]
  public static extern bool IUrl_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_isNotNull")]
  public static extern bool IUrl_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_iid_get")]
  public static extern IntPtr IUrl_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_getUrl")]
  public static extern IntPtr IUrl_SPtr_getUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_setUrl")]
  public static extern bool IUrl_SPtr_setUrl(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_getManifest")]
  public static extern IntPtr IUrl_SPtr_getManifest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_isLocalFile")]
  public static extern bool IUrl_SPtr_isLocalFile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_AddRef")]
  public static extern uint IUrl_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_SPtr_Release")]
  public static extern uint IUrl_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentials_SPtr__SWIG_0")]
  public static extern IntPtr new_IUserCredentials_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentials_SPtr__SWIG_1")]
  public static extern IntPtr new_IUserCredentials_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentials_SPtr__SWIG_2")]
  public static extern IntPtr new_IUserCredentials_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentials_SPtr__SWIG_3")]
  public static extern IntPtr new_IUserCredentials_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentials_SPtr")]
  public static extern void delete_IUserCredentials_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_reset__SWIG_0")]
  public static extern void IUserCredentials_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_reset__SWIG_1")]
  public static extern void IUserCredentials_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_get")]
  public static extern IntPtr IUserCredentials_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr___ref__")]
  public static extern IntPtr IUserCredentials_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr___deref__")]
  public static extern IntPtr IUserCredentials_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_swap")]
  public static extern void IUserCredentials_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_isNull")]
  public static extern bool IUserCredentials_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_isNotNull")]
  public static extern bool IUserCredentials_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_iid_get")]
  public static extern IntPtr IUserCredentials_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_getCredentialsType")]
  public static extern IntPtr IUserCredentials_SPtr_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_getCredentialsCount")]
  public static extern int IUserCredentials_SPtr_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_getCredentials__SWIG_0")]
  public static extern IntPtr IUserCredentials_SPtr_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_getCredentials__SWIG_1")]
  public static extern IntPtr IUserCredentials_SPtr_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_findFirstCredentialOfType")]
  public static extern IntPtr IUserCredentials_SPtr_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_AddRef")]
  public static extern uint IUserCredentials_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_SPtr_Release")]
  public static extern uint IUserCredentials_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_SPtr__SWIG_0")]
  public static extern IntPtr new_IUserCredentialsError_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_SPtr__SWIG_1")]
  public static extern IntPtr new_IUserCredentialsError_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_SPtr__SWIG_2")]
  public static extern IntPtr new_IUserCredentialsError_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_SPtr__SWIG_3")]
  public static extern IntPtr new_IUserCredentialsError_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentialsError_SPtr")]
  public static extern void delete_IUserCredentialsError_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_reset__SWIG_0")]
  public static extern void IUserCredentialsError_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_reset__SWIG_1")]
  public static extern void IUserCredentialsError_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_get")]
  public static extern IntPtr IUserCredentialsError_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr___ref__")]
  public static extern IntPtr IUserCredentialsError_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr___deref__")]
  public static extern IntPtr IUserCredentialsError_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_swap")]
  public static extern void IUserCredentialsError_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_isNull")]
  public static extern bool IUserCredentialsError_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_isNotNull")]
  public static extern bool IUserCredentialsError_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_iid_get")]
  public static extern IntPtr IUserCredentialsError_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_getNeededCredentialsType")]
  public static extern IntPtr IUserCredentialsError_SPtr_getNeededCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_getCredentialsTarget")]
  public static extern IntPtr IUserCredentialsError_SPtr_getCredentialsTarget(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_getError")]
  public static extern IntPtr IUserCredentialsError_SPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_setError")]
  public static extern void IUserCredentialsError_SPtr_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_getErrorID")]
  public static extern IntPtr IUserCredentialsError_SPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_AddRef")]
  public static extern uint IUserCredentialsError_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_SPtr_Release")]
  public static extern uint IUserCredentialsError_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_CSPtr__SWIG_0")]
  public static extern IntPtr new_IUserCredentialsError_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_CSPtr__SWIG_1")]
  public static extern IntPtr new_IUserCredentialsError_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_CSPtr__SWIG_2")]
  public static extern IntPtr new_IUserCredentialsError_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsError_CSPtr__SWIG_3")]
  public static extern IntPtr new_IUserCredentialsError_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentialsError_CSPtr")]
  public static extern void delete_IUserCredentialsError_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_reset__SWIG_0")]
  public static extern void IUserCredentialsError_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_reset__SWIG_1")]
  public static extern void IUserCredentialsError_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_get")]
  public static extern IntPtr IUserCredentialsError_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr___ref__")]
  public static extern IntPtr IUserCredentialsError_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr___deref__")]
  public static extern IntPtr IUserCredentialsError_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_swap")]
  public static extern void IUserCredentialsError_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_isNull")]
  public static extern bool IUserCredentialsError_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_isNotNull")]
  public static extern bool IUserCredentialsError_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_iid_get")]
  public static extern IntPtr IUserCredentialsError_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_getNeededCredentialsType")]
  public static extern IntPtr IUserCredentialsError_CSPtr_getNeededCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_getCredentialsTarget")]
  public static extern IntPtr IUserCredentialsError_CSPtr_getCredentialsTarget(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_getError")]
  public static extern IntPtr IUserCredentialsError_CSPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_CSPtr_getErrorID")]
  public static extern IntPtr IUserCredentialsError_CSPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError_SPtr__SWIG_0")]
  public static extern IntPtr new_UserCredentialsInitError_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError_SPtr__SWIG_1")]
  public static extern IntPtr new_UserCredentialsInitError_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError_SPtr__SWIG_2")]
  public static extern IntPtr new_UserCredentialsInitError_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError_SPtr__SWIG_3")]
  public static extern IntPtr new_UserCredentialsInitError_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsInitError_SPtr")]
  public static extern void delete_UserCredentialsInitError_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_reset__SWIG_0")]
  public static extern void UserCredentialsInitError_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_reset__SWIG_1")]
  public static extern void UserCredentialsInitError_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_get")]
  public static extern IntPtr UserCredentialsInitError_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr___ref__")]
  public static extern IntPtr UserCredentialsInitError_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr___deref__")]
  public static extern IntPtr UserCredentialsInitError_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_swap")]
  public static extern void UserCredentialsInitError_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_isNull")]
  public static extern bool UserCredentialsInitError_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_isNotNull")]
  public static extern bool UserCredentialsInitError_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_clsid_get")]
  public static extern IntPtr UserCredentialsInitError_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_aiid_get")]
  public static extern IntPtr UserCredentialsInitError_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_niid_get")]
  public static extern int UserCredentialsInitError_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_AddRef")]
  public static extern uint UserCredentialsInitError_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_Release")]
  public static extern uint UserCredentialsInitError_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_getErrorID")]
  public static extern IntPtr UserCredentialsInitError_SPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_getError")]
  public static extern IntPtr UserCredentialsInitError_SPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_setError")]
  public static extern void UserCredentialsInitError_SPtr_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_getNeededCredentialsType")]
  public static extern IntPtr UserCredentialsInitError_SPtr_getNeededCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_getCredentialsTarget")]
  public static extern IntPtr UserCredentialsInitError_SPtr_getCredentialsTarget(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_setCredentialsDetials")]
  public static extern void UserCredentialsInitError_SPtr_setCredentialsDetials(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_SPtr_iid_get")]
  public static extern IntPtr UserCredentialsInitError_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsList_SPtr__SWIG_0")]
  public static extern IntPtr new_UserCredentialsList_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsList_SPtr__SWIG_1")]
  public static extern IntPtr new_UserCredentialsList_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsList_SPtr__SWIG_2")]
  public static extern IntPtr new_UserCredentialsList_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsList_SPtr__SWIG_3")]
  public static extern IntPtr new_UserCredentialsList_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsList_SPtr")]
  public static extern void delete_UserCredentialsList_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_reset__SWIG_0")]
  public static extern void UserCredentialsList_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_reset__SWIG_1")]
  public static extern void UserCredentialsList_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_get")]
  public static extern IntPtr UserCredentialsList_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr___ref__")]
  public static extern IntPtr UserCredentialsList_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr___deref__")]
  public static extern IntPtr UserCredentialsList_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_swap")]
  public static extern void UserCredentialsList_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_isNull")]
  public static extern bool UserCredentialsList_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_isNotNull")]
  public static extern bool UserCredentialsList_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_clsid_get")]
  public static extern IntPtr UserCredentialsList_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_aiid_get")]
  public static extern IntPtr UserCredentialsList_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_niid_get")]
  public static extern int UserCredentialsList_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_AddRef")]
  public static extern uint UserCredentialsList_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_Release")]
  public static extern uint UserCredentialsList_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_getCredentialsType")]
  public static extern IntPtr UserCredentialsList_SPtr_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_getCredentialsCount")]
  public static extern int UserCredentialsList_SPtr_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_getCredentials__SWIG_0")]
  public static extern IntPtr UserCredentialsList_SPtr_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_getCredentials__SWIG_1")]
  public static extern IntPtr UserCredentialsList_SPtr_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_findFirstCredentialOfType")]
  public static extern IntPtr UserCredentialsList_SPtr_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_addCredential")]
  public static extern void UserCredentialsList_SPtr_addCredential(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_SPtr_iid_get")]
  public static extern IntPtr UserCredentialsList_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUsernameAndPasswordCredentials_SPtr__SWIG_0")]
  public static extern IntPtr new_IUsernameAndPasswordCredentials_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUsernameAndPasswordCredentials_SPtr__SWIG_1")]
  public static extern IntPtr new_IUsernameAndPasswordCredentials_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUsernameAndPasswordCredentials_SPtr__SWIG_2")]
  public static extern IntPtr new_IUsernameAndPasswordCredentials_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUsernameAndPasswordCredentials_SPtr__SWIG_3")]
  public static extern IntPtr new_IUsernameAndPasswordCredentials_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUsernameAndPasswordCredentials_SPtr")]
  public static extern void delete_IUsernameAndPasswordCredentials_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_reset__SWIG_0")]
  public static extern void IUsernameAndPasswordCredentials_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_reset__SWIG_1")]
  public static extern void IUsernameAndPasswordCredentials_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_get")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr___ref__")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr___deref__")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_swap")]
  public static extern void IUsernameAndPasswordCredentials_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_isNull")]
  public static extern bool IUsernameAndPasswordCredentials_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_isNotNull")]
  public static extern bool IUsernameAndPasswordCredentials_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_iid_get")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getUsername")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_getUsername(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getPassword")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_getPassword(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getCredentialsType")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getCredentialsCount")]
  public static extern int IUsernameAndPasswordCredentials_SPtr_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_0")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_1")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_findFirstCredentialOfType")]
  public static extern IntPtr IUsernameAndPasswordCredentials_SPtr_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_AddRef")]
  public static extern uint IUsernameAndPasswordCredentials_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_SPtr_Release")]
  public static extern uint IUsernameAndPasswordCredentials_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UsernameAndPasswordCredentials_SPtr__SWIG_0")]
  public static extern IntPtr new_UsernameAndPasswordCredentials_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UsernameAndPasswordCredentials_SPtr__SWIG_1")]
  public static extern IntPtr new_UsernameAndPasswordCredentials_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UsernameAndPasswordCredentials_SPtr__SWIG_2")]
  public static extern IntPtr new_UsernameAndPasswordCredentials_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UsernameAndPasswordCredentials_SPtr__SWIG_3")]
  public static extern IntPtr new_UsernameAndPasswordCredentials_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UsernameAndPasswordCredentials_SPtr")]
  public static extern void delete_UsernameAndPasswordCredentials_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_reset__SWIG_0")]
  public static extern void UsernameAndPasswordCredentials_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_reset__SWIG_1")]
  public static extern void UsernameAndPasswordCredentials_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr___ref__")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr___deref__")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_swap")]
  public static extern void UsernameAndPasswordCredentials_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_isNull")]
  public static extern bool UsernameAndPasswordCredentials_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_isNotNull")]
  public static extern bool UsernameAndPasswordCredentials_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_clsid_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_aiid_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_niid_get")]
  public static extern int UsernameAndPasswordCredentials_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_AddRef")]
  public static extern uint UsernameAndPasswordCredentials_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_Release")]
  public static extern uint UsernameAndPasswordCredentials_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getCredentialsType")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getCredentialsCount")]
  public static extern int UsernameAndPasswordCredentials_SPtr_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_0")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_1")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_findFirstCredentialOfType")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getUsername")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_getUsername(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_getPassword")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_getPassword(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_create")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_create(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_setUsernameAndPassword")]
  public static extern void UsernameAndPasswordCredentials_SPtr_setUsernameAndPassword(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_SPtr_iid_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_IUserCredentialsProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_IUserCredentialsProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_IUserCredentialsProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IUserCredentialsProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_IUserCredentialsProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentialsProvider_SPtr")]
  public static extern void delete_IUserCredentialsProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_reset__SWIG_0")]
  public static extern void IUserCredentialsProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_reset__SWIG_1")]
  public static extern void IUserCredentialsProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_get")]
  public static extern IntPtr IUserCredentialsProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr___ref__")]
  public static extern IntPtr IUserCredentialsProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr___deref__")]
  public static extern IntPtr IUserCredentialsProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_swap")]
  public static extern void IUserCredentialsProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_isNull")]
  public static extern bool IUserCredentialsProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_isNotNull")]
  public static extern bool IUserCredentialsProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_iid_get")]
  public static extern IntPtr IUserCredentialsProvider_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_getCredentials")]
  public static extern IntPtr IUserCredentialsProvider_SPtr_getCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_confirmCredentials")]
  public static extern void IUserCredentialsProvider_SPtr_confirmCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_AddRef")]
  public static extern uint IUserCredentialsProvider_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_SPtr_Release")]
  public static extern uint IUserCredentialsProvider_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsProviderProcess_SPtr__SWIG_0")]
  public static extern IntPtr new_UserCredentialsProviderProcess_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsProviderProcess_SPtr__SWIG_1")]
  public static extern IntPtr new_UserCredentialsProviderProcess_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsProviderProcess_SPtr__SWIG_2")]
  public static extern IntPtr new_UserCredentialsProviderProcess_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsProviderProcess_SPtr__SWIG_3")]
  public static extern IntPtr new_UserCredentialsProviderProcess_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsProviderProcess_SPtr")]
  public static extern void delete_UserCredentialsProviderProcess_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_reset__SWIG_0")]
  public static extern void UserCredentialsProviderProcess_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_reset__SWIG_1")]
  public static extern void UserCredentialsProviderProcess_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_get")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr___ref__")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr___deref__")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_swap")]
  public static extern void UserCredentialsProviderProcess_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_isNull")]
  public static extern bool UserCredentialsProviderProcess_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_isNotNull")]
  public static extern bool UserCredentialsProviderProcess_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_clsid_get")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_aiid_get")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_niid_get")]
  public static extern int UserCredentialsProviderProcess_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_test")]
  public static extern void UserCredentialsProviderProcess_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_AddRef")]
  public static extern uint UserCredentialsProviderProcess_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_Release")]
  public static extern uint UserCredentialsProviderProcess_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getSpecStatic")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getSpecStatic(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getSpec")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getOutput__SWIG_0")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getAttributeSchema")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getAttributes")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_setAttributes")]
  public static extern void UserCredentialsProviderProcess_SPtr_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_getCredentials")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_getCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_confirmCredentials")]
  public static extern void UserCredentialsProviderProcess_SPtr_confirmCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_SPtr_iid_get")]
  public static extern IntPtr UserCredentialsProviderProcess_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_SPtr__SWIG_0")]
  public static extern IntPtr new_IProcessInitError_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_SPtr__SWIG_1")]
  public static extern IntPtr new_IProcessInitError_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_SPtr__SWIG_2")]
  public static extern IntPtr new_IProcessInitError_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_SPtr__SWIG_3")]
  public static extern IntPtr new_IProcessInitError_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessInitError_SPtr")]
  public static extern void delete_IProcessInitError_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_reset__SWIG_0")]
  public static extern void IProcessInitError_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_reset__SWIG_1")]
  public static extern void IProcessInitError_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_get")]
  public static extern IntPtr IProcessInitError_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr___ref__")]
  public static extern IntPtr IProcessInitError_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr___deref__")]
  public static extern IntPtr IProcessInitError_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_swap")]
  public static extern void IProcessInitError_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_isNull")]
  public static extern bool IProcessInitError_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_isNotNull")]
  public static extern bool IProcessInitError_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_iid_get")]
  public static extern IntPtr IProcessInitError_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_getError")]
  public static extern IntPtr IProcessInitError_SPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_setError")]
  public static extern void IProcessInitError_SPtr_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_getErrorID")]
  public static extern IntPtr IProcessInitError_SPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_AddRef")]
  public static extern uint IProcessInitError_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_SPtr_Release")]
  public static extern uint IProcessInitError_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_CSPtr__SWIG_0")]
  public static extern IntPtr new_IProcessInitError_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_CSPtr__SWIG_1")]
  public static extern IntPtr new_IProcessInitError_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_CSPtr__SWIG_2")]
  public static extern IntPtr new_IProcessInitError_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessInitError_CSPtr__SWIG_3")]
  public static extern IntPtr new_IProcessInitError_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessInitError_CSPtr")]
  public static extern void delete_IProcessInitError_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_reset__SWIG_0")]
  public static extern void IProcessInitError_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_reset__SWIG_1")]
  public static extern void IProcessInitError_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_get")]
  public static extern IntPtr IProcessInitError_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr___ref__")]
  public static extern IntPtr IProcessInitError_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr___deref__")]
  public static extern IntPtr IProcessInitError_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_swap")]
  public static extern void IProcessInitError_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_isNull")]
  public static extern bool IProcessInitError_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_isNotNull")]
  public static extern bool IProcessInitError_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_iid_get")]
  public static extern IntPtr IProcessInitError_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_getError")]
  public static extern IntPtr IProcessInitError_CSPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_CSPtr_getErrorID")]
  public static extern IntPtr IProcessInitError_CSPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessList_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessList_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessList_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessList_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessList_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessList_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessList_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessList_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessList_SPtr")]
  public static extern void delete_ProcessList_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_reset__SWIG_0")]
  public static extern void ProcessList_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_reset__SWIG_1")]
  public static extern void ProcessList_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_get")]
  public static extern IntPtr ProcessList_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr___ref__")]
  public static extern IntPtr ProcessList_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr___deref__")]
  public static extern IntPtr ProcessList_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_swap")]
  public static extern void ProcessList_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_isNull")]
  public static extern bool ProcessList_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_isNotNull")]
  public static extern bool ProcessList_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_create")]
  public static extern IntPtr ProcessList_SPtr_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_hasProcs")]
  public static extern bool ProcessList_SPtr_hasProcs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_contains")]
  public static extern bool ProcessList_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_addProc__SWIG_0")]
  public static extern void ProcessList_SPtr_addProc__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_addProc__SWIG_1")]
  public static extern void ProcessList_SPtr_addProc__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_removeProc")]
  public static extern void ProcessList_SPtr_removeProc(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_clear")]
  public static extern void ProcessList_SPtr_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_count")]
  public static extern int ProcessList_SPtr_count(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_getProcessRefs")]
  public static extern void ProcessList_SPtr_getProcessRefs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_getProcesses")]
  public static extern void ProcessList_SPtr_getProcesses(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_setProcesses")]
  public static extern void ProcessList_SPtr_setProcesses(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_SPtr_getListChangedNotifier")]
  public static extern IntPtr ProcessList_SPtr_getListChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_SPtr__SWIG_0")]
  public static extern IntPtr new_IProcessCollection_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_SPtr__SWIG_1")]
  public static extern IntPtr new_IProcessCollection_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_SPtr__SWIG_2")]
  public static extern IntPtr new_IProcessCollection_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_SPtr__SWIG_3")]
  public static extern IntPtr new_IProcessCollection_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessCollection_SPtr")]
  public static extern void delete_IProcessCollection_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_reset__SWIG_0")]
  public static extern void IProcessCollection_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_reset__SWIG_1")]
  public static extern void IProcessCollection_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_get")]
  public static extern IntPtr IProcessCollection_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr___ref__")]
  public static extern IntPtr IProcessCollection_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr___deref__")]
  public static extern IntPtr IProcessCollection_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_swap")]
  public static extern void IProcessCollection_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_isNull")]
  public static extern bool IProcessCollection_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_isNotNull")]
  public static extern bool IProcessCollection_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_iid_get")]
  public static extern IntPtr IProcessCollection_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_getProcessList")]
  public static extern IntPtr IProcessCollection_SPtr_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_setProcessList")]
  public static extern void IProcessCollection_SPtr_setProcessList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_AddRef")]
  public static extern uint IProcessCollection_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_SPtr_Release")]
  public static extern uint IProcessCollection_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_CSPtr__SWIG_0")]
  public static extern IntPtr new_IProcessCollection_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_CSPtr__SWIG_1")]
  public static extern IntPtr new_IProcessCollection_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_CSPtr__SWIG_2")]
  public static extern IntPtr new_IProcessCollection_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IProcessCollection_CSPtr__SWIG_3")]
  public static extern IntPtr new_IProcessCollection_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessCollection_CSPtr")]
  public static extern void delete_IProcessCollection_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_reset__SWIG_0")]
  public static extern void IProcessCollection_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_reset__SWIG_1")]
  public static extern void IProcessCollection_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_get")]
  public static extern IntPtr IProcessCollection_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr___ref__")]
  public static extern IntPtr IProcessCollection_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr___deref__")]
  public static extern IntPtr IProcessCollection_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_swap")]
  public static extern void IProcessCollection_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_isNull")]
  public static extern bool IProcessCollection_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_isNotNull")]
  public static extern bool IProcessCollection_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_iid_get")]
  public static extern IntPtr IProcessCollection_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_CSPtr_getProcessList")]
  public static extern IntPtr IProcessCollection_CSPtr_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICache_SPtr__SWIG_0")]
  public static extern IntPtr new_ICache_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICache_SPtr__SWIG_1")]
  public static extern IntPtr new_ICache_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICache_SPtr__SWIG_2")]
  public static extern IntPtr new_ICache_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICache_SPtr__SWIG_3")]
  public static extern IntPtr new_ICache_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICache_SPtr")]
  public static extern void delete_ICache_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_reset__SWIG_0")]
  public static extern void ICache_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_reset__SWIG_1")]
  public static extern void ICache_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_get")]
  public static extern IntPtr ICache_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr___ref__")]
  public static extern IntPtr ICache_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr___deref__")]
  public static extern IntPtr ICache_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_swap")]
  public static extern void ICache_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_isNull")]
  public static extern bool ICache_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_isNotNull")]
  public static extern bool ICache_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_iid_get")]
  public static extern IntPtr ICache_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_initCacheDir")]
  public static extern void ICache_SPtr_initCacheDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setCacheDir")]
  public static extern void ICache_SPtr_setCacheDir(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_getCacheDir")]
  public static extern IntPtr ICache_SPtr_getCacheDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setCacheTileDepth")]
  public static extern void ICache_SPtr_setCacheTileDepth(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_getCacheTileDepth")]
  public static extern int ICache_SPtr_getCacheTileDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setCacheCellResolution")]
  public static extern void ICache_SPtr_setCacheCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_getCacheCellResolution")]
  public static extern int ICache_SPtr_getCacheCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setCachePersistence")]
  public static extern void ICache_SPtr_setCachePersistence(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_openReadOnly")]
  public static extern bool ICache_SPtr_openReadOnly(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_openReadWrite__SWIG_0")]
  public static extern bool ICache_SPtr_openReadWrite__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_openReadWrite__SWIG_1")]
  public static extern bool ICache_SPtr_openReadWrite__SWIG_1(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6, int jarg7);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_openReadWrite__SWIG_2")]
  public static extern bool ICache_SPtr_openReadWrite__SWIG_2(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setCacheMaxTileCount")]
  public static extern void ICache_SPtr_setCacheMaxTileCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_close")]
  public static extern void ICache_SPtr_close(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_persistAllTiles")]
  public static extern void ICache_SPtr_persistAllTiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_toFileName")]
  public static extern IntPtr ICache_SPtr_toFileName(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_setGreedyCache")]
  public static extern void ICache_SPtr_setGreedyCache(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_addTileFile")]
  public static extern void ICache_SPtr_addTileFile(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_forceCoverageTile")]
  public static extern bool ICache_SPtr_forceCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_getNeedATileNotifier")]
  public static extern IntPtr ICache_SPtr_getNeedATileNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_getCacheChangedNotifier")]
  public static extern IntPtr ICache_SPtr_getCacheChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_AddRef")]
  public static extern uint ICache_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_SPtr_Release")]
  public static extern uint ICache_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_SPtr__SWIG_0")]
  public static extern IntPtr new_ICoverage_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_SPtr__SWIG_1")]
  public static extern IntPtr new_ICoverage_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_SPtr__SWIG_2")]
  public static extern IntPtr new_ICoverage_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_SPtr__SWIG_3")]
  public static extern IntPtr new_ICoverage_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverage_SPtr")]
  public static extern void delete_ICoverage_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_reset__SWIG_0")]
  public static extern void ICoverage_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_reset__SWIG_1")]
  public static extern void ICoverage_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_get")]
  public static extern IntPtr ICoverage_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr___ref__")]
  public static extern IntPtr ICoverage_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr___deref__")]
  public static extern IntPtr ICoverage_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_swap")]
  public static extern void ICoverage_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_isNull")]
  public static extern bool ICoverage_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_isNotNull")]
  public static extern bool ICoverage_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_iid_get")]
  public static extern IntPtr ICoverage_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getCoverageValue__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getCoverageValue__SWIG_1")]
  public static extern IntPtr ICoverage_SPtr_getCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldTile__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getFieldTile__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldTile__SWIG_1")]
  public static extern IntPtr ICoverage_SPtr_getFieldTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldTileCost__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getFieldTileCost__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldTileCost__SWIG_1")]
  public static extern IntPtr ICoverage_SPtr_getFieldTileCost__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getCoverageTile")]
  public static extern IntPtr ICoverage_SPtr_getCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getTileCost")]
  public static extern IntPtr ICoverage_SPtr_getTileCost(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setCoverageValue__SWIG_0")]
  public static extern void ICoverage_SPtr_setCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setCoverageValue__SWIG_1")]
  public static extern void ICoverage_SPtr_setCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setCoverageTile")]
  public static extern void ICoverage_SPtr_setCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getIterator__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getIterator__SWIG_1")]
  public static extern IntPtr ICoverage_SPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFeatureStyles")]
  public static extern IntPtr ICoverage_SPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFeature")]
  public static extern IntPtr ICoverage_SPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_canRasterize")]
  public static extern bool ICoverage_SPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_geometryHint")]
  public static extern void ICoverage_SPtr_geometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_endGeometryHint")]
  public static extern void ICoverage_SPtr_endGeometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_isWritable")]
  public static extern bool ICoverage_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getID")]
  public static extern IntPtr ICoverage_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getGeometry")]
  public static extern IntPtr ICoverage_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getGeometry_const")]
  public static extern IntPtr ICoverage_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr ICoverage_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldValue")]
  public static extern IntPtr ICoverage_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setFieldValue")]
  public static extern void ICoverage_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldValueByName")]
  public static extern IntPtr ICoverage_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setFieldValueByName")]
  public static extern void ICoverage_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_getFieldValues")]
  public static extern IntPtr ICoverage_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_setFieldValues")]
  public static extern void ICoverage_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_addField__SWIG_0")]
  public static extern void ICoverage_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_addField__SWIG_1")]
  public static extern void ICoverage_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_addField__SWIG_2")]
  public static extern void ICoverage_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_AddRef")]
  public static extern uint ICoverage_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_SPtr_Release")]
  public static extern uint ICoverage_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_CSPtr__SWIG_0")]
  public static extern IntPtr new_ICoverage_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_CSPtr__SWIG_1")]
  public static extern IntPtr new_ICoverage_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_CSPtr__SWIG_2")]
  public static extern IntPtr new_ICoverage_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverage_CSPtr__SWIG_3")]
  public static extern IntPtr new_ICoverage_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverage_CSPtr")]
  public static extern void delete_ICoverage_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_reset__SWIG_0")]
  public static extern void ICoverage_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_reset__SWIG_1")]
  public static extern void ICoverage_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_get")]
  public static extern IntPtr ICoverage_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr___ref__")]
  public static extern IntPtr ICoverage_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr___deref__")]
  public static extern IntPtr ICoverage_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_swap")]
  public static extern void ICoverage_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_isNull")]
  public static extern bool ICoverage_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_isNotNull")]
  public static extern bool ICoverage_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_iid_get")]
  public static extern IntPtr ICoverage_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getCoverageValue__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getCoverageValue__SWIG_1")]
  public static extern IntPtr ICoverage_CSPtr_getCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldTile__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getFieldTile__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldTile__SWIG_1")]
  public static extern IntPtr ICoverage_CSPtr_getFieldTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldTileCost__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getFieldTileCost__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldTileCost__SWIG_1")]
  public static extern IntPtr ICoverage_CSPtr_getFieldTileCost__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getCoverageTile")]
  public static extern IntPtr ICoverage_CSPtr_getCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getTileCost")]
  public static extern IntPtr ICoverage_CSPtr_getTileCost(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getIterator__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getIterator__SWIG_1")]
  public static extern IntPtr ICoverage_CSPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFeatureStyles")]
  public static extern IntPtr ICoverage_CSPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFeature")]
  public static extern IntPtr ICoverage_CSPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_canRasterize")]
  public static extern bool ICoverage_CSPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_isWritable")]
  public static extern bool ICoverage_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getID")]
  public static extern IntPtr ICoverage_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getGeometry_const")]
  public static extern IntPtr ICoverage_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr ICoverage_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldValue")]
  public static extern IntPtr ICoverage_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldValueByName")]
  public static extern IntPtr ICoverage_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_CSPtr_getFieldValues")]
  public static extern IntPtr ICoverage_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_SPtr__SWIG_0")]
  public static extern IntPtr new_IDataProcessor_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_SPtr__SWIG_1")]
  public static extern IntPtr new_IDataProcessor_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_SPtr__SWIG_2")]
  public static extern IntPtr new_IDataProcessor_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_SPtr__SWIG_3")]
  public static extern IntPtr new_IDataProcessor_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IDataProcessor_SPtr")]
  public static extern void delete_IDataProcessor_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_reset__SWIG_0")]
  public static extern void IDataProcessor_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_reset__SWIG_1")]
  public static extern void IDataProcessor_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_get")]
  public static extern IntPtr IDataProcessor_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr___ref__")]
  public static extern IntPtr IDataProcessor_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr___deref__")]
  public static extern IntPtr IDataProcessor_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_swap")]
  public static extern void IDataProcessor_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_isNull")]
  public static extern bool IDataProcessor_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_isNotNull")]
  public static extern bool IDataProcessor_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_iid_get")]
  public static extern IntPtr IDataProcessor_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_processData")]
  public static extern void IDataProcessor_SPtr_processData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_AddRef")]
  public static extern uint IDataProcessor_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_SPtr_Release")]
  public static extern uint IDataProcessor_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_CSPtr__SWIG_0")]
  public static extern IntPtr new_IDataProcessor_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_CSPtr__SWIG_1")]
  public static extern IntPtr new_IDataProcessor_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_CSPtr__SWIG_2")]
  public static extern IntPtr new_IDataProcessor_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IDataProcessor_CSPtr__SWIG_3")]
  public static extern IntPtr new_IDataProcessor_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IDataProcessor_CSPtr")]
  public static extern void delete_IDataProcessor_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_reset__SWIG_0")]
  public static extern void IDataProcessor_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_reset__SWIG_1")]
  public static extern void IDataProcessor_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_get")]
  public static extern IntPtr IDataProcessor_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr___ref__")]
  public static extern IntPtr IDataProcessor_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr___deref__")]
  public static extern IntPtr IDataProcessor_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_swap")]
  public static extern void IDataProcessor_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_isNull")]
  public static extern bool IDataProcessor_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_isNotNull")]
  public static extern bool IDataProcessor_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_CSPtr_iid_get")]
  public static extern IntPtr IDataProcessor_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_SPtr__SWIG_0")]
  public static extern IntPtr new_IXYCoverage_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_SPtr__SWIG_1")]
  public static extern IntPtr new_IXYCoverage_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_SPtr__SWIG_2")]
  public static extern IntPtr new_IXYCoverage_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_SPtr__SWIG_3")]
  public static extern IntPtr new_IXYCoverage_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IXYCoverage_SPtr")]
  public static extern void delete_IXYCoverage_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_reset__SWIG_0")]
  public static extern void IXYCoverage_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_reset__SWIG_1")]
  public static extern void IXYCoverage_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_get")]
  public static extern IntPtr IXYCoverage_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr___ref__")]
  public static extern IntPtr IXYCoverage_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr___deref__")]
  public static extern IntPtr IXYCoverage_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_swap")]
  public static extern void IXYCoverage_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_isNull")]
  public static extern bool IXYCoverage_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_isNotNull")]
  public static extern bool IXYCoverage_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_iid_get")]
  public static extern IntPtr IXYCoverage_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_SPtr_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_SPtr_getCoverageValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getAsyncCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_SPtr_getAsyncCoverageValueGetter(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getCoverageValue")]
  public static extern bool IXYCoverage_SPtr_getCoverageValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getMatrixOfValues")]
  public static extern void IXYCoverage_SPtr_getMatrixOfValues(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_hasSpatialReferenceSystem")]
  public static extern bool IXYCoverage_SPtr_hasSpatialReferenceSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_setSpatialReferenceSystem")]
  public static extern void IXYCoverage_SPtr_setSpatialReferenceSystem(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getCoordConverter")]
  public static extern IntPtr IXYCoverage_SPtr_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getSpatialPrecision")]
  public static extern double IXYCoverage_SPtr_getSpatialPrecision(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getBounds")]
  public static extern IntPtr IXYCoverage_SPtr_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getStepSize")]
  public static extern IntPtr IXYCoverage_SPtr_getStepSize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_nativeToRasterSubPixel")]
  public static extern IntPtr IXYCoverage_SPtr_nativeToRasterSubPixel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_tileLoadHint")]
  public static extern void IXYCoverage_SPtr_tileLoadHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_tileLoadDoneHint")]
  public static extern void IXYCoverage_SPtr_tileLoadDoneHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getIterator__SWIG_0")]
  public static extern IntPtr IXYCoverage_SPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getIterator__SWIG_1")]
  public static extern IntPtr IXYCoverage_SPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_SPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFeatureStyles")]
  public static extern IntPtr IXYCoverage_SPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFeature")]
  public static extern IntPtr IXYCoverage_SPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_canRasterize")]
  public static extern bool IXYCoverage_SPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_geometryHint")]
  public static extern void IXYCoverage_SPtr_geometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_endGeometryHint")]
  public static extern void IXYCoverage_SPtr_endGeometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_isWritable")]
  public static extern bool IXYCoverage_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getID")]
  public static extern IntPtr IXYCoverage_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getGeometry")]
  public static extern IntPtr IXYCoverage_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getGeometry_const")]
  public static extern IntPtr IXYCoverage_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr IXYCoverage_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr IXYCoverage_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFieldValue")]
  public static extern IntPtr IXYCoverage_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_setFieldValue")]
  public static extern void IXYCoverage_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFieldValueByName")]
  public static extern IntPtr IXYCoverage_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_setFieldValueByName")]
  public static extern void IXYCoverage_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_getFieldValues")]
  public static extern IntPtr IXYCoverage_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_setFieldValues")]
  public static extern void IXYCoverage_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_addField__SWIG_0")]
  public static extern void IXYCoverage_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_addField__SWIG_1")]
  public static extern void IXYCoverage_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_addField__SWIG_2")]
  public static extern void IXYCoverage_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_AddRef")]
  public static extern uint IXYCoverage_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_SPtr_Release")]
  public static extern uint IXYCoverage_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_CSPtr__SWIG_0")]
  public static extern IntPtr new_IXYCoverage_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_CSPtr__SWIG_1")]
  public static extern IntPtr new_IXYCoverage_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_CSPtr__SWIG_2")]
  public static extern IntPtr new_IXYCoverage_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IXYCoverage_CSPtr__SWIG_3")]
  public static extern IntPtr new_IXYCoverage_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IXYCoverage_CSPtr")]
  public static extern void delete_IXYCoverage_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_reset__SWIG_0")]
  public static extern void IXYCoverage_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_reset__SWIG_1")]
  public static extern void IXYCoverage_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_get")]
  public static extern IntPtr IXYCoverage_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr___ref__")]
  public static extern IntPtr IXYCoverage_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr___deref__")]
  public static extern IntPtr IXYCoverage_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_swap")]
  public static extern void IXYCoverage_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_isNull")]
  public static extern bool IXYCoverage_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_isNotNull")]
  public static extern bool IXYCoverage_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_iid_get")]
  public static extern IntPtr IXYCoverage_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_CSPtr_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_CSPtr_getCoverageValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getAsyncCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_CSPtr_getAsyncCoverageValueGetter(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getCoverageValue")]
  public static extern bool IXYCoverage_CSPtr_getCoverageValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getMatrixOfValues")]
  public static extern void IXYCoverage_CSPtr_getMatrixOfValues(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_hasSpatialReferenceSystem")]
  public static extern bool IXYCoverage_CSPtr_hasSpatialReferenceSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getCoordConverter")]
  public static extern IntPtr IXYCoverage_CSPtr_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getSpatialPrecision")]
  public static extern double IXYCoverage_CSPtr_getSpatialPrecision(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getBounds")]
  public static extern IntPtr IXYCoverage_CSPtr_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getStepSize")]
  public static extern IntPtr IXYCoverage_CSPtr_getStepSize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_nativeToRasterSubPixel")]
  public static extern IntPtr IXYCoverage_CSPtr_nativeToRasterSubPixel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_tileLoadHint")]
  public static extern void IXYCoverage_CSPtr_tileLoadHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_tileLoadDoneHint")]
  public static extern void IXYCoverage_CSPtr_tileLoadDoneHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getIterator__SWIG_0")]
  public static extern IntPtr IXYCoverage_CSPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getIterator__SWIG_1")]
  public static extern IntPtr IXYCoverage_CSPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_CSPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFeatureStyles")]
  public static extern IntPtr IXYCoverage_CSPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFeature")]
  public static extern IntPtr IXYCoverage_CSPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_canRasterize")]
  public static extern bool IXYCoverage_CSPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_isWritable")]
  public static extern bool IXYCoverage_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getID")]
  public static extern IntPtr IXYCoverage_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getGeometry_const")]
  public static extern IntPtr IXYCoverage_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr IXYCoverage_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr IXYCoverage_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFieldValue")]
  public static extern IntPtr IXYCoverage_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFieldValueByName")]
  public static extern IntPtr IXYCoverage_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_CSPtr_getFieldValues")]
  public static extern IntPtr IXYCoverage_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_SPtr__SWIG_0")]
  public static extern IntPtr new_IFeature_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_SPtr__SWIG_1")]
  public static extern IntPtr new_IFeature_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_SPtr__SWIG_2")]
  public static extern IntPtr new_IFeature_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_SPtr__SWIG_3")]
  public static extern IntPtr new_IFeature_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeature_SPtr")]
  public static extern void delete_IFeature_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_reset__SWIG_0")]
  public static extern void IFeature_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_reset__SWIG_1")]
  public static extern void IFeature_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_get")]
  public static extern IntPtr IFeature_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr___ref__")]
  public static extern IntPtr IFeature_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr___deref__")]
  public static extern IntPtr IFeature_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_swap")]
  public static extern void IFeature_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_isNull")]
  public static extern bool IFeature_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_isNotNull")]
  public static extern bool IFeature_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_iid_get")]
  public static extern IntPtr IFeature_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_isWritable")]
  public static extern bool IFeature_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getID")]
  public static extern IntPtr IFeature_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getGeometry")]
  public static extern IntPtr IFeature_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getGeometry_const")]
  public static extern IntPtr IFeature_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeature_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeature_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeature_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getFieldValue")]
  public static extern IntPtr IFeature_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_setFieldValue")]
  public static extern void IFeature_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getFieldValueByName")]
  public static extern IntPtr IFeature_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_setFieldValueByName")]
  public static extern void IFeature_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_getFieldValues")]
  public static extern IntPtr IFeature_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_setFieldValues")]
  public static extern void IFeature_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_addField__SWIG_0")]
  public static extern void IFeature_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_addField__SWIG_1")]
  public static extern void IFeature_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_addField__SWIG_2")]
  public static extern void IFeature_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_AddRef")]
  public static extern uint IFeature_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_SPtr_Release")]
  public static extern uint IFeature_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_CSPtr__SWIG_0")]
  public static extern IntPtr new_IFeature_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_CSPtr__SWIG_1")]
  public static extern IntPtr new_IFeature_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_CSPtr__SWIG_2")]
  public static extern IntPtr new_IFeature_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeature_CSPtr__SWIG_3")]
  public static extern IntPtr new_IFeature_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeature_CSPtr")]
  public static extern void delete_IFeature_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_reset__SWIG_0")]
  public static extern void IFeature_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_reset__SWIG_1")]
  public static extern void IFeature_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_get")]
  public static extern IntPtr IFeature_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr___ref__")]
  public static extern IntPtr IFeature_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr___deref__")]
  public static extern IntPtr IFeature_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_swap")]
  public static extern void IFeature_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_isNull")]
  public static extern bool IFeature_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_isNotNull")]
  public static extern bool IFeature_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_iid_get")]
  public static extern IntPtr IFeature_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_isWritable")]
  public static extern bool IFeature_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getID")]
  public static extern IntPtr IFeature_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getGeometry_const")]
  public static extern IntPtr IFeature_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeature_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeature_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeature_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getFieldValue")]
  public static extern IntPtr IFeature_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getFieldValueByName")]
  public static extern IntPtr IFeature_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_CSPtr_getFieldValues")]
  public static extern IntPtr IFeature_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_SPtr__SWIG_0")]
  public static extern IntPtr new_IWritableFeature_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_SPtr__SWIG_1")]
  public static extern IntPtr new_IWritableFeature_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_SPtr__SWIG_2")]
  public static extern IntPtr new_IWritableFeature_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_SPtr__SWIG_3")]
  public static extern IntPtr new_IWritableFeature_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWritableFeature_SPtr")]
  public static extern void delete_IWritableFeature_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_reset__SWIG_0")]
  public static extern void IWritableFeature_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_reset__SWIG_1")]
  public static extern void IWritableFeature_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_get")]
  public static extern IntPtr IWritableFeature_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr___ref__")]
  public static extern IntPtr IWritableFeature_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr___deref__")]
  public static extern IntPtr IWritableFeature_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_swap")]
  public static extern void IWritableFeature_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_isNull")]
  public static extern bool IWritableFeature_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_isNotNull")]
  public static extern bool IWritableFeature_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_iid_get")]
  public static extern IntPtr IWritableFeature_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setID")]
  public static extern void IWritableFeature_SPtr_setID(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setGeometryName")]
  public static extern void IWritableFeature_SPtr_setGeometryName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setGeometry")]
  public static extern void IWritableFeature_SPtr_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setIsWritAble")]
  public static extern void IWritableFeature_SPtr_setIsWritAble(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setStyle")]
  public static extern void IWritableFeature_SPtr_setStyle(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setMetaDataDefinition")]
  public static extern void IWritableFeature_SPtr_setMetaDataDefinition(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_isWritable")]
  public static extern bool IWritableFeature_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getID")]
  public static extern IntPtr IWritableFeature_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getGeometry")]
  public static extern IntPtr IWritableFeature_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getGeometry_const")]
  public static extern IntPtr IWritableFeature_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr IWritableFeature_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr IWritableFeature_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IWritableFeature_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getFieldValue")]
  public static extern IntPtr IWritableFeature_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setFieldValue")]
  public static extern void IWritableFeature_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getFieldValueByName")]
  public static extern IntPtr IWritableFeature_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setFieldValueByName")]
  public static extern void IWritableFeature_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_getFieldValues")]
  public static extern IntPtr IWritableFeature_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_setFieldValues")]
  public static extern void IWritableFeature_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_addField__SWIG_0")]
  public static extern void IWritableFeature_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_addField__SWIG_1")]
  public static extern void IWritableFeature_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_addField__SWIG_2")]
  public static extern void IWritableFeature_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_AddRef")]
  public static extern uint IWritableFeature_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_SPtr_Release")]
  public static extern uint IWritableFeature_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_CSPtr__SWIG_0")]
  public static extern IntPtr new_IWritableFeature_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_CSPtr__SWIG_1")]
  public static extern IntPtr new_IWritableFeature_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_CSPtr__SWIG_2")]
  public static extern IntPtr new_IWritableFeature_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWritableFeature_CSPtr__SWIG_3")]
  public static extern IntPtr new_IWritableFeature_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWritableFeature_CSPtr")]
  public static extern void delete_IWritableFeature_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_reset__SWIG_0")]
  public static extern void IWritableFeature_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_reset__SWIG_1")]
  public static extern void IWritableFeature_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_get")]
  public static extern IntPtr IWritableFeature_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr___ref__")]
  public static extern IntPtr IWritableFeature_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr___deref__")]
  public static extern IntPtr IWritableFeature_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_swap")]
  public static extern void IWritableFeature_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_isNull")]
  public static extern bool IWritableFeature_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_isNotNull")]
  public static extern bool IWritableFeature_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_iid_get")]
  public static extern IntPtr IWritableFeature_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_isWritable")]
  public static extern bool IWritableFeature_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getID")]
  public static extern IntPtr IWritableFeature_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getGeometry_const")]
  public static extern IntPtr IWritableFeature_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr IWritableFeature_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr IWritableFeature_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IWritableFeature_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getFieldValue")]
  public static extern IntPtr IWritableFeature_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getFieldValueByName")]
  public static extern IntPtr IWritableFeature_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_CSPtr_getFieldValues")]
  public static extern IntPtr IWritableFeature_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_SPtr__SWIG_0")]
  public static extern IntPtr new_IString_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_SPtr__SWIG_1")]
  public static extern IntPtr new_IString_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_SPtr__SWIG_2")]
  public static extern IntPtr new_IString_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_SPtr__SWIG_3")]
  public static extern IntPtr new_IString_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IString_SPtr")]
  public static extern void delete_IString_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_reset__SWIG_0")]
  public static extern void IString_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_reset__SWIG_1")]
  public static extern void IString_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_get")]
  public static extern IntPtr IString_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr___ref__")]
  public static extern IntPtr IString_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr___deref__")]
  public static extern IntPtr IString_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_swap")]
  public static extern void IString_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_isNull")]
  public static extern bool IString_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_isNotNull")]
  public static extern bool IString_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_iid_get")]
  public static extern IntPtr IString_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_str__SWIG_0")]
  public static extern IntPtr IString_SPtr_str__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_str__SWIG_1")]
  public static extern void IString_SPtr_str__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_AddRef")]
  public static extern uint IString_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_SPtr_Release")]
  public static extern uint IString_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_CSPtr__SWIG_0")]
  public static extern IntPtr new_IString_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_CSPtr__SWIG_1")]
  public static extern IntPtr new_IString_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_CSPtr__SWIG_2")]
  public static extern IntPtr new_IString_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IString_CSPtr__SWIG_3")]
  public static extern IntPtr new_IString_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IString_CSPtr")]
  public static extern void delete_IString_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_reset__SWIG_0")]
  public static extern void IString_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_reset__SWIG_1")]
  public static extern void IString_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_get")]
  public static extern IntPtr IString_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr___ref__")]
  public static extern IntPtr IString_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr___deref__")]
  public static extern IntPtr IString_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_swap")]
  public static extern void IString_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_isNull")]
  public static extern bool IString_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_isNotNull")]
  public static extern bool IString_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_CSPtr_iid_get")]
  public static extern IntPtr IString_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_SPtr__SWIG_0")]
  public static extern IntPtr new_ICoordConverter_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_SPtr__SWIG_1")]
  public static extern IntPtr new_ICoordConverter_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_SPtr__SWIG_2")]
  public static extern IntPtr new_ICoordConverter_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_SPtr__SWIG_3")]
  public static extern IntPtr new_ICoordConverter_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverter_SPtr")]
  public static extern void delete_ICoordConverter_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_reset__SWIG_0")]
  public static extern void ICoordConverter_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_reset__SWIG_1")]
  public static extern void ICoordConverter_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_get")]
  public static extern IntPtr ICoordConverter_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr___ref__")]
  public static extern IntPtr ICoordConverter_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr___deref__")]
  public static extern IntPtr ICoordConverter_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_swap")]
  public static extern void ICoordConverter_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_isNull")]
  public static extern bool ICoordConverter_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_isNotNull")]
  public static extern bool ICoordConverter_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_iid_get")]
  public static extern IntPtr ICoordConverter_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_clone")]
  public static extern IntPtr ICoordConverter_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_nativeToPYXIS")]
  public static extern void ICoordConverter_SPtr_nativeToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_pyxisToNative")]
  public static extern void ICoordConverter_SPtr_pyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_tryPyxisToNative")]
  public static extern bool ICoordConverter_SPtr_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_nativeToLatLon")]
  public static extern void ICoordConverter_SPtr_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_latLonToNative")]
  public static extern void ICoordConverter_SPtr_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_isProjected")]
  public static extern bool ICoordConverter_SPtr_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_serialize")]
  public static extern IntPtr ICoordConverter_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_deserialize")]
  public static extern IntPtr ICoordConverter_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_serializeCOM")]
  public static extern void ICoordConverter_SPtr_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_AddRef")]
  public static extern uint ICoordConverter_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_SPtr_Release")]
  public static extern uint ICoordConverter_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_CSPtr__SWIG_0")]
  public static extern IntPtr new_ICoordConverter_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_CSPtr__SWIG_1")]
  public static extern IntPtr new_ICoordConverter_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_CSPtr__SWIG_2")]
  public static extern IntPtr new_ICoordConverter_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverter_CSPtr__SWIG_3")]
  public static extern IntPtr new_ICoordConverter_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverter_CSPtr")]
  public static extern void delete_ICoordConverter_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_reset__SWIG_0")]
  public static extern void ICoordConverter_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_reset__SWIG_1")]
  public static extern void ICoordConverter_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_get")]
  public static extern IntPtr ICoordConverter_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr___ref__")]
  public static extern IntPtr ICoordConverter_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr___deref__")]
  public static extern IntPtr ICoordConverter_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_swap")]
  public static extern void ICoordConverter_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_isNull")]
  public static extern bool ICoordConverter_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_isNotNull")]
  public static extern bool ICoordConverter_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_iid_get")]
  public static extern IntPtr ICoordConverter_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_clone")]
  public static extern IntPtr ICoordConverter_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_nativeToPYXIS")]
  public static extern void ICoordConverter_CSPtr_nativeToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_pyxisToNative")]
  public static extern void ICoordConverter_CSPtr_pyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_tryPyxisToNative")]
  public static extern bool ICoordConverter_CSPtr_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_nativeToLatLon")]
  public static extern void ICoordConverter_CSPtr_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_latLonToNative")]
  public static extern void ICoordConverter_CSPtr_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_isProjected")]
  public static extern bool ICoordConverter_CSPtr_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_serialize")]
  public static extern IntPtr ICoordConverter_CSPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_CSPtr_serializeCOM")]
  public static extern void ICoordConverter_CSPtr_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_SPtr__SWIG_0")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_SPtr__SWIG_1")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_SPtr__SWIG_2")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_SPtr__SWIG_3")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverterFromSrsFactory_SPtr")]
  public static extern void delete_ICoordConverterFromSrsFactory_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_reset__SWIG_0")]
  public static extern void ICoordConverterFromSrsFactory_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_reset__SWIG_1")]
  public static extern void ICoordConverterFromSrsFactory_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_get")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr___ref__")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr___deref__")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_swap")]
  public static extern void ICoordConverterFromSrsFactory_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_isNull")]
  public static extern bool ICoordConverterFromSrsFactory_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_isNotNull")]
  public static extern bool ICoordConverterFromSrsFactory_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_iid_get")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_createFromSRS")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr_createFromSRS(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_createFromWKT")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr_createFromWKT(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_convertToSRS")]
  public static extern IntPtr ICoordConverterFromSrsFactory_SPtr_convertToSRS(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_AddRef")]
  public static extern uint ICoordConverterFromSrsFactory_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_SPtr_Release")]
  public static extern uint ICoordConverterFromSrsFactory_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_CSPtr__SWIG_0")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_CSPtr__SWIG_1")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_CSPtr__SWIG_2")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoordConverterFromSrsFactory_CSPtr__SWIG_3")]
  public static extern IntPtr new_ICoordConverterFromSrsFactory_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverterFromSrsFactory_CSPtr")]
  public static extern void delete_ICoordConverterFromSrsFactory_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_reset__SWIG_0")]
  public static extern void ICoordConverterFromSrsFactory_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_reset__SWIG_1")]
  public static extern void ICoordConverterFromSrsFactory_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_get")]
  public static extern IntPtr ICoordConverterFromSrsFactory_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr___ref__")]
  public static extern IntPtr ICoordConverterFromSrsFactory_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr___deref__")]
  public static extern IntPtr ICoordConverterFromSrsFactory_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_swap")]
  public static extern void ICoordConverterFromSrsFactory_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_isNull")]
  public static extern bool ICoordConverterFromSrsFactory_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_isNotNull")]
  public static extern bool ICoordConverterFromSrsFactory_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_CSPtr_iid_get")]
  public static extern IntPtr ICoordConverterFromSrsFactory_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpatialReferenceSystem_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXSpatialReferenceSystem_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpatialReferenceSystem_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXSpatialReferenceSystem_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpatialReferenceSystem_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXSpatialReferenceSystem_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpatialReferenceSystem_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXSpatialReferenceSystem_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSpatialReferenceSystem_SPtr")]
  public static extern void delete_PYXSpatialReferenceSystem_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_reset__SWIG_0")]
  public static extern void PYXSpatialReferenceSystem_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_reset__SWIG_1")]
  public static extern void PYXSpatialReferenceSystem_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_get")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr___ref__")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr___deref__")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_swap")]
  public static extern void PYXSpatialReferenceSystem_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_isNull")]
  public static extern bool PYXSpatialReferenceSystem_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_isNotNull")]
  public static extern bool PYXSpatialReferenceSystem_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_clone")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_knMaxZone_get")]
  public static extern int PYXSpatialReferenceSystem_SPtr_knMaxZone_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_create")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_kstrScope_get")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_kstrScope_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getScope")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_getScope(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setSystem")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setSystem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getSystem")]
  public static extern int PYXSpatialReferenceSystem_SPtr_getSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setDatum")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setDatum(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getDatum")]
  public static extern int PYXSpatialReferenceSystem_SPtr_getDatum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setProjection")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setProjection(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getProjection")]
  public static extern int PYXSpatialReferenceSystem_SPtr_getProjection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setIsUTMNorth")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setIsUTMNorth(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getIsUTMNorth")]
  public static extern bool PYXSpatialReferenceSystem_SPtr_getIsUTMNorth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setZone")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setZone(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getZone")]
  public static extern int PYXSpatialReferenceSystem_SPtr_getZone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_setWKT")]
  public static extern void PYXSpatialReferenceSystem_SPtr_setWKT(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_SPtr_getWKT")]
  public static extern IntPtr PYXSpatialReferenceSystem_SPtr_getWKT(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXTableDefinition_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXTableDefinition_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXTableDefinition_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXTableDefinition_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTableDefinition_CSPtr")]
  public static extern void delete_PYXTableDefinition_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_reset__SWIG_0")]
  public static extern void PYXTableDefinition_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_reset__SWIG_1")]
  public static extern void PYXTableDefinition_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_get")]
  public static extern IntPtr PYXTableDefinition_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr___ref__")]
  public static extern IntPtr PYXTableDefinition_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr___deref__")]
  public static extern IntPtr PYXTableDefinition_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_swap")]
  public static extern void PYXTableDefinition_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_isNull")]
  public static extern bool PYXTableDefinition_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_isNotNull")]
  public static extern bool PYXTableDefinition_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_clone")]
  public static extern IntPtr PYXTableDefinition_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_getFieldCount")]
  public static extern int PYXTableDefinition_CSPtr_getFieldCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_getFieldDefinition")]
  public static extern IntPtr PYXTableDefinition_CSPtr_getFieldDefinition(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_getFieldIndex")]
  public static extern int PYXTableDefinition_CSPtr_getFieldIndex(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_CSPtr_getFieldNames")]
  public static extern IntPtr PYXTableDefinition_CSPtr_getFieldNames(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXTableDefinition_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXTableDefinition_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXTableDefinition_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTableDefinition_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXTableDefinition_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTableDefinition_SPtr")]
  public static extern void delete_PYXTableDefinition_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_reset__SWIG_0")]
  public static extern void PYXTableDefinition_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_reset__SWIG_1")]
  public static extern void PYXTableDefinition_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_get")]
  public static extern IntPtr PYXTableDefinition_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr___ref__")]
  public static extern IntPtr PYXTableDefinition_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr___deref__")]
  public static extern IntPtr PYXTableDefinition_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_swap")]
  public static extern void PYXTableDefinition_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_isNull")]
  public static extern bool PYXTableDefinition_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_isNotNull")]
  public static extern bool PYXTableDefinition_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_test")]
  public static extern void PYXTableDefinition_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXTableDefinition_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXTableDefinition_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_clone")]
  public static extern IntPtr PYXTableDefinition_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_clear")]
  public static extern void PYXTableDefinition_SPtr_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_addFieldDefinition__SWIG_0")]
  public static extern int PYXTableDefinition_SPtr_addFieldDefinition__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_addFieldDefinition__SWIG_1")]
  public static extern int PYXTableDefinition_SPtr_addFieldDefinition__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_addFieldDefinition__SWIG_2")]
  public static extern int PYXTableDefinition_SPtr_addFieldDefinition__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_addNullField")]
  public static extern void PYXTableDefinition_SPtr_addNullField(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_getFieldCount")]
  public static extern int PYXTableDefinition_SPtr_getFieldCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_getFieldDefinition")]
  public static extern IntPtr PYXTableDefinition_SPtr_getFieldDefinition(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_getFieldIndex")]
  public static extern int PYXTableDefinition_SPtr_getFieldIndex(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_SPtr_getFieldNames")]
  public static extern IntPtr PYXTableDefinition_SPtr_getFieldNames(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXDataSet_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXDataSet_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXDataSet_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXDataSet_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXDataSet_CSPtr")]
  public static extern void delete_PYXDataSet_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_reset__SWIG_0")]
  public static extern void PYXDataSet_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_reset__SWIG_1")]
  public static extern void PYXDataSet_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_get")]
  public static extern IntPtr PYXDataSet_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr___ref__")]
  public static extern IntPtr PYXDataSet_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr___deref__")]
  public static extern IntPtr PYXDataSet_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_swap")]
  public static extern void PYXDataSet_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_isNull")]
  public static extern bool PYXDataSet_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_isNotNull")]
  public static extern bool PYXDataSet_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisDimensionTime_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisDimensionTime_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisDimensionHeight_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisDimensionHeight_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisDimensionGRIBModel_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisDimensionGRIBModel_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisLongName_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisLongName_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisShortName_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisShortName_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisUnits_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisUnits_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisFeatureCount_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisFeatureCount_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_s_strPyxisPixelCount_get")]
  public static extern IntPtr PYXDataSet_CSPtr_s_strPyxisPixelCount_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr PYXDataSet_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getFieldValue")]
  public static extern IntPtr PYXDataSet_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getFieldValueByName")]
  public static extern IntPtr PYXDataSet_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getFieldValues")]
  public static extern IntPtr PYXDataSet_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_clone")]
  public static extern IntPtr PYXDataSet_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_isLoadable")]
  public static extern bool PYXDataSet_CSPtr_isLoadable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getUri")]
  public static extern IntPtr PYXDataSet_CSPtr_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getName")]
  public static extern IntPtr PYXDataSet_CSPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getLayer")]
  public static extern IntPtr PYXDataSet_CSPtr_getLayer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getContentDefinition_const")]
  public static extern IntPtr PYXDataSet_CSPtr_getContentDefinition_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getMissingRequiredFilesAllOf")]
  public static extern IntPtr PYXDataSet_CSPtr_getMissingRequiredFilesAllOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getMissingRequiredFilesOneOf")]
  public static extern IntPtr PYXDataSet_CSPtr_getMissingRequiredFilesOneOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getMissingOptionalFiles")]
  public static extern IntPtr PYXDataSet_CSPtr_getMissingOptionalFiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_getBoundingBox")]
  public static extern void PYXDataSet_CSPtr_getBoundingBox(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_CSPtr_iid_get")]
  public static extern IntPtr PYXDataSet_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXDataSet_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXDataSet_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXDataSet_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDataSet_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXDataSet_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXDataSet_SPtr")]
  public static extern void delete_PYXDataSet_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_reset__SWIG_0")]
  public static extern void PYXDataSet_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_reset__SWIG_1")]
  public static extern void PYXDataSet_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_get")]
  public static extern IntPtr PYXDataSet_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr___ref__")]
  public static extern IntPtr PYXDataSet_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr___deref__")]
  public static extern IntPtr PYXDataSet_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_swap")]
  public static extern void PYXDataSet_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_isNull")]
  public static extern bool PYXDataSet_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_isNotNull")]
  public static extern bool PYXDataSet_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisDimensionTime_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisDimensionTime_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisDimensionHeight_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisDimensionHeight_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisDimensionGRIBModel_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisDimensionGRIBModel_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisLongName_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisLongName_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisShortName_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisShortName_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisUnits_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisUnits_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisFeatureCount_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisFeatureCount_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_s_strPyxisPixelCount_get")]
  public static extern IntPtr PYXDataSet_SPtr_s_strPyxisPixelCount_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_AddRef")]
  public static extern uint PYXDataSet_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_Release")]
  public static extern uint PYXDataSet_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr PYXDataSet_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getFieldValue")]
  public static extern IntPtr PYXDataSet_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setFieldValue")]
  public static extern void PYXDataSet_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getFieldValueByName")]
  public static extern IntPtr PYXDataSet_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setFieldValueByName")]
  public static extern void PYXDataSet_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getFieldValues")]
  public static extern IntPtr PYXDataSet_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setFieldValues")]
  public static extern void PYXDataSet_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_addField__SWIG_0")]
  public static extern void PYXDataSet_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_addField__SWIG_1")]
  public static extern void PYXDataSet_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_addField__SWIG_2")]
  public static extern void PYXDataSet_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_test")]
  public static extern void PYXDataSet_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXDataSet_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXDataSet_SPtr_create__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXDataSet_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_clone")]
  public static extern IntPtr PYXDataSet_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_isLoadable")]
  public static extern bool PYXDataSet_SPtr_isLoadable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getUri")]
  public static extern IntPtr PYXDataSet_SPtr_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setUri")]
  public static extern void PYXDataSet_SPtr_setUri(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getName")]
  public static extern IntPtr PYXDataSet_SPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setName")]
  public static extern void PYXDataSet_SPtr_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setLayer")]
  public static extern void PYXDataSet_SPtr_setLayer(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getLayer")]
  public static extern IntPtr PYXDataSet_SPtr_getLayer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getContentDefinition_const")]
  public static extern IntPtr PYXDataSet_SPtr_getContentDefinition_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getContentDefinition")]
  public static extern IntPtr PYXDataSet_SPtr_getContentDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getMissingRequiredFilesAllOf")]
  public static extern IntPtr PYXDataSet_SPtr_getMissingRequiredFilesAllOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setMissingRequiredFilesAllOf")]
  public static extern void PYXDataSet_SPtr_setMissingRequiredFilesAllOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getMissingRequiredFilesOneOf")]
  public static extern IntPtr PYXDataSet_SPtr_getMissingRequiredFilesOneOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setMissingRequiredFilesOneOf")]
  public static extern void PYXDataSet_SPtr_setMissingRequiredFilesOneOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getMissingOptionalFiles")]
  public static extern IntPtr PYXDataSet_SPtr_getMissingOptionalFiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setMissingOptionalFiles")]
  public static extern void PYXDataSet_SPtr_setMissingOptionalFiles(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_getBoundingBox")]
  public static extern void PYXDataSet_SPtr_getBoundingBox(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_setBoundingBox")]
  public static extern void PYXDataSet_SPtr_setBoundingBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_SPtr_iid_get")]
  public static extern IntPtr PYXDataSet_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCatalog_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCatalog_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCatalog_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCatalog_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCatalog_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCatalog_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCatalog_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCatalog_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCatalog_CSPtr")]
  public static extern void delete_PYXCatalog_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_reset__SWIG_0")]
  public static extern void PYXCatalog_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_reset__SWIG_1")]
  public static extern void PYXCatalog_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_get")]
  public static extern IntPtr PYXCatalog_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr___ref__")]
  public static extern IntPtr PYXCatalog_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr___deref__")]
  public static extern IntPtr PYXCatalog_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_swap")]
  public static extern void PYXCatalog_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_isNull")]
  public static extern bool PYXCatalog_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_isNotNull")]
  public static extern bool PYXCatalog_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_clone")]
  public static extern IntPtr PYXCatalog_CSPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getUri")]
  public static extern IntPtr PYXCatalog_CSPtr_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getName")]
  public static extern IntPtr PYXCatalog_CSPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getDataSetCount")]
  public static extern int PYXCatalog_CSPtr_getDataSetCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getDataSet")]
  public static extern IntPtr PYXCatalog_CSPtr_getDataSet(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getSubCatalogCount")]
  public static extern int PYXCatalog_CSPtr_getSubCatalogCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_getSubCatalog")]
  public static extern IntPtr PYXCatalog_CSPtr_getSubCatalog(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_release")]
  public static extern int PYXCatalog_CSPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_CSPtr_addRef")]
  public static extern int PYXCatalog_CSPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYCatalog_SPtr__SWIG_0")]
  public static extern IntPtr new_PYCatalog_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYCatalog_SPtr__SWIG_1")]
  public static extern IntPtr new_PYCatalog_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYCatalog_SPtr__SWIG_2")]
  public static extern IntPtr new_PYCatalog_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYCatalog_SPtr__SWIG_3")]
  public static extern IntPtr new_PYCatalog_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYCatalog_SPtr")]
  public static extern void delete_PYCatalog_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_reset__SWIG_0")]
  public static extern void PYCatalog_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_reset__SWIG_1")]
  public static extern void PYCatalog_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_get")]
  public static extern IntPtr PYCatalog_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr___ref__")]
  public static extern IntPtr PYCatalog_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr___deref__")]
  public static extern IntPtr PYCatalog_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_swap")]
  public static extern void PYCatalog_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_isNull")]
  public static extern bool PYCatalog_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_isNotNull")]
  public static extern bool PYCatalog_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_test")]
  public static extern void PYCatalog_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_create__SWIG_0")]
  public static extern IntPtr PYCatalog_SPtr_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_create__SWIG_1")]
  public static extern IntPtr PYCatalog_SPtr_create__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_create__SWIG_2")]
  public static extern IntPtr PYCatalog_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_clone")]
  public static extern IntPtr PYCatalog_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getUri")]
  public static extern IntPtr PYCatalog_SPtr_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_setUri")]
  public static extern void PYCatalog_SPtr_setUri(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getName")]
  public static extern IntPtr PYCatalog_SPtr_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_setName")]
  public static extern void PYCatalog_SPtr_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_addDataSet")]
  public static extern int PYCatalog_SPtr_addDataSet(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getDataSetCount")]
  public static extern int PYCatalog_SPtr_getDataSetCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getDataSet")]
  public static extern IntPtr PYCatalog_SPtr_getDataSet(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_addSubCatalog")]
  public static extern int PYCatalog_SPtr_addSubCatalog(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getSubCatalogCount")]
  public static extern int PYCatalog_SPtr_getSubCatalogCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_getSubCatalog")]
  public static extern IntPtr PYCatalog_SPtr_getSubCatalog(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_release")]
  public static extern int PYCatalog_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYCatalog_SPtr_addRef")]
  public static extern int PYCatalog_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_SPtr__SWIG_0")]
  public static extern IntPtr new_IRecord_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_SPtr__SWIG_1")]
  public static extern IntPtr new_IRecord_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_SPtr__SWIG_2")]
  public static extern IntPtr new_IRecord_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_SPtr__SWIG_3")]
  public static extern IntPtr new_IRecord_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecord_SPtr")]
  public static extern void delete_IRecord_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_reset__SWIG_0")]
  public static extern void IRecord_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_reset__SWIG_1")]
  public static extern void IRecord_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_get")]
  public static extern IntPtr IRecord_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr___ref__")]
  public static extern IntPtr IRecord_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr___deref__")]
  public static extern IntPtr IRecord_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_swap")]
  public static extern void IRecord_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_isNull")]
  public static extern bool IRecord_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_isNotNull")]
  public static extern bool IRecord_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_iid_get")]
  public static extern IntPtr IRecord_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IRecord_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_getFieldValue")]
  public static extern IntPtr IRecord_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_setFieldValue")]
  public static extern void IRecord_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_getFieldValueByName")]
  public static extern IntPtr IRecord_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_setFieldValueByName")]
  public static extern void IRecord_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_getFieldValues")]
  public static extern IntPtr IRecord_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_setFieldValues")]
  public static extern void IRecord_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_addField__SWIG_0")]
  public static extern void IRecord_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_addField__SWIG_1")]
  public static extern void IRecord_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_addField__SWIG_2")]
  public static extern void IRecord_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_AddRef")]
  public static extern uint IRecord_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_SPtr_Release")]
  public static extern uint IRecord_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_CSPtr__SWIG_0")]
  public static extern IntPtr new_IRecord_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_CSPtr__SWIG_1")]
  public static extern IntPtr new_IRecord_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_CSPtr__SWIG_2")]
  public static extern IntPtr new_IRecord_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecord_CSPtr__SWIG_3")]
  public static extern IntPtr new_IRecord_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecord_CSPtr")]
  public static extern void delete_IRecord_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_reset__SWIG_0")]
  public static extern void IRecord_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_reset__SWIG_1")]
  public static extern void IRecord_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_get")]
  public static extern IntPtr IRecord_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr___ref__")]
  public static extern IntPtr IRecord_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr___deref__")]
  public static extern IntPtr IRecord_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_swap")]
  public static extern void IRecord_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_isNull")]
  public static extern bool IRecord_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_isNotNull")]
  public static extern bool IRecord_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_iid_get")]
  public static extern IntPtr IRecord_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IRecord_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_getFieldValue")]
  public static extern IntPtr IRecord_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_getFieldValueByName")]
  public static extern IntPtr IRecord_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_CSPtr_getFieldValues")]
  public static extern IntPtr IRecord_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_SPtr__SWIG_0")]
  public static extern IntPtr new_IRecordCollection_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_SPtr__SWIG_1")]
  public static extern IntPtr new_IRecordCollection_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_SPtr__SWIG_2")]
  public static extern IntPtr new_IRecordCollection_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_SPtr__SWIG_3")]
  public static extern IntPtr new_IRecordCollection_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecordCollection_SPtr")]
  public static extern void delete_IRecordCollection_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_reset__SWIG_0")]
  public static extern void IRecordCollection_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_reset__SWIG_1")]
  public static extern void IRecordCollection_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_get")]
  public static extern IntPtr IRecordCollection_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr___ref__")]
  public static extern IntPtr IRecordCollection_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr___deref__")]
  public static extern IntPtr IRecordCollection_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_swap")]
  public static extern void IRecordCollection_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_isNull")]
  public static extern bool IRecordCollection_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_isNotNull")]
  public static extern bool IRecordCollection_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_iid_get")]
  public static extern IntPtr IRecordCollection_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getIterator")]
  public static extern IntPtr IRecordCollection_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getRecordDefinition")]
  public static extern IntPtr IRecordCollection_SPtr_getRecordDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getRecord")]
  public static extern IntPtr IRecordCollection_SPtr_getRecord(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IRecordCollection_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getFieldValue")]
  public static extern IntPtr IRecordCollection_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_setFieldValue")]
  public static extern void IRecordCollection_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getFieldValueByName")]
  public static extern IntPtr IRecordCollection_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_setFieldValueByName")]
  public static extern void IRecordCollection_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_getFieldValues")]
  public static extern IntPtr IRecordCollection_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_setFieldValues")]
  public static extern void IRecordCollection_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_addField__SWIG_0")]
  public static extern void IRecordCollection_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_addField__SWIG_1")]
  public static extern void IRecordCollection_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_addField__SWIG_2")]
  public static extern void IRecordCollection_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_AddRef")]
  public static extern uint IRecordCollection_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_SPtr_Release")]
  public static extern uint IRecordCollection_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_CSPtr__SWIG_0")]
  public static extern IntPtr new_IRecordCollection_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_CSPtr__SWIG_1")]
  public static extern IntPtr new_IRecordCollection_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_CSPtr__SWIG_2")]
  public static extern IntPtr new_IRecordCollection_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IRecordCollection_CSPtr__SWIG_3")]
  public static extern IntPtr new_IRecordCollection_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecordCollection_CSPtr")]
  public static extern void delete_IRecordCollection_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_reset__SWIG_0")]
  public static extern void IRecordCollection_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_reset__SWIG_1")]
  public static extern void IRecordCollection_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_get")]
  public static extern IntPtr IRecordCollection_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr___ref__")]
  public static extern IntPtr IRecordCollection_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr___deref__")]
  public static extern IntPtr IRecordCollection_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_swap")]
  public static extern void IRecordCollection_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_isNull")]
  public static extern bool IRecordCollection_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_isNotNull")]
  public static extern bool IRecordCollection_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_iid_get")]
  public static extern IntPtr IRecordCollection_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getIterator")]
  public static extern IntPtr IRecordCollection_CSPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getRecordDefinition")]
  public static extern IntPtr IRecordCollection_CSPtr_getRecordDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getRecord")]
  public static extern IntPtr IRecordCollection_CSPtr_getRecord(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IRecordCollection_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getFieldValue")]
  public static extern IntPtr IRecordCollection_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getFieldValueByName")]
  public static extern IntPtr IRecordCollection_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_CSPtr_getFieldValues")]
  public static extern IntPtr IRecordCollection_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RecordIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_RecordIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RecordIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_RecordIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RecordIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_RecordIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RecordIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_RecordIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RecordIterator_SPtr")]
  public static extern void delete_RecordIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_reset__SWIG_0")]
  public static extern void RecordIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_reset__SWIG_1")]
  public static extern void RecordIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_get")]
  public static extern IntPtr RecordIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr___ref__")]
  public static extern IntPtr RecordIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr___deref__")]
  public static extern IntPtr RecordIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_swap")]
  public static extern void RecordIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_isNull")]
  public static extern bool RecordIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_isNotNull")]
  public static extern bool RecordIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_end")]
  public static extern bool RecordIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_next")]
  public static extern void RecordIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_SPtr_getRecord")]
  public static extern IntPtr RecordIterator_SPtr_getRecord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_SPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureCollection_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_SPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureCollection_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_SPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureCollection_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_SPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureCollection_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollection_SPtr")]
  public static extern void delete_IFeatureCollection_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_reset__SWIG_0")]
  public static extern void IFeatureCollection_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_reset__SWIG_1")]
  public static extern void IFeatureCollection_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_get")]
  public static extern IntPtr IFeatureCollection_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr___ref__")]
  public static extern IntPtr IFeatureCollection_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr___deref__")]
  public static extern IntPtr IFeatureCollection_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_swap")]
  public static extern void IFeatureCollection_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_isNull")]
  public static extern bool IFeatureCollection_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_isNotNull")]
  public static extern bool IFeatureCollection_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_iid_get")]
  public static extern IntPtr IFeatureCollection_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollection_SPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollection_SPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IFeatureCollection_SPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFeatureStyles")]
  public static extern IntPtr IFeatureCollection_SPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFeature")]
  public static extern IntPtr IFeatureCollection_SPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_canRasterize")]
  public static extern bool IFeatureCollection_SPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_geometryHint")]
  public static extern void IFeatureCollection_SPtr_geometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_endGeometryHint")]
  public static extern void IFeatureCollection_SPtr_endGeometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_isWritable")]
  public static extern bool IFeatureCollection_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getID")]
  public static extern IntPtr IFeatureCollection_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getGeometry")]
  public static extern IntPtr IFeatureCollection_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getGeometry_const")]
  public static extern IntPtr IFeatureCollection_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeatureCollection_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeatureCollection_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeatureCollection_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFieldValue")]
  public static extern IntPtr IFeatureCollection_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_setFieldValue")]
  public static extern void IFeatureCollection_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFieldValueByName")]
  public static extern IntPtr IFeatureCollection_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_setFieldValueByName")]
  public static extern void IFeatureCollection_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_getFieldValues")]
  public static extern IntPtr IFeatureCollection_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_setFieldValues")]
  public static extern void IFeatureCollection_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_addField__SWIG_0")]
  public static extern void IFeatureCollection_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_addField__SWIG_1")]
  public static extern void IFeatureCollection_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_addField__SWIG_2")]
  public static extern void IFeatureCollection_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_AddRef")]
  public static extern uint IFeatureCollection_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_SPtr_Release")]
  public static extern uint IFeatureCollection_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_CSPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureCollection_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_CSPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureCollection_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_CSPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureCollection_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollection_CSPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureCollection_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollection_CSPtr")]
  public static extern void delete_IFeatureCollection_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_reset__SWIG_0")]
  public static extern void IFeatureCollection_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_reset__SWIG_1")]
  public static extern void IFeatureCollection_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_get")]
  public static extern IntPtr IFeatureCollection_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr___ref__")]
  public static extern IntPtr IFeatureCollection_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr___deref__")]
  public static extern IntPtr IFeatureCollection_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_swap")]
  public static extern void IFeatureCollection_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_isNull")]
  public static extern bool IFeatureCollection_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_isNotNull")]
  public static extern bool IFeatureCollection_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_iid_get")]
  public static extern IntPtr IFeatureCollection_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollection_CSPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollection_CSPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFeatureStyles")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFeature")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_canRasterize")]
  public static extern bool IFeatureCollection_CSPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_isWritable")]
  public static extern bool IFeatureCollection_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getID")]
  public static extern IntPtr IFeatureCollection_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getGeometry_const")]
  public static extern IntPtr IFeatureCollection_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeatureCollection_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeatureCollection_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeatureCollection_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFieldValue")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFieldValueByName")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_CSPtr_getFieldValues")]
  public static extern IntPtr IFeatureCollection_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_SPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureCollectionIndex_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_SPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureCollectionIndex_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_SPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureCollectionIndex_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_SPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureCollectionIndex_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollectionIndex_SPtr")]
  public static extern void delete_IFeatureCollectionIndex_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_reset__SWIG_0")]
  public static extern void IFeatureCollectionIndex_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_reset__SWIG_1")]
  public static extern void IFeatureCollectionIndex_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_get")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr___ref__")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr___deref__")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_swap")]
  public static extern void IFeatureCollectionIndex_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_isNull")]
  public static extern bool IFeatureCollectionIndex_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_isNotNull")]
  public static extern bool IFeatureCollectionIndex_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_iid_get")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr_getIterator__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_suggest")]
  public static extern IntPtr IFeatureCollectionIndex_SPtr_suggest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_AddRef")]
  public static extern uint IFeatureCollectionIndex_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_SPtr_Release")]
  public static extern uint IFeatureCollectionIndex_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_CSPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureCollectionIndex_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_CSPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureCollectionIndex_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_CSPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureCollectionIndex_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureCollectionIndex_CSPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureCollectionIndex_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollectionIndex_CSPtr")]
  public static extern void delete_IFeatureCollectionIndex_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_reset__SWIG_0")]
  public static extern void IFeatureCollectionIndex_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_reset__SWIG_1")]
  public static extern void IFeatureCollectionIndex_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_get")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr___ref__")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr___deref__")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_swap")]
  public static extern void IFeatureCollectionIndex_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_isNull")]
  public static extern bool IFeatureCollectionIndex_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_isNotNull")]
  public static extern bool IFeatureCollectionIndex_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_iid_get")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr_getIterator__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_CSPtr_suggest")]
  public static extern IntPtr IFeatureCollectionIndex_CSPtr_suggest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FeatureIterator_SPtr__SWIG_0")]
  public static extern IntPtr new_FeatureIterator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FeatureIterator_SPtr__SWIG_1")]
  public static extern IntPtr new_FeatureIterator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FeatureIterator_SPtr__SWIG_2")]
  public static extern IntPtr new_FeatureIterator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FeatureIterator_SPtr__SWIG_3")]
  public static extern IntPtr new_FeatureIterator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_FeatureIterator_SPtr")]
  public static extern void delete_FeatureIterator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_reset__SWIG_0")]
  public static extern void FeatureIterator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_reset__SWIG_1")]
  public static extern void FeatureIterator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_get")]
  public static extern IntPtr FeatureIterator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr___ref__")]
  public static extern IntPtr FeatureIterator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr___deref__")]
  public static extern IntPtr FeatureIterator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_swap")]
  public static extern void FeatureIterator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_isNull")]
  public static extern bool FeatureIterator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_isNotNull")]
  public static extern bool FeatureIterator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_end")]
  public static extern bool FeatureIterator_SPtr_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_next")]
  public static extern void FeatureIterator_SPtr_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FeatureIterator_SPtr_getFeature")]
  public static extern IntPtr FeatureIterator_SPtr_getFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_SPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureGroup_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_SPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureGroup_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_SPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureGroup_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_SPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureGroup_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureGroup_SPtr")]
  public static extern void delete_IFeatureGroup_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_reset__SWIG_0")]
  public static extern void IFeatureGroup_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_reset__SWIG_1")]
  public static extern void IFeatureGroup_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_get")]
  public static extern IntPtr IFeatureGroup_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr___ref__")]
  public static extern IntPtr IFeatureGroup_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr___deref__")]
  public static extern IntPtr IFeatureGroup_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_swap")]
  public static extern void IFeatureGroup_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_isNull")]
  public static extern bool IFeatureGroup_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_isNotNull")]
  public static extern bool IFeatureGroup_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_iid_get")]
  public static extern IntPtr IFeatureGroup_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeaturesCount")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeaturesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_moreDetailsAvailable")]
  public static extern bool IFeatureGroup_SPtr_moreDetailsAvailable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFieldHistogram__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getFieldHistogram__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFieldHistogram__SWIG_1")]
  public static extern IntPtr IFeatureGroup_SPtr_getFieldHistogram__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeatureGroup")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeatureGroup(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeatureGroupForFeature")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeatureGroupForFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getGroupIterator__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getGroupIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getGroupIterator__SWIG_1")]
  public static extern IntPtr IFeatureGroup_SPtr_getGroupIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureGroup_SPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeatureStyles")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFeature")]
  public static extern IntPtr IFeatureGroup_SPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_canRasterize")]
  public static extern bool IFeatureGroup_SPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_geometryHint")]
  public static extern void IFeatureGroup_SPtr_geometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_endGeometryHint")]
  public static extern void IFeatureGroup_SPtr_endGeometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_isWritable")]
  public static extern bool IFeatureGroup_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getID")]
  public static extern IntPtr IFeatureGroup_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getGeometry")]
  public static extern IntPtr IFeatureGroup_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getGeometry_const")]
  public static extern IntPtr IFeatureGroup_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeatureGroup_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeatureGroup_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFieldValue")]
  public static extern IntPtr IFeatureGroup_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_setFieldValue")]
  public static extern void IFeatureGroup_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFieldValueByName")]
  public static extern IntPtr IFeatureGroup_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_setFieldValueByName")]
  public static extern void IFeatureGroup_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_getFieldValues")]
  public static extern IntPtr IFeatureGroup_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_setFieldValues")]
  public static extern void IFeatureGroup_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_addField__SWIG_0")]
  public static extern void IFeatureGroup_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_addField__SWIG_1")]
  public static extern void IFeatureGroup_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_addField__SWIG_2")]
  public static extern void IFeatureGroup_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_AddRef")]
  public static extern uint IFeatureGroup_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_SPtr_Release")]
  public static extern uint IFeatureGroup_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_CSPtr__SWIG_0")]
  public static extern IntPtr new_IFeatureGroup_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_CSPtr__SWIG_1")]
  public static extern IntPtr new_IFeatureGroup_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_CSPtr__SWIG_2")]
  public static extern IntPtr new_IFeatureGroup_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IFeatureGroup_CSPtr__SWIG_3")]
  public static extern IntPtr new_IFeatureGroup_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureGroup_CSPtr")]
  public static extern void delete_IFeatureGroup_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_reset__SWIG_0")]
  public static extern void IFeatureGroup_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_reset__SWIG_1")]
  public static extern void IFeatureGroup_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_get")]
  public static extern IntPtr IFeatureGroup_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr___ref__")]
  public static extern IntPtr IFeatureGroup_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr___deref__")]
  public static extern IntPtr IFeatureGroup_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_swap")]
  public static extern void IFeatureGroup_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_isNull")]
  public static extern bool IFeatureGroup_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_isNotNull")]
  public static extern bool IFeatureGroup_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_iid_get")]
  public static extern IntPtr IFeatureGroup_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeaturesCount")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeaturesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_moreDetailsAvailable")]
  public static extern bool IFeatureGroup_CSPtr_moreDetailsAvailable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFieldHistogram__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFieldHistogram__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFieldHistogram__SWIG_1")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFieldHistogram__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeatureGroup")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeatureGroup(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeatureGroupForFeature")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeatureGroupForFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getGroupIterator__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getGroupIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getGroupIterator__SWIG_1")]
  public static extern IntPtr IFeatureGroup_CSPtr_getGroupIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureGroup_CSPtr_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeatureStyles")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFeature")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_canRasterize")]
  public static extern bool IFeatureGroup_CSPtr_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_isWritable")]
  public static extern bool IFeatureGroup_CSPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getID")]
  public static extern IntPtr IFeatureGroup_CSPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getGeometry_const")]
  public static extern IntPtr IFeatureGroup_CSPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getStyle__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getStyle__SWIG_1")]
  public static extern IntPtr IFeatureGroup_CSPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getDefinition__SWIG_0")]
  public static extern IntPtr IFeatureGroup_CSPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFieldValue")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFieldValueByName")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_CSPtr_getFieldValues")]
  public static extern IntPtr IFeatureGroup_CSPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_SPtr__SWIG_0")]
  public static extern IntPtr new_ICoverageHistogramCalculator_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_SPtr__SWIG_1")]
  public static extern IntPtr new_ICoverageHistogramCalculator_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_SPtr__SWIG_2")]
  public static extern IntPtr new_ICoverageHistogramCalculator_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_SPtr__SWIG_3")]
  public static extern IntPtr new_ICoverageHistogramCalculator_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverageHistogramCalculator_SPtr")]
  public static extern void delete_ICoverageHistogramCalculator_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_reset__SWIG_0")]
  public static extern void ICoverageHistogramCalculator_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_reset__SWIG_1")]
  public static extern void ICoverageHistogramCalculator_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_get")]
  public static extern IntPtr ICoverageHistogramCalculator_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr___ref__")]
  public static extern IntPtr ICoverageHistogramCalculator_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr___deref__")]
  public static extern IntPtr ICoverageHistogramCalculator_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_swap")]
  public static extern void ICoverageHistogramCalculator_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_isNull")]
  public static extern bool ICoverageHistogramCalculator_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_isNotNull")]
  public static extern bool ICoverageHistogramCalculator_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_iid_get")]
  public static extern IntPtr ICoverageHistogramCalculator_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_getHistogram")]
  public static extern IntPtr ICoverageHistogramCalculator_SPtr_getHistogram(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_AddRef")]
  public static extern uint ICoverageHistogramCalculator_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_SPtr_Release")]
  public static extern uint ICoverageHistogramCalculator_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_CSPtr__SWIG_0")]
  public static extern IntPtr new_ICoverageHistogramCalculator_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_CSPtr__SWIG_1")]
  public static extern IntPtr new_ICoverageHistogramCalculator_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_CSPtr__SWIG_2")]
  public static extern IntPtr new_ICoverageHistogramCalculator_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ICoverageHistogramCalculator_CSPtr__SWIG_3")]
  public static extern IntPtr new_ICoverageHistogramCalculator_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverageHistogramCalculator_CSPtr")]
  public static extern void delete_ICoverageHistogramCalculator_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_reset__SWIG_0")]
  public static extern void ICoverageHistogramCalculator_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_reset__SWIG_1")]
  public static extern void ICoverageHistogramCalculator_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_get")]
  public static extern IntPtr ICoverageHistogramCalculator_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr___ref__")]
  public static extern IntPtr ICoverageHistogramCalculator_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr___deref__")]
  public static extern IntPtr ICoverageHistogramCalculator_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_swap")]
  public static extern void ICoverageHistogramCalculator_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_isNull")]
  public static extern bool ICoverageHistogramCalculator_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_isNotNull")]
  public static extern bool ICoverageHistogramCalculator_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_CSPtr_iid_get")]
  public static extern IntPtr ICoverageHistogramCalculator_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeBuilder_SPtr__SWIG_0")]
  public static extern IntPtr new_IPipeBuilder_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeBuilder_SPtr__SWIG_1")]
  public static extern IntPtr new_IPipeBuilder_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeBuilder_SPtr__SWIG_2")]
  public static extern IntPtr new_IPipeBuilder_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeBuilder_SPtr__SWIG_3")]
  public static extern IntPtr new_IPipeBuilder_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPipeBuilder_SPtr")]
  public static extern void delete_IPipeBuilder_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_reset__SWIG_0")]
  public static extern void IPipeBuilder_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_reset__SWIG_1")]
  public static extern void IPipeBuilder_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_get")]
  public static extern IntPtr IPipeBuilder_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr___ref__")]
  public static extern IntPtr IPipeBuilder_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr___deref__")]
  public static extern IntPtr IPipeBuilder_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_swap")]
  public static extern void IPipeBuilder_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_isNull")]
  public static extern bool IPipeBuilder_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_isNotNull")]
  public static extern bool IPipeBuilder_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_iid_get")]
  public static extern IntPtr IPipeBuilder_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_isDataSourceSupported")]
  public static extern bool IPipeBuilder_SPtr_isDataSourceSupported(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_buildCatalog")]
  public static extern IntPtr IPipeBuilder_SPtr_buildCatalog(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_setConfig")]
  public static extern void IPipeBuilder_SPtr_setConfig(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_buildPipeline")]
  public static extern IntPtr IPipeBuilder_SPtr_buildPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_set")]
  public static extern bool IPipeBuilder_SPtr_set(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_builtDirectory")]
  public static extern bool IPipeBuilder_SPtr_builtDirectory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_AddRef")]
  public static extern uint IPipeBuilder_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_SPtr_Release")]
  public static extern uint IPipeBuilder_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeFormater_SPtr__SWIG_0")]
  public static extern IntPtr new_IPipeFormater_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeFormater_SPtr__SWIG_1")]
  public static extern IntPtr new_IPipeFormater_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeFormater_SPtr__SWIG_2")]
  public static extern IntPtr new_IPipeFormater_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IPipeFormater_SPtr__SWIG_3")]
  public static extern IntPtr new_IPipeFormater_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPipeFormater_SPtr")]
  public static extern void delete_IPipeFormater_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_reset__SWIG_0")]
  public static extern void IPipeFormater_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_reset__SWIG_1")]
  public static extern void IPipeFormater_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_get")]
  public static extern IntPtr IPipeFormater_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr___ref__")]
  public static extern IntPtr IPipeFormater_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr___deref__")]
  public static extern IntPtr IPipeFormater_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_swap")]
  public static extern void IPipeFormater_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_isNull")]
  public static extern bool IPipeFormater_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_isNotNull")]
  public static extern bool IPipeFormater_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_iid_get")]
  public static extern IntPtr IPipeFormater_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_canFormatPipeline")]
  public static extern bool IPipeFormater_SPtr_canFormatPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_formatPipeline")]
  public static extern IntPtr IPipeFormater_SPtr_formatPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_AddRef")]
  public static extern uint IPipeFormater_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_SPtr_Release")]
  public static extern uint IPipeFormater_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXFeature_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXFeature_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXFeature_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXFeature_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFeature_SPtr")]
  public static extern void delete_PYXFeature_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_reset__SWIG_0")]
  public static extern void PYXFeature_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_reset__SWIG_1")]
  public static extern void PYXFeature_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_get")]
  public static extern IntPtr PYXFeature_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr___ref__")]
  public static extern IntPtr PYXFeature_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr___deref__")]
  public static extern IntPtr PYXFeature_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_swap")]
  public static extern void PYXFeature_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_isNull")]
  public static extern bool PYXFeature_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_isNotNull")]
  public static extern bool PYXFeature_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_clsid_get")]
  public static extern IntPtr PYXFeature_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_aiid_get")]
  public static extern IntPtr PYXFeature_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_niid_get")]
  public static extern int PYXFeature_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_AddRef")]
  public static extern uint PYXFeature_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_Release")]
  public static extern uint PYXFeature_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_isWritable")]
  public static extern bool PYXFeature_SPtr_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getID")]
  public static extern IntPtr PYXFeature_SPtr_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getGeometry_const")]
  public static extern IntPtr PYXFeature_SPtr_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getGeometry")]
  public static extern IntPtr PYXFeature_SPtr_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getStyle__SWIG_0")]
  public static extern IntPtr PYXFeature_SPtr_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getStyle__SWIG_1")]
  public static extern IntPtr PYXFeature_SPtr_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getDefinition__SWIG_0")]
  public static extern IntPtr PYXFeature_SPtr_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getFieldValue")]
  public static extern IntPtr PYXFeature_SPtr_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setFieldValue")]
  public static extern void PYXFeature_SPtr_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getFieldValueByName")]
  public static extern IntPtr PYXFeature_SPtr_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setFieldValueByName")]
  public static extern void PYXFeature_SPtr_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_getFieldValues")]
  public static extern IntPtr PYXFeature_SPtr_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setFieldValues")]
  public static extern void PYXFeature_SPtr_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_addField__SWIG_0")]
  public static extern void PYXFeature_SPtr_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_addField__SWIG_1")]
  public static extern void PYXFeature_SPtr_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_addField__SWIG_2")]
  public static extern void PYXFeature_SPtr_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setID")]
  public static extern void PYXFeature_SPtr_setID(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setGeometryName")]
  public static extern void PYXFeature_SPtr_setGeometryName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setGeometry")]
  public static extern void PYXFeature_SPtr_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setIsWritAble")]
  public static extern void PYXFeature_SPtr_setIsWritAble(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setStyle")]
  public static extern void PYXFeature_SPtr_setStyle(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_setMetaDataDefinition")]
  public static extern void PYXFeature_SPtr_setMetaDataDefinition(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_SPtr_iid_get")]
  public static extern IntPtr PYXFeature_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathInitError_SPtr__SWIG_0")]
  public static extern IntPtr new_PathInitError_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathInitError_SPtr__SWIG_1")]
  public static extern IntPtr new_PathInitError_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathInitError_SPtr__SWIG_2")]
  public static extern IntPtr new_PathInitError_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathInitError_SPtr__SWIG_3")]
  public static extern IntPtr new_PathInitError_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PathInitError_SPtr")]
  public static extern void delete_PathInitError_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_reset__SWIG_0")]
  public static extern void PathInitError_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_reset__SWIG_1")]
  public static extern void PathInitError_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_get")]
  public static extern IntPtr PathInitError_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr___ref__")]
  public static extern IntPtr PathInitError_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr___deref__")]
  public static extern IntPtr PathInitError_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_swap")]
  public static extern void PathInitError_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_isNull")]
  public static extern bool PathInitError_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_isNotNull")]
  public static extern bool PathInitError_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_clsid_get")]
  public static extern IntPtr PathInitError_SPtr_clsid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_aiid_get")]
  public static extern IntPtr PathInitError_SPtr_aiid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_niid_get")]
  public static extern int PathInitError_SPtr_niid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_AddRef")]
  public static extern uint PathInitError_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_Release")]
  public static extern uint PathInitError_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_getErrorID")]
  public static extern IntPtr PathInitError_SPtr_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_getError")]
  public static extern IntPtr PathInitError_SPtr_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_setError")]
  public static extern void PathInitError_SPtr_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_SPtr_iid_get")]
  public static extern IntPtr PathInitError_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeBuilderBase_SPtr__SWIG_0")]
  public static extern IntPtr new_PipeBuilderBase_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeBuilderBase_SPtr__SWIG_1")]
  public static extern IntPtr new_PipeBuilderBase_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeBuilderBase_SPtr__SWIG_2")]
  public static extern IntPtr new_PipeBuilderBase_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeBuilderBase_SPtr__SWIG_3")]
  public static extern IntPtr new_PipeBuilderBase_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipeBuilderBase_SPtr")]
  public static extern void delete_PipeBuilderBase_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_reset__SWIG_0")]
  public static extern void PipeBuilderBase_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_reset__SWIG_1")]
  public static extern void PipeBuilderBase_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr___ref__")]
  public static extern IntPtr PipeBuilderBase_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr___deref__")]
  public static extern IntPtr PipeBuilderBase_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_swap")]
  public static extern void PipeBuilderBase_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_isNull")]
  public static extern bool PipeBuilderBase_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_isNotNull")]
  public static extern bool PipeBuilderBase_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_kstrPipeBuilderIni_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_kstrPipeBuilderIni_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_kstrPipeBuilderPropScope_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_kstrPipeBuilderPropScope_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_kstrPipeBuilderPropKey_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_kstrPipeBuilderPropKey_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_kstrPipeBuilderDefaultPropValue_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_kstrPipeBuilderDefaultPropValue_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_kstrPipeBuilderPropDescription_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_kstrPipeBuilderPropDescription_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_isDataSourceSupported")]
  public static extern bool PipeBuilderBase_SPtr_isDataSourceSupported(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_buildCatalog")]
  public static extern IntPtr PipeBuilderBase_SPtr_buildCatalog(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_setConfig")]
  public static extern void PipeBuilderBase_SPtr_setConfig(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_buildPipeline")]
  public static extern IntPtr PipeBuilderBase_SPtr_buildPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_getDefaultSampler")]
  public static extern IntPtr PipeBuilderBase_SPtr_getDefaultSampler(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_iid_get")]
  public static extern IntPtr PipeBuilderBase_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_set")]
  public static extern bool PipeBuilderBase_SPtr_set(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_builtDirectory")]
  public static extern bool PipeBuilderBase_SPtr_builtDirectory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_AddRef")]
  public static extern uint PipeBuilderBase_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_SPtr_Release")]
  public static extern uint PipeBuilderBase_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IViewPoint_SPtr__SWIG_0")]
  public static extern IntPtr new_IViewPoint_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IViewPoint_SPtr__SWIG_1")]
  public static extern IntPtr new_IViewPoint_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IViewPoint_SPtr__SWIG_2")]
  public static extern IntPtr new_IViewPoint_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IViewPoint_SPtr__SWIG_3")]
  public static extern IntPtr new_IViewPoint_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IViewPoint_SPtr")]
  public static extern void delete_IViewPoint_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_reset__SWIG_0")]
  public static extern void IViewPoint_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_reset__SWIG_1")]
  public static extern void IViewPoint_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_get")]
  public static extern IntPtr IViewPoint_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr___ref__")]
  public static extern IntPtr IViewPoint_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr___deref__")]
  public static extern IntPtr IViewPoint_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_swap")]
  public static extern void IViewPoint_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_isNull")]
  public static extern bool IViewPoint_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_isNotNull")]
  public static extern bool IViewPoint_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_iid_get")]
  public static extern IntPtr IViewPoint_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_getCoveragePipelines")]
  public static extern IntPtr IViewPoint_SPtr_getCoveragePipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_getFeatureCollectionPipelines")]
  public static extern IntPtr IViewPoint_SPtr_getFeatureCollectionPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_getElevationPipelines")]
  public static extern IntPtr IViewPoint_SPtr_getElevationPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_getAllPipelines")]
  public static extern IntPtr IViewPoint_SPtr_getAllPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_getViewPointChangedNotifier")]
  public static extern IntPtr IViewPoint_SPtr_getViewPointChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_AddRef")]
  public static extern uint IViewPoint_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_SPtr_Release")]
  public static extern uint IViewPoint_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessResolver_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessResolver_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessResolver_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessResolver_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessResolver_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessResolver_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessResolver_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessResolver_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessResolver_SPtr")]
  public static extern void delete_ProcessResolver_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_reset__SWIG_0")]
  public static extern void ProcessResolver_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_reset__SWIG_1")]
  public static extern void ProcessResolver_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_get")]
  public static extern IntPtr ProcessResolver_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr___ref__")]
  public static extern IntPtr ProcessResolver_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr___deref__")]
  public static extern IntPtr ProcessResolver_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_swap")]
  public static extern void ProcessResolver_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_isNull")]
  public static extern bool ProcessResolver_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_isNotNull")]
  public static extern bool ProcessResolver_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_resolve")]
  public static extern IntPtr ProcessResolver_SPtr_resolve(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_notifyResolve")]
  public static extern IntPtr ProcessResolver_SPtr_notifyResolve(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_SPtr_notifyFinalize")]
  public static extern void ProcessResolver_SPtr_notifyFinalize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_BitmapServerProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_BitmapServerProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_BitmapServerProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_BitmapServerProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_BitmapServerProvider_SPtr")]
  public static extern void delete_BitmapServerProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_reset__SWIG_0")]
  public static extern void BitmapServerProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_reset__SWIG_1")]
  public static extern void BitmapServerProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_get")]
  public static extern IntPtr BitmapServerProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr___ref__")]
  public static extern IntPtr BitmapServerProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr___deref__")]
  public static extern IntPtr BitmapServerProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_swap")]
  public static extern void BitmapServerProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_isNull")]
  public static extern bool BitmapServerProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_isNotNull")]
  public static extern bool BitmapServerProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_loadIcon")]
  public static extern IntPtr BitmapServerProvider_SPtr_loadIcon(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_loadResource")]
  public static extern IntPtr BitmapServerProvider_SPtr_loadResource(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_loadBitmap")]
  public static extern IntPtr BitmapServerProvider_SPtr_loadBitmap(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_forceRGB")]
  public static extern IntPtr BitmapServerProvider_SPtr_forceRGB(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_release")]
  public static extern int BitmapServerProvider_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_addRef")]
  public static extern int BitmapServerProvider_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_getBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_SPtr_getBitmapServerProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_SPtr_setBitmapServerProvider")]
  public static extern void BitmapServerProvider_SPtr_setBitmapServerProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXXYBoundsGeometry_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXXYBoundsGeometry_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXXYBoundsGeometry_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXXYBoundsGeometry_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXXYBoundsGeometry_SPtr")]
  public static extern void delete_PYXXYBoundsGeometry_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_reset__SWIG_0")]
  public static extern void PYXXYBoundsGeometry_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_reset__SWIG_1")]
  public static extern void PYXXYBoundsGeometry_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_get")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr___ref__")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr___deref__")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_swap")]
  public static extern void PYXXYBoundsGeometry_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_isNull")]
  public static extern bool PYXXYBoundsGeometry_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_isNotNull")]
  public static extern bool PYXXYBoundsGeometry_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_knMinimumGeometryCount_get")]
  public static extern int PYXXYBoundsGeometry_SPtr_knMinimumGeometryCount_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_test")]
  public static extern void PYXXYBoundsGeometry_SPtr_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_create__SWIG_0")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_create__SWIG_1")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_create__SWIG_2")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_expand")]
  public static extern void PYXXYBoundsGeometry_SPtr_expand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_clone")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_serialize")]
  public static extern void PYXXYBoundsGeometry_SPtr_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_deserialize")]
  public static extern void PYXXYBoundsGeometry_SPtr_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_isCollection")]
  public static extern bool PYXXYBoundsGeometry_SPtr_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_isEmpty")]
  public static extern bool PYXXYBoundsGeometry_SPtr_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getBounds")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getCoordConverter")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getBoundingRects")]
  public static extern void PYXXYBoundsGeometry_SPtr_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getRegion")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_setRegion")]
  public static extern void PYXXYBoundsGeometry_SPtr_setRegion(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getCellResolution")]
  public static extern int PYXXYBoundsGeometry_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_setCellResolution")]
  public static extern void PYXXYBoundsGeometry_SPtr_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersection__SWIG_0")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersection__SWIG_1")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersection__SWIG_2")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersection__SWIG_3")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersection__SWIG_4")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_contains")]
  public static extern bool PYXXYBoundsGeometry_SPtr_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersects__SWIG_0")]
  public static extern bool PYXXYBoundsGeometry_SPtr_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_intersects__SWIG_1")]
  public static extern bool PYXXYBoundsGeometry_SPtr_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getIterator")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getInnerTileIterator")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_calcPerimeter")]
  public static extern void PYXXYBoundsGeometry_SPtr_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_getBoundingCircle")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_copyTo__SWIG_0")]
  public static extern void PYXXYBoundsGeometry_SPtr_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_copyTo__SWIG_1")]
  public static extern void PYXXYBoundsGeometry_SPtr_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_initStaticData")]
  public static extern void PYXXYBoundsGeometry_SPtr_initStaticData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_freeStaticData")]
  public static extern void PYXXYBoundsGeometry_SPtr_freeStaticData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_SPtr_disjunction")]
  public static extern IntPtr PYXXYBoundsGeometry_SPtr_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_IToolBoxProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_IToolBoxProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_IToolBoxProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_IToolBoxProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IToolBoxProvider_SPtr")]
  public static extern void delete_IToolBoxProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_reset__SWIG_0")]
  public static extern void IToolBoxProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_reset__SWIG_1")]
  public static extern void IToolBoxProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_get")]
  public static extern IntPtr IToolBoxProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr___ref__")]
  public static extern IntPtr IToolBoxProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr___deref__")]
  public static extern IntPtr IToolBoxProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_swap")]
  public static extern void IToolBoxProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_isNull")]
  public static extern bool IToolBoxProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_isNotNull")]
  public static extern bool IToolBoxProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_iid_get")]
  public static extern IntPtr IToolBoxProvider_SPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_getProcessList")]
  public static extern IntPtr IToolBoxProvider_SPtr_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_setProcessList")]
  public static extern void IToolBoxProvider_SPtr_setProcessList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_AddRef")]
  public static extern uint IToolBoxProvider_SPtr_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_SPtr_Release")]
  public static extern uint IToolBoxProvider_SPtr_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_CSPtr__SWIG_0")]
  public static extern IntPtr new_IToolBoxProvider_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_CSPtr__SWIG_1")]
  public static extern IntPtr new_IToolBoxProvider_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_CSPtr__SWIG_2")]
  public static extern IntPtr new_IToolBoxProvider_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IToolBoxProvider_CSPtr__SWIG_3")]
  public static extern IntPtr new_IToolBoxProvider_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IToolBoxProvider_CSPtr")]
  public static extern void delete_IToolBoxProvider_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_reset__SWIG_0")]
  public static extern void IToolBoxProvider_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_reset__SWIG_1")]
  public static extern void IToolBoxProvider_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_get")]
  public static extern IntPtr IToolBoxProvider_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr___ref__")]
  public static extern IntPtr IToolBoxProvider_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr___deref__")]
  public static extern IntPtr IToolBoxProvider_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_swap")]
  public static extern void IToolBoxProvider_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_isNull")]
  public static extern bool IToolBoxProvider_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_isNotNull")]
  public static extern bool IToolBoxProvider_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_iid_get")]
  public static extern IntPtr IToolBoxProvider_CSPtr_iid_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_CSPtr_getProcessList")]
  public static extern IntPtr IToolBoxProvider_CSPtr_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXNETChannelProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXNETChannelProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXNETChannelProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXNETChannelProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannelProvider_SPtr")]
  public static extern void delete_PYXNETChannelProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_reset__SWIG_0")]
  public static extern void PYXNETChannelProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_reset__SWIG_1")]
  public static extern void PYXNETChannelProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_get")]
  public static extern IntPtr PYXNETChannelProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr___ref__")]
  public static extern IntPtr PYXNETChannelProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr___deref__")]
  public static extern IntPtr PYXNETChannelProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_swap")]
  public static extern void PYXNETChannelProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_isNull")]
  public static extern bool PYXNETChannelProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_isNotNull")]
  public static extern bool PYXNETChannelProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_getOrCreateChannel")]
  public static extern IntPtr PYXNETChannelProvider_SPtr_getOrCreateChannel(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_keyProvidedFailed")]
  public static extern void PYXNETChannelProvider_SPtr_keyProvidedFailed(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_keyProvided")]
  public static extern void PYXNETChannelProvider_SPtr_keyProvided(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_release")]
  public static extern int PYXNETChannelProvider_SPtr_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_addRef")]
  public static extern int PYXNETChannelProvider_SPtr_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_getInstance")]
  public static extern IntPtr PYXNETChannelProvider_SPtr_getInstance(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_SPtr_setInstance")]
  public static extern void PYXNETChannelProvider_SPtr_setInstance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannel_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXNETChannel_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannel_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXNETChannel_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannel_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXNETChannel_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannel_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXNETChannel_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannel_SPtr")]
  public static extern void delete_PYXNETChannel_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_reset__SWIG_0")]
  public static extern void PYXNETChannel_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_reset__SWIG_1")]
  public static extern void PYXNETChannel_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_get")]
  public static extern IntPtr PYXNETChannel_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr___ref__")]
  public static extern IntPtr PYXNETChannel_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr___deref__")]
  public static extern IntPtr PYXNETChannel_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_swap")]
  public static extern void PYXNETChannel_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_isNull")]
  public static extern bool PYXNETChannel_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_isNotNull")]
  public static extern bool PYXNETChannel_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_publish")]
  public static extern void PYXNETChannel_SPtr_publish(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_unpublish")]
  public static extern void PYXNETChannel_SPtr_unpublish(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_isPublished")]
  public static extern bool PYXNETChannel_SPtr_isPublished(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_wasFoundRemotely")]
  public static extern bool PYXNETChannel_SPtr_wasFoundRemotely(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_getProcRef")]
  public static extern IntPtr PYXNETChannel_SPtr_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_getDataCode")]
  public static extern IntPtr PYXNETChannel_SPtr_getDataCode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_getHandle")]
  public static extern int PYXNETChannel_SPtr_getHandle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_getKey")]
  public static extern IntPtr PYXNETChannel_SPtr_getKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_requestKey")]
  public static extern IntPtr PYXNETChannel_SPtr_requestKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_SPtr_attachLocalProvider")]
  public static extern void PYXNETChannel_SPtr_attachLocalProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelKeyProvider_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXNETChannelKeyProvider_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelKeyProvider_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXNETChannelKeyProvider_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelKeyProvider_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXNETChannelKeyProvider_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelKeyProvider_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXNETChannelKeyProvider_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannelKeyProvider_SPtr")]
  public static extern void delete_PYXNETChannelKeyProvider_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_reset__SWIG_0")]
  public static extern void PYXNETChannelKeyProvider_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_reset__SWIG_1")]
  public static extern void PYXNETChannelKeyProvider_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_get")]
  public static extern IntPtr PYXNETChannelKeyProvider_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr___ref__")]
  public static extern IntPtr PYXNETChannelKeyProvider_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr___deref__")]
  public static extern IntPtr PYXNETChannelKeyProvider_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_swap")]
  public static extern void PYXNETChannelKeyProvider_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_isNull")]
  public static extern bool PYXNETChannelKeyProvider_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_isNotNull")]
  public static extern bool PYXNETChannelKeyProvider_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_SPtr_getKey")]
  public static extern IntPtr PYXNETChannelKeyProvider_SPtr_getKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXHistogram_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXHistogram_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXHistogram_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXHistogram_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHistogram_SPtr")]
  public static extern void delete_PYXHistogram_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_reset__SWIG_0")]
  public static extern void PYXHistogram_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_reset__SWIG_1")]
  public static extern void PYXHistogram_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_get")]
  public static extern IntPtr PYXHistogram_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr___ref__")]
  public static extern IntPtr PYXHistogram_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr___deref__")]
  public static extern IntPtr PYXHistogram_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_swap")]
  public static extern void PYXHistogram_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_isNull")]
  public static extern bool PYXHistogram_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_isNotNull")]
  public static extern bool PYXHistogram_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_createFromFeatures")]
  public static extern IntPtr PYXHistogram_SPtr_createFromFeatures(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getFeatureCount__SWIG_0")]
  public static extern IntPtr PYXHistogram_SPtr_getFeatureCount__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getFeatureCount__SWIG_1")]
  public static extern IntPtr PYXHistogram_SPtr_getFeatureCount__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getSum")]
  public static extern IntPtr PYXHistogram_SPtr_getSum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getAverage")]
  public static extern IntPtr PYXHistogram_SPtr_getAverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getSumSquare")]
  public static extern IntPtr PYXHistogram_SPtr_getSumSquare(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getBoundaries")]
  public static extern IntPtr PYXHistogram_SPtr_getBoundaries(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getBins")]
  public static extern IntPtr PYXHistogram_SPtr_getBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_getNormalizedBins")]
  public static extern IntPtr PYXHistogram_SPtr_getNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_add__SWIG_0")]
  public static extern void PYXHistogram_SPtr_add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_SPtr_add__SWIG_1")]
  public static extern void PYXHistogram_SPtr_add__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXHistogram_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXHistogram_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXHistogram_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogram_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXHistogram_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHistogram_CSPtr")]
  public static extern void delete_PYXHistogram_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_reset__SWIG_0")]
  public static extern void PYXHistogram_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_reset__SWIG_1")]
  public static extern void PYXHistogram_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_get")]
  public static extern IntPtr PYXHistogram_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr___ref__")]
  public static extern IntPtr PYXHistogram_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr___deref__")]
  public static extern IntPtr PYXHistogram_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_swap")]
  public static extern void PYXHistogram_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_isNull")]
  public static extern bool PYXHistogram_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_isNotNull")]
  public static extern bool PYXHistogram_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getFeatureCount__SWIG_0")]
  public static extern IntPtr PYXHistogram_CSPtr_getFeatureCount__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getFeatureCount__SWIG_1")]
  public static extern IntPtr PYXHistogram_CSPtr_getFeatureCount__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getSum")]
  public static extern IntPtr PYXHistogram_CSPtr_getSum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getAverage")]
  public static extern IntPtr PYXHistogram_CSPtr_getAverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getSumSquare")]
  public static extern IntPtr PYXHistogram_CSPtr_getSumSquare(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getBoundaries")]
  public static extern IntPtr PYXHistogram_CSPtr_getBoundaries(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getBins")]
  public static extern IntPtr PYXHistogram_CSPtr_getBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_CSPtr_getNormalizedBins")]
  public static extern IntPtr PYXHistogram_CSPtr_getNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_SPtr__SWIG_0")]
  public static extern IntPtr new_PYXCellHistogram_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_SPtr__SWIG_1")]
  public static extern IntPtr new_PYXCellHistogram_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_SPtr__SWIG_2")]
  public static extern IntPtr new_PYXCellHistogram_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_SPtr__SWIG_3")]
  public static extern IntPtr new_PYXCellHistogram_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCellHistogram_SPtr")]
  public static extern void delete_PYXCellHistogram_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_reset__SWIG_0")]
  public static extern void PYXCellHistogram_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_reset__SWIG_1")]
  public static extern void PYXCellHistogram_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_get")]
  public static extern IntPtr PYXCellHistogram_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr___ref__")]
  public static extern IntPtr PYXCellHistogram_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr___deref__")]
  public static extern IntPtr PYXCellHistogram_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_swap")]
  public static extern void PYXCellHistogram_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_isNull")]
  public static extern bool PYXCellHistogram_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_isNotNull")]
  public static extern bool PYXCellHistogram_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getCellResolution")]
  public static extern int PYXCellHistogram_SPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getArea__SWIG_0")]
  public static extern IntPtr PYXCellHistogram_SPtr_getArea__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getArea__SWIG_1")]
  public static extern IntPtr PYXCellHistogram_SPtr_getArea__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getCellBins")]
  public static extern IntPtr PYXCellHistogram_SPtr_getCellBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getCellNormalizedBins")]
  public static extern IntPtr PYXCellHistogram_SPtr_getCellNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_createFromFeatures")]
  public static extern IntPtr PYXCellHistogram_SPtr_createFromFeatures(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getFeatureCount__SWIG_0")]
  public static extern IntPtr PYXCellHistogram_SPtr_getFeatureCount__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getFeatureCount__SWIG_1")]
  public static extern IntPtr PYXCellHistogram_SPtr_getFeatureCount__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getSum")]
  public static extern IntPtr PYXCellHistogram_SPtr_getSum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getAverage")]
  public static extern IntPtr PYXCellHistogram_SPtr_getAverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getSumSquare")]
  public static extern IntPtr PYXCellHistogram_SPtr_getSumSquare(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getBoundaries")]
  public static extern IntPtr PYXCellHistogram_SPtr_getBoundaries(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getBins")]
  public static extern IntPtr PYXCellHistogram_SPtr_getBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_getNormalizedBins")]
  public static extern IntPtr PYXCellHistogram_SPtr_getNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_add__SWIG_0")]
  public static extern void PYXCellHistogram_SPtr_add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_SPtr_add__SWIG_1")]
  public static extern void PYXCellHistogram_SPtr_add__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_CSPtr__SWIG_0")]
  public static extern IntPtr new_PYXCellHistogram_CSPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_CSPtr__SWIG_1")]
  public static extern IntPtr new_PYXCellHistogram_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_CSPtr__SWIG_2")]
  public static extern IntPtr new_PYXCellHistogram_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogram_CSPtr__SWIG_3")]
  public static extern IntPtr new_PYXCellHistogram_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCellHistogram_CSPtr")]
  public static extern void delete_PYXCellHistogram_CSPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_reset__SWIG_0")]
  public static extern void PYXCellHistogram_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_reset__SWIG_1")]
  public static extern void PYXCellHistogram_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_get")]
  public static extern IntPtr PYXCellHistogram_CSPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr___ref__")]
  public static extern IntPtr PYXCellHistogram_CSPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr___deref__")]
  public static extern IntPtr PYXCellHistogram_CSPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_swap")]
  public static extern void PYXCellHistogram_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_isNull")]
  public static extern bool PYXCellHistogram_CSPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_isNotNull")]
  public static extern bool PYXCellHistogram_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getCellResolution")]
  public static extern int PYXCellHistogram_CSPtr_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getArea__SWIG_0")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getArea__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getArea__SWIG_1")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getArea__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getCellBins")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getCellBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getCellNormalizedBins")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getCellNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getFeatureCount__SWIG_0")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getFeatureCount__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getFeatureCount__SWIG_1")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getFeatureCount__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getSum")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getSum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getAverage")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getAverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getSumSquare")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getSumSquare(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getBoundaries")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getBoundaries(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getBins")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_CSPtr_getNormalizedBins")]
  public static extern IntPtr PYXCellHistogram_CSPtr_getNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Clear")]
  public static extern void PYXHistogramBinVector_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Add")]
  public static extern void PYXHistogramBinVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_size")]
  public static extern uint PYXHistogramBinVector_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_capacity")]
  public static extern uint PYXHistogramBinVector_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_reserve")]
  public static extern void PYXHistogramBinVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogramBinVector__SWIG_0")]
  public static extern IntPtr new_PYXHistogramBinVector__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogramBinVector__SWIG_1")]
  public static extern IntPtr new_PYXHistogramBinVector__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_getitemcopy")]
  public static extern IntPtr PYXHistogramBinVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_getitem")]
  public static extern IntPtr PYXHistogramBinVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_setitem")]
  public static extern void PYXHistogramBinVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_AddRange")]
  public static extern void PYXHistogramBinVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_GetRange")]
  public static extern IntPtr PYXHistogramBinVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Insert")]
  public static extern void PYXHistogramBinVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_InsertRange")]
  public static extern void PYXHistogramBinVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_RemoveAt")]
  public static extern void PYXHistogramBinVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_RemoveRange")]
  public static extern void PYXHistogramBinVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Repeat")]
  public static extern IntPtr PYXHistogramBinVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Reverse__SWIG_0")]
  public static extern void PYXHistogramBinVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_Reverse__SWIG_1")]
  public static extern void PYXHistogramBinVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBinVector_SetRange")]
  public static extern void PYXHistogramBinVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHistogramBinVector")]
  public static extern void delete_PYXHistogramBinVector(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Clear")]
  public static extern void PYXCellHistogramBinVector_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Add")]
  public static extern void PYXCellHistogramBinVector_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_size")]
  public static extern uint PYXCellHistogramBinVector_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_capacity")]
  public static extern uint PYXCellHistogramBinVector_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_reserve")]
  public static extern void PYXCellHistogramBinVector_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogramBinVector__SWIG_0")]
  public static extern IntPtr new_PYXCellHistogramBinVector__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogramBinVector__SWIG_1")]
  public static extern IntPtr new_PYXCellHistogramBinVector__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_getitemcopy")]
  public static extern IntPtr PYXCellHistogramBinVector_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_getitem")]
  public static extern IntPtr PYXCellHistogramBinVector_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_setitem")]
  public static extern void PYXCellHistogramBinVector_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_AddRange")]
  public static extern void PYXCellHistogramBinVector_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_GetRange")]
  public static extern IntPtr PYXCellHistogramBinVector_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Insert")]
  public static extern void PYXCellHistogramBinVector_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_InsertRange")]
  public static extern void PYXCellHistogramBinVector_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_RemoveAt")]
  public static extern void PYXCellHistogramBinVector_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_RemoveRange")]
  public static extern void PYXCellHistogramBinVector_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Repeat")]
  public static extern IntPtr PYXCellHistogramBinVector_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Reverse__SWIG_0")]
  public static extern void PYXCellHistogramBinVector_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_Reverse__SWIG_1")]
  public static extern void PYXCellHistogramBinVector_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinVector_SetRange")]
  public static extern void PYXCellHistogramBinVector_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCellHistogramBinVector")]
  public static extern void delete_PYXCellHistogramBinVector(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_min_set")]
  public static extern void RangeInt_min_set(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_min_get")]
  public static extern int RangeInt_min_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_max_set")]
  public static extern void RangeInt_max_set(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_max_get")]
  public static extern int RangeInt_max_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_minType_set")]
  public static extern void RangeInt_minType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_minType_get")]
  public static extern IntPtr RangeInt_minType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_maxType_set")]
  public static extern void RangeInt_maxType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_maxType_get")]
  public static extern IntPtr RangeInt_maxType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_createClosedOpen")]
  public static extern IntPtr RangeInt_createClosedOpen(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_createClosedClosed")]
  public static extern IntPtr RangeInt_createClosedClosed(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeInt__SWIG_0")]
  public static extern IntPtr new_RangeInt__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeInt__SWIG_1")]
  public static extern IntPtr new_RangeInt__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeInt__SWIG_2")]
  public static extern IntPtr new_RangeInt__SWIG_2(int jarg1, int jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeInt__SWIG_3")]
  public static extern IntPtr new_RangeInt__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_middle")]
  public static extern int RangeInt_middle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_single")]
  public static extern bool RangeInt_single(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_global")]
  public static extern bool RangeInt_global(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_infinite")]
  public static extern bool RangeInt_infinite(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_contains__SWIG_0")]
  public static extern bool RangeInt_contains__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_contains__SWIG_1")]
  public static extern bool RangeInt_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_intersects")]
  public static extern bool RangeInt_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_lowerHalf")]
  public static extern IntPtr RangeInt_lowerHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_higherHalf")]
  public static extern IntPtr RangeInt_higherHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_normalize")]
  public static extern IntPtr RangeInt_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeInt_normalizeWith")]
  public static extern IntPtr RangeInt_normalizeWith(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RangeInt")]
  public static extern void delete_RangeInt(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_min_set")]
  public static extern void RangeDouble_min_set(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_min_get")]
  public static extern double RangeDouble_min_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_max_set")]
  public static extern void RangeDouble_max_set(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_max_get")]
  public static extern double RangeDouble_max_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_minType_set")]
  public static extern void RangeDouble_minType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_minType_get")]
  public static extern IntPtr RangeDouble_minType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_maxType_set")]
  public static extern void RangeDouble_maxType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_maxType_get")]
  public static extern IntPtr RangeDouble_maxType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_createClosedOpen")]
  public static extern IntPtr RangeDouble_createClosedOpen(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_createClosedClosed")]
  public static extern IntPtr RangeDouble_createClosedClosed(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeDouble__SWIG_0")]
  public static extern IntPtr new_RangeDouble__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeDouble__SWIG_1")]
  public static extern IntPtr new_RangeDouble__SWIG_1(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeDouble__SWIG_2")]
  public static extern IntPtr new_RangeDouble__SWIG_2(double jarg1, double jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeDouble__SWIG_3")]
  public static extern IntPtr new_RangeDouble__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_middle")]
  public static extern double RangeDouble_middle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_single")]
  public static extern bool RangeDouble_single(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_global")]
  public static extern bool RangeDouble_global(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_infinite")]
  public static extern bool RangeDouble_infinite(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_contains__SWIG_0")]
  public static extern bool RangeDouble_contains__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_contains__SWIG_1")]
  public static extern bool RangeDouble_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_intersects")]
  public static extern bool RangeDouble_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_lowerHalf")]
  public static extern IntPtr RangeDouble_lowerHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_higherHalf")]
  public static extern IntPtr RangeDouble_higherHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_normalize")]
  public static extern IntPtr RangeDouble_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeDouble_normalizeWith")]
  public static extern IntPtr RangeDouble_normalizeWith(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RangeDouble")]
  public static extern void delete_RangeDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_min_set")]
  public static extern void RangeString_min_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_min_get")]
  public static extern IntPtr RangeString_min_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_max_set")]
  public static extern void RangeString_max_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_max_get")]
  public static extern IntPtr RangeString_max_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_minType_set")]
  public static extern void RangeString_minType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_minType_get")]
  public static extern IntPtr RangeString_minType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_maxType_set")]
  public static extern void RangeString_maxType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_maxType_get")]
  public static extern IntPtr RangeString_maxType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_createClosedOpen")]
  public static extern IntPtr RangeString_createClosedOpen(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_createClosedClosed")]
  public static extern IntPtr RangeString_createClosedClosed(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeString__SWIG_0")]
  public static extern IntPtr new_RangeString__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeString__SWIG_1")]
  public static extern IntPtr new_RangeString__SWIG_1(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeString__SWIG_2")]
  public static extern IntPtr new_RangeString__SWIG_2(IntPtr jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangeString__SWIG_3")]
  public static extern IntPtr new_RangeString__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_middle")]
  public static extern IntPtr RangeString_middle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_single")]
  public static extern bool RangeString_single(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_global")]
  public static extern bool RangeString_global(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_infinite")]
  public static extern bool RangeString_infinite(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_contains__SWIG_0")]
  public static extern bool RangeString_contains__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_contains__SWIG_1")]
  public static extern bool RangeString_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_intersects")]
  public static extern bool RangeString_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_lowerHalf")]
  public static extern IntPtr RangeString_lowerHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_higherHalf")]
  public static extern IntPtr RangeString_higherHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_normalize")]
  public static extern IntPtr RangeString_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangeString_normalizeWith")]
  public static extern IntPtr RangeString_normalizeWith(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RangeString")]
  public static extern void delete_RangeString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_min_set")]
  public static extern void RangePYXValue_min_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_min_get")]
  public static extern IntPtr RangePYXValue_min_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_max_set")]
  public static extern void RangePYXValue_max_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_max_get")]
  public static extern IntPtr RangePYXValue_max_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_minType_set")]
  public static extern void RangePYXValue_minType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_minType_get")]
  public static extern IntPtr RangePYXValue_minType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_maxType_set")]
  public static extern void RangePYXValue_maxType_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_maxType_get")]
  public static extern IntPtr RangePYXValue_maxType_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_createClosedOpen")]
  public static extern IntPtr RangePYXValue_createClosedOpen(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_createClosedClosed")]
  public static extern IntPtr RangePYXValue_createClosedClosed(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangePYXValue__SWIG_0")]
  public static extern IntPtr new_RangePYXValue__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangePYXValue__SWIG_1")]
  public static extern IntPtr new_RangePYXValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangePYXValue__SWIG_2")]
  public static extern IntPtr new_RangePYXValue__SWIG_2(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RangePYXValue__SWIG_3")]
  public static extern IntPtr new_RangePYXValue__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_middle")]
  public static extern IntPtr RangePYXValue_middle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_single")]
  public static extern bool RangePYXValue_single(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_global")]
  public static extern bool RangePYXValue_global(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_infinite")]
  public static extern bool RangePYXValue_infinite(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_contains__SWIG_0")]
  public static extern bool RangePYXValue_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_contains__SWIG_1")]
  public static extern bool RangePYXValue_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_intersects")]
  public static extern bool RangePYXValue_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_lowerHalf")]
  public static extern IntPtr RangePYXValue_lowerHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_higherHalf")]
  public static extern IntPtr RangePYXValue_higherHalf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_normalize")]
  public static extern IntPtr RangePYXValue_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RangePYXValue_normalizeWith")]
  public static extern IntPtr RangePYXValue_normalizeWith(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RangePYXValue")]
  public static extern void delete_RangePYXValue(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheNeedsTileEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_CacheNeedsTileEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheNeedsTileEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_CacheNeedsTileEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheNeedsTileEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_CacheNeedsTileEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheNeedsTileEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_CacheNeedsTileEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheNeedsTileEvent_SPtr")]
  public static extern void delete_CacheNeedsTileEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_reset__SWIG_0")]
  public static extern void CacheNeedsTileEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_reset__SWIG_1")]
  public static extern void CacheNeedsTileEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_get")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr___ref__")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr___deref__")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_swap")]
  public static extern void CacheNeedsTileEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_isNull")]
  public static extern bool CacheNeedsTileEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_isNotNull")]
  public static extern bool CacheNeedsTileEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_create")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_getTile")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_getDownloadFailed")]
  public static extern bool CacheNeedsTileEvent_SPtr_getDownloadFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_setDownloadFailed")]
  public static extern void CacheNeedsTileEvent_SPtr_setDownloadFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_dynamic_cast")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_SPtr_getCache")]
  public static extern IntPtr CacheNeedsTileEvent_SPtr_getCache(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheWithProcessEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_CacheWithProcessEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheWithProcessEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_CacheWithProcessEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheWithProcessEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_CacheWithProcessEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheWithProcessEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_CacheWithProcessEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheWithProcessEvent_SPtr")]
  public static extern void delete_CacheWithProcessEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_reset__SWIG_0")]
  public static extern void CacheWithProcessEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_reset__SWIG_1")]
  public static extern void CacheWithProcessEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_get")]
  public static extern IntPtr CacheWithProcessEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr___ref__")]
  public static extern IntPtr CacheWithProcessEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr___deref__")]
  public static extern IntPtr CacheWithProcessEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_swap")]
  public static extern void CacheWithProcessEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_isNull")]
  public static extern bool CacheWithProcessEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_isNotNull")]
  public static extern bool CacheWithProcessEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_create")]
  public static extern IntPtr CacheWithProcessEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_getProcess")]
  public static extern IntPtr CacheWithProcessEvent_SPtr_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_getHandled")]
  public static extern bool CacheWithProcessEvent_SPtr_getHandled(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_setHandled")]
  public static extern void CacheWithProcessEvent_SPtr_setHandled(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_dynamic_cast")]
  public static extern IntPtr CacheWithProcessEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_SPtr_getCache")]
  public static extern IntPtr CacheWithProcessEvent_SPtr_getCache(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandManagerEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_CommandManagerEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandManagerEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_CommandManagerEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandManagerEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_CommandManagerEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandManagerEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_CommandManagerEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CommandManagerEvent_SPtr")]
  public static extern void delete_CommandManagerEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_reset__SWIG_0")]
  public static extern void CommandManagerEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_reset__SWIG_1")]
  public static extern void CommandManagerEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_get")]
  public static extern IntPtr CommandManagerEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr___ref__")]
  public static extern IntPtr CommandManagerEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr___deref__")]
  public static extern IntPtr CommandManagerEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_swap")]
  public static extern void CommandManagerEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_isNull")]
  public static extern bool CommandManagerEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_isNotNull")]
  public static extern bool CommandManagerEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_create")]
  public static extern IntPtr CommandManagerEvent_SPtr_create(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_getErrorMsg")]
  public static extern IntPtr CommandManagerEvent_SPtr_getErrorMsg(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_SPtr_dynamic_cast")]
  public static extern IntPtr CommandManagerEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessEvent_SPtr")]
  public static extern void delete_ProcessEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_reset__SWIG_0")]
  public static extern void ProcessEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_reset__SWIG_1")]
  public static extern void ProcessEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_get")]
  public static extern IntPtr ProcessEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr___ref__")]
  public static extern IntPtr ProcessEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr___deref__")]
  public static extern IntPtr ProcessEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_swap")]
  public static extern void ProcessEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_isNull")]
  public static extern bool ProcessEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_isNotNull")]
  public static extern bool ProcessEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_getProcess")]
  public static extern IntPtr ProcessEvent_SPtr_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_create")]
  public static extern IntPtr ProcessEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_SPtr_dynamic_cast")]
  public static extern IntPtr ProcessEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessListEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessListEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessListEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessListEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessListEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessListEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessListEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessListEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessListEvent_SPtr")]
  public static extern void delete_ProcessListEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_reset__SWIG_0")]
  public static extern void ProcessListEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_reset__SWIG_1")]
  public static extern void ProcessListEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_get")]
  public static extern IntPtr ProcessListEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr___ref__")]
  public static extern IntPtr ProcessListEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr___deref__")]
  public static extern IntPtr ProcessListEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_swap")]
  public static extern void ProcessListEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_isNull")]
  public static extern bool ProcessListEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_isNotNull")]
  public static extern bool ProcessListEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_create")]
  public static extern IntPtr ProcessListEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_createChangedEvent")]
  public static extern IntPtr ProcessListEvent_SPtr_createChangedEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_getProcRef")]
  public static extern IntPtr ProcessListEvent_SPtr_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_getAction")]
  public static extern int ProcessListEvent_SPtr_getAction(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_SPtr_dynamic_cast")]
  public static extern IntPtr ProcessListEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessProcessingEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_ProcessProcessingEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessProcessingEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_ProcessProcessingEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessProcessingEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_ProcessProcessingEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessProcessingEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_ProcessProcessingEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessProcessingEvent_SPtr")]
  public static extern void delete_ProcessProcessingEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_reset__SWIG_0")]
  public static extern void ProcessProcessingEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_reset__SWIG_1")]
  public static extern void ProcessProcessingEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_get")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr___ref__")]
  public static extern IntPtr ProcessProcessingEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr___deref__")]
  public static extern IntPtr ProcessProcessingEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_swap")]
  public static extern void ProcessProcessingEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_isNull")]
  public static extern bool ProcessProcessingEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_isNotNull")]
  public static extern bool ProcessProcessingEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Error_set")]
  public static extern void ProcessProcessingEvent_SPtr_Error_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Error_get")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_Error_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Processing_set")]
  public static extern void ProcessProcessingEvent_SPtr_Processing_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Processing_get")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_Processing_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Fetching_set")]
  public static extern void ProcessProcessingEvent_SPtr_Fetching_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Fetching_get")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_Fetching_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Downloading_set")]
  public static extern void ProcessProcessingEvent_SPtr_Downloading_set(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_Downloading_get")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_Downloading_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_getProcessingMessage")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_getProcessingMessage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_create")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_dynamic_cast")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_SPtr_getProcess")]
  public static extern IntPtr ProcessProcessingEvent_SPtr_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandExecutedEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_CommandExecutedEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandExecutedEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_CommandExecutedEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandExecutedEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_CommandExecutedEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandExecutedEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_CommandExecutedEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CommandExecutedEvent_SPtr")]
  public static extern void delete_CommandExecutedEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_reset__SWIG_0")]
  public static extern void CommandExecutedEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_reset__SWIG_1")]
  public static extern void CommandExecutedEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_get")]
  public static extern IntPtr CommandExecutedEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr___ref__")]
  public static extern IntPtr CommandExecutedEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr___deref__")]
  public static extern IntPtr CommandExecutedEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_swap")]
  public static extern void CommandExecutedEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_isNull")]
  public static extern bool CommandExecutedEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_isNotNull")]
  public static extern bool CommandExecutedEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_create")]
  public static extern IntPtr CommandExecutedEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_getProcRef")]
  public static extern IntPtr CommandExecutedEvent_SPtr_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_SPtr_dynamic_cast")]
  public static extern IntPtr CommandExecutedEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_FileEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_FileEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_FileEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_FileEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_FileEvent_SPtr")]
  public static extern void delete_FileEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_reset__SWIG_0")]
  public static extern void FileEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_reset__SWIG_1")]
  public static extern void FileEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_get")]
  public static extern IntPtr FileEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr___ref__")]
  public static extern IntPtr FileEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr___deref__")]
  public static extern IntPtr FileEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_swap")]
  public static extern void FileEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_isNull")]
  public static extern bool FileEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_isNotNull")]
  public static extern bool FileEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_create__SWIG_0")]
  public static extern IntPtr FileEvent_SPtr_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_create__SWIG_1")]
  public static extern IntPtr FileEvent_SPtr_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_getIndex")]
  public static extern int FileEvent_SPtr_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_getPath")]
  public static extern IntPtr FileEvent_SPtr_getPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_getFailed")]
  public static extern bool FileEvent_SPtr_getFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_setFailed")]
  public static extern void FileEvent_SPtr_setFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_getLocalPath")]
  public static extern IntPtr FileEvent_SPtr_getLocalPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_setLocalPath")]
  public static extern void FileEvent_SPtr_setLocalPath(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_SPtr_dynamic_cast")]
  public static extern IntPtr FileEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipelineFilesEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_PipelineFilesEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipelineFilesEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_PipelineFilesEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipelineFilesEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_PipelineFilesEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipelineFilesEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_PipelineFilesEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipelineFilesEvent_SPtr")]
  public static extern void delete_PipelineFilesEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_reset__SWIG_0")]
  public static extern void PipelineFilesEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_reset__SWIG_1")]
  public static extern void PipelineFilesEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_get")]
  public static extern IntPtr PipelineFilesEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr___ref__")]
  public static extern IntPtr PipelineFilesEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr___deref__")]
  public static extern IntPtr PipelineFilesEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_swap")]
  public static extern void PipelineFilesEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_isNull")]
  public static extern bool PipelineFilesEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_isNotNull")]
  public static extern bool PipelineFilesEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_create")]
  public static extern IntPtr PipelineFilesEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_getProcess")]
  public static extern IntPtr PipelineFilesEvent_SPtr_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_getFailed")]
  public static extern bool PipelineFilesEvent_SPtr_getFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_setFailed")]
  public static extern void PipelineFilesEvent_SPtr_setFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_SPtr_dynamic_cast")]
  public static extern IntPtr PipelineFilesEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ViewPointChangedEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_ViewPointChangedEvent_SPtr__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ViewPointChangedEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_ViewPointChangedEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ViewPointChangedEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_ViewPointChangedEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ViewPointChangedEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_ViewPointChangedEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ViewPointChangedEvent_SPtr")]
  public static extern void delete_ViewPointChangedEvent_SPtr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_reset__SWIG_0")]
  public static extern void ViewPointChangedEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_reset__SWIG_1")]
  public static extern void ViewPointChangedEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_get")]
  public static extern IntPtr ViewPointChangedEvent_SPtr_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr___ref__")]
  public static extern IntPtr ViewPointChangedEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr___deref__")]
  public static extern IntPtr ViewPointChangedEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_swap")]
  public static extern void ViewPointChangedEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_isNull")]
  public static extern bool ViewPointChangedEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_isNotNull")]
  public static extern bool ViewPointChangedEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_create")]
  public static extern IntPtr ViewPointChangedEvent_SPtr_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_SPtr_dynamic_cast")]
  public static extern IntPtr ViewPointChangedEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Clear")]
  public static extern void Vector_IProcess_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Add")]
  public static extern void Vector_IProcess_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_size")]
  public static extern uint Vector_IProcess_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_capacity")]
  public static extern uint Vector_IProcess_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_reserve")]
  public static extern void Vector_IProcess_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IProcess__SWIG_0")]
  public static extern IntPtr new_Vector_IProcess__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IProcess__SWIG_1")]
  public static extern IntPtr new_Vector_IProcess__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_getitemcopy")]
  public static extern IntPtr Vector_IProcess_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_getitem")]
  public static extern IntPtr Vector_IProcess_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_setitem")]
  public static extern void Vector_IProcess_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_AddRange")]
  public static extern void Vector_IProcess_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_GetRange")]
  public static extern IntPtr Vector_IProcess_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Insert")]
  public static extern void Vector_IProcess_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_InsertRange")]
  public static extern void Vector_IProcess_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_RemoveAt")]
  public static extern void Vector_IProcess_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_RemoveRange")]
  public static extern void Vector_IProcess_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Repeat")]
  public static extern IntPtr Vector_IProcess_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Reverse__SWIG_0")]
  public static extern void Vector_IProcess_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_Reverse__SWIG_1")]
  public static extern void Vector_IProcess_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IProcess_SetRange")]
  public static extern void Vector_IProcess_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_IProcess")]
  public static extern void delete_Vector_IProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Clear")]
  public static extern void Vector_ProcRef_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Add")]
  public static extern void Vector_ProcRef_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_size")]
  public static extern uint Vector_ProcRef_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_capacity")]
  public static extern uint Vector_ProcRef_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_reserve")]
  public static extern void Vector_ProcRef_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_ProcRef__SWIG_0")]
  public static extern IntPtr new_Vector_ProcRef__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_ProcRef__SWIG_1")]
  public static extern IntPtr new_Vector_ProcRef__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_getitemcopy")]
  public static extern IntPtr Vector_ProcRef_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_getitem")]
  public static extern IntPtr Vector_ProcRef_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_setitem")]
  public static extern void Vector_ProcRef_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_AddRange")]
  public static extern void Vector_ProcRef_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_GetRange")]
  public static extern IntPtr Vector_ProcRef_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Insert")]
  public static extern void Vector_ProcRef_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_InsertRange")]
  public static extern void Vector_ProcRef_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_RemoveAt")]
  public static extern void Vector_ProcRef_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_RemoveRange")]
  public static extern void Vector_ProcRef_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Repeat")]
  public static extern IntPtr Vector_ProcRef_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Reverse__SWIG_0")]
  public static extern void Vector_ProcRef_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_Reverse__SWIG_1")]
  public static extern void Vector_ProcRef_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_ProcRef_SetRange")]
  public static extern void Vector_ProcRef_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_ProcRef")]
  public static extern void delete_Vector_ProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Clear")]
  public static extern void Vector_IFeature_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Add")]
  public static extern void Vector_IFeature_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_size")]
  public static extern uint Vector_IFeature_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_capacity")]
  public static extern uint Vector_IFeature_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_reserve")]
  public static extern void Vector_IFeature_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IFeature__SWIG_0")]
  public static extern IntPtr new_Vector_IFeature__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IFeature__SWIG_1")]
  public static extern IntPtr new_Vector_IFeature__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_getitemcopy")]
  public static extern IntPtr Vector_IFeature_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_getitem")]
  public static extern IntPtr Vector_IFeature_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_setitem")]
  public static extern void Vector_IFeature_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_AddRange")]
  public static extern void Vector_IFeature_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_GetRange")]
  public static extern IntPtr Vector_IFeature_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Insert")]
  public static extern void Vector_IFeature_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_InsertRange")]
  public static extern void Vector_IFeature_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_RemoveAt")]
  public static extern void Vector_IFeature_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_RemoveRange")]
  public static extern void Vector_IFeature_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Repeat")]
  public static extern IntPtr Vector_IFeature_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Reverse__SWIG_0")]
  public static extern void Vector_IFeature_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_Reverse__SWIG_1")]
  public static extern void Vector_IFeature_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IFeature_SetRange")]
  public static extern void Vector_IFeature_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_IFeature")]
  public static extern void delete_Vector_IFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Clear")]
  public static extern void Vector_IUnknown_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Add")]
  public static extern void Vector_IUnknown_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_size")]
  public static extern uint Vector_IUnknown_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_capacity")]
  public static extern uint Vector_IUnknown_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_reserve")]
  public static extern void Vector_IUnknown_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IUnknown__SWIG_0")]
  public static extern IntPtr new_Vector_IUnknown__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_IUnknown__SWIG_1")]
  public static extern IntPtr new_Vector_IUnknown__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_getitemcopy")]
  public static extern IntPtr Vector_IUnknown_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_getitem")]
  public static extern IntPtr Vector_IUnknown_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_setitem")]
  public static extern void Vector_IUnknown_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_AddRange")]
  public static extern void Vector_IUnknown_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_GetRange")]
  public static extern IntPtr Vector_IUnknown_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Insert")]
  public static extern void Vector_IUnknown_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_InsertRange")]
  public static extern void Vector_IUnknown_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_RemoveAt")]
  public static extern void Vector_IUnknown_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_RemoveRange")]
  public static extern void Vector_IUnknown_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Repeat")]
  public static extern IntPtr Vector_IUnknown_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Reverse__SWIG_0")]
  public static extern void Vector_IUnknown_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_Reverse__SWIG_1")]
  public static extern void Vector_IUnknown_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_IUnknown_SetRange")]
  public static extern void Vector_IUnknown_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_IUnknown")]
  public static extern void delete_Vector_IUnknown(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Clear")]
  public static extern void Vector_Parameter_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Add")]
  public static extern void Vector_Parameter_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_size")]
  public static extern uint Vector_Parameter_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_capacity")]
  public static extern uint Vector_Parameter_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_reserve")]
  public static extern void Vector_Parameter_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Parameter__SWIG_0")]
  public static extern IntPtr new_Vector_Parameter__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Parameter__SWIG_1")]
  public static extern IntPtr new_Vector_Parameter__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_getitemcopy")]
  public static extern IntPtr Vector_Parameter_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_getitem")]
  public static extern IntPtr Vector_Parameter_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_setitem")]
  public static extern void Vector_Parameter_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_AddRange")]
  public static extern void Vector_Parameter_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_GetRange")]
  public static extern IntPtr Vector_Parameter_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Insert")]
  public static extern void Vector_Parameter_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_InsertRange")]
  public static extern void Vector_Parameter_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_RemoveAt")]
  public static extern void Vector_Parameter_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_RemoveRange")]
  public static extern void Vector_Parameter_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Repeat")]
  public static extern IntPtr Vector_Parameter_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Reverse__SWIG_0")]
  public static extern void Vector_Parameter_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_Reverse__SWIG_1")]
  public static extern void Vector_Parameter_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Parameter_SetRange")]
  public static extern void Vector_Parameter_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Parameter")]
  public static extern void delete_Vector_Parameter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Clear")]
  public static extern void Vector_Command_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Add")]
  public static extern void Vector_Command_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_size")]
  public static extern uint Vector_Command_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_capacity")]
  public static extern uint Vector_Command_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_reserve")]
  public static extern void Vector_Command_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Command__SWIG_0")]
  public static extern IntPtr new_Vector_Command__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Vector_Command__SWIG_1")]
  public static extern IntPtr new_Vector_Command__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_getitemcopy")]
  public static extern IntPtr Vector_Command_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_getitem")]
  public static extern IntPtr Vector_Command_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_setitem")]
  public static extern void Vector_Command_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_AddRange")]
  public static extern void Vector_Command_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_GetRange")]
  public static extern IntPtr Vector_Command_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Insert")]
  public static extern void Vector_Command_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_InsertRange")]
  public static extern void Vector_Command_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_RemoveAt")]
  public static extern void Vector_Command_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_RemoveRange")]
  public static extern void Vector_Command_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Repeat")]
  public static extern IntPtr Vector_Command_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Reverse__SWIG_0")]
  public static extern void Vector_Command_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_Reverse__SWIG_1")]
  public static extern void Vector_Command_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Vector_Command_SetRange")]
  public static extern void Vector_Command_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Vector_Command")]
  public static extern void delete_Vector_Command(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_0")]
  public static extern void intrusive_ptr_add_ref__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_0")]
  public static extern void intrusive_ptr_release__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_1")]
  public static extern void intrusive_ptr_add_ref__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_1")]
  public static extern void intrusive_ptr_release__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_2")]
  public static extern void intrusive_ptr_add_ref__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_2")]
  public static extern void intrusive_ptr_release__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_3")]
  public static extern void intrusive_ptr_add_ref__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_3")]
  public static extern void intrusive_ptr_release__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_4")]
  public static extern void intrusive_ptr_add_ref__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_4")]
  public static extern void intrusive_ptr_release__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_5")]
  public static extern void intrusive_ptr_add_ref__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_5")]
  public static extern void intrusive_ptr_release__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_6")]
  public static extern void intrusive_ptr_add_ref__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_6")]
  public static extern void intrusive_ptr_release__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXLibInstance__SWIG_0")]
  public static extern IntPtr new_PYXLibInstance__SWIG_0(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXLibInstance__SWIG_1")]
  public static extern IntPtr new_PYXLibInstance__SWIG_1(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXLibInstance__SWIG_2")]
  public static extern IntPtr new_PYXLibInstance__SWIG_2(IntPtr jarg1, bool jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXLibInstance__SWIG_3")]
  public static extern IntPtr new_PYXLibInstance__SWIG_3(IntPtr jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXLibInstance")]
  public static extern void delete_PYXLibInstance(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLibInstance_initialize__SWIG_0")]
  public static extern void PYXLibInstance_initialize__SWIG_0(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLibInstance_initialize__SWIG_1")]
  public static extern void PYXLibInstance_initialize__SWIG_1(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLibInstance_initialize__SWIG_2")]
  public static extern void PYXLibInstance_initialize__SWIG_2(IntPtr jarg1, bool jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLibInstance_initialize__SWIG_3")]
  public static extern void PYXLibInstance_initialize__SWIG_3(IntPtr jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLibInstance_uninitialize")]
  public static extern void PYXLibInstance_uninitialize();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXAbstractIterator")]
  public static extern void delete_PYXAbstractIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAbstractIterator_next")]
  public static extern void PYXAbstractIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAbstractIterator_end")]
  public static extern bool PYXAbstractIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_test")]
  public static extern void AppServices_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_initialize__SWIG_0")]
  public static extern void AppServices_initialize__SWIG_0(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_initialize__SWIG_1")]
  public static extern void AppServices_initialize__SWIG_1(IntPtr jarg1, bool jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_uninitialize")]
  public static extern void AppServices_uninitialize();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getAppName")]
  public static extern IntPtr AppServices_getAppName();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getPyxisProtocol")]
  public static extern IntPtr AppServices_getPyxisProtocol();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getPyxisProtocolName")]
  public static extern IntPtr AppServices_getPyxisProtocolName();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_m_spProps_set")]
  public static extern void AppServices_m_spProps_set(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_m_spProps_get")]
  public static extern IntPtr AppServices_m_spProps_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getConfiguration")]
  public static extern IntPtr AppServices_getConfiguration(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_setConfiguration")]
  public static extern void AppServices_setConfiguration(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_makeTempFile__SWIG_0")]
  public static extern IntPtr AppServices_makeTempFile__SWIG_0(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_makeTempFile__SWIG_1")]
  public static extern IntPtr AppServices_makeTempFile__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_makeTempDir")]
  public static extern IntPtr AppServices_makeTempDir();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getTraceFilePath")]
  public static extern IntPtr AppServices_getTraceFilePath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getCacheDir")]
  public static extern IntPtr AppServices_getCacheDir(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getApplicationPath")]
  public static extern IntPtr AppServices_getApplicationPath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getWorkingPath")]
  public static extern IntPtr AppServices_getWorkingPath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getLibraryPath")]
  public static extern IntPtr AppServices_getLibraryPath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServices_getBaseCachePath")]
  public static extern IntPtr AppServices_getBaseCachePath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_AppServices")]
  public static extern void delete_AppServices(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServicesConfiguration_localStorageFormat_get")]
  public static extern IntPtr AppServicesConfiguration_localStorageFormat_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServicesConfiguration_localStorageFormat_files_get")]
  public static extern IntPtr AppServicesConfiguration_localStorageFormat_files_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServicesConfiguration_localStorageFormat_sqlite_get")]
  public static extern IntPtr AppServicesConfiguration_localStorageFormat_sqlite_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_AppServicesConfiguration_importMemoryLimit_get")]
  public static extern IntPtr AppServicesConfiguration_importMemoryLimit_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_AppServicesConfiguration")]
  public static extern IntPtr new_AppServicesConfiguration();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_AppServicesConfiguration")]
  public static extern void delete_AppServicesConfiguration(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_appPropertyExists")]
  public static extern bool appPropertyExists(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getAppProperty__SWIG_2")]
  public static extern bool getAppProperty__SWIG_2(IntPtr jarg1, IntPtr jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getAppProperty__SWIG_3")]
  public static extern uint getAppProperty__SWIG_3(IntPtr jarg1, IntPtr jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getAppProperty__SWIG_4")]
  public static extern IntPtr getAppProperty__SWIG_4(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_getAppProperty__SWIG_5")]
  public static extern IntPtr getAppProperty__SWIG_5(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingShape_canIntersects")]
  public static extern bool PYXBoundingShape_canIntersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingShape_canBeCloser")]
  public static extern bool PYXBoundingShape_canBeCloser(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingShape_getBoundingArea")]
  public static extern double PYXBoundingShape_getBoundingArea(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXBoundingShape")]
  public static extern void delete_PYXBoundingShape(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingGreatCircleArc__SWIG_0")]
  public static extern IntPtr new_PYXBoundingGreatCircleArc__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingGreatCircleArc__SWIG_1")]
  public static extern IntPtr new_PYXBoundingGreatCircleArc__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArc_getGreatCircleArc")]
  public static extern IntPtr PYXBoundingGreatCircleArc_getGreatCircleArc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArc_getRadius")]
  public static extern double PYXBoundingGreatCircleArc_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArc_canIntersects")]
  public static extern bool PYXBoundingGreatCircleArc_canIntersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArc_canBeCloser")]
  public static extern bool PYXBoundingGreatCircleArc_canBeCloser(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArc_getBoundingArea")]
  public static extern double PYXBoundingGreatCircleArc_getBoundingArea(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXBoundingGreatCircleArc")]
  public static extern void delete_PYXBoundingGreatCircleArc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_global")]
  public static extern IntPtr PYXBoundingCircle_global();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingCircle__SWIG_0")]
  public static extern IntPtr new_PYXBoundingCircle__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingCircle__SWIG_1")]
  public static extern IntPtr new_PYXBoundingCircle__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingCircle__SWIG_2")]
  public static extern IntPtr new_PYXBoundingCircle__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBoundingCircle__SWIG_3")]
  public static extern IntPtr new_PYXBoundingCircle__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_estimateResolutionFromRadius")]
  public static extern int PYXBoundingCircle_estimateResolutionFromRadius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_contains__SWIG_0")]
  public static extern bool PYXBoundingCircle_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_contains__SWIG_1")]
  public static extern bool PYXBoundingCircle_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_intersects")]
  public static extern bool PYXBoundingCircle_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_getCenter")]
  public static extern IntPtr PYXBoundingCircle_getCenter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_getRadius")]
  public static extern double PYXBoundingCircle_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_isEmpty")]
  public static extern bool PYXBoundingCircle_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_canIntersects")]
  public static extern bool PYXBoundingCircle_canIntersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_canBeCloser")]
  public static extern bool PYXBoundingCircle_canBeCloser(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircle_getBoundingArea")]
  public static extern double PYXBoundingCircle_getBoundingArea(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXBoundingCircle")]
  public static extern void delete_PYXBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_calculateCheckSum")]
  public static extern IntPtr ChecksumCalculator_calculateCheckSum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_calculateCheckSumSwigExplicitChecksumCalculator")]
  public static extern IntPtr ChecksumCalculator_calculateCheckSumSwigExplicitChecksumCalculator(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_calculateFileCheckSum")]
  public static extern IntPtr ChecksumCalculator_calculateFileCheckSum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_calculateFileCheckSumSwigExplicitChecksumCalculator")]
  public static extern IntPtr ChecksumCalculator_calculateFileCheckSumSwigExplicitChecksumCalculator(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_findFileMatchingChecksum")]
  public static extern IntPtr ChecksumCalculator_findFileMatchingChecksum(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_findFileMatchingChecksumSwigExplicitChecksumCalculator")]
  public static extern IntPtr ChecksumCalculator_findFileMatchingChecksumSwigExplicitChecksumCalculator(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_getChecksumCalculator")]
  public static extern IntPtr ChecksumCalculator_getChecksumCalculator();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_setChecksumCalculator")]
  public static extern void ChecksumCalculator_setChecksumCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_release")]
  public static extern int ChecksumCalculator_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_releaseSwigExplicitChecksumCalculator")]
  public static extern int ChecksumCalculator_releaseSwigExplicitChecksumCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_addRef")]
  public static extern int ChecksumCalculator_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_addRefSwigExplicitChecksumCalculator")]
  public static extern int ChecksumCalculator_addRefSwigExplicitChecksumCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ChecksumCalculator")]
  public static extern void delete_ChecksumCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ChecksumCalculator")]
  public static extern IntPtr new_ChecksumCalculator();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ChecksumCalculator_director_connect")]
  public static extern void ChecksumCalculator_director_connect(HandleRef jarg1, ChecksumCalculator.SwigDelegateChecksumCalculator_0 delegate0, ChecksumCalculator.SwigDelegateChecksumCalculator_1 delegate1, ChecksumCalculator.SwigDelegateChecksumCalculator_2 delegate2, ChecksumCalculator.SwigDelegateChecksumCalculator_3 delegate3, ChecksumCalculator.SwigDelegateChecksumCalculator_4 delegate4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_create")]
  public static extern IntPtr CommandExecutedEvent_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_getProcRef")]
  public static extern IntPtr CommandExecutedEvent_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandExecutedEvent_dynamic_cast")]
  public static extern IntPtr CommandExecutedEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CommandExecutedEvent")]
  public static extern void delete_CommandExecutedEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_release")]
  public static extern int Command_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_releaseSwigExplicitCommand")]
  public static extern int Command_releaseSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_addRef")]
  public static extern int Command_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_addRefSwigExplicitCommand")]
  public static extern int Command_addRefSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Command")]
  public static extern void delete_Command(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getName")]
  public static extern IntPtr Command_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getLongName")]
  public static extern IntPtr Command_getLongName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getLongNameSwigExplicitCommand")]
  public static extern IntPtr Command_getLongNameSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_execute")]
  public static extern bool Command_execute(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_drag")]
  public static extern IntPtr Command_drag(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_dragSwigExplicitCommand")]
  public static extern IntPtr Command_dragSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_undo")]
  public static extern bool Command_undo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_redo")]
  public static extern bool Command_redo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_redoSwigExplicitCommand")]
  public static extern bool Command_redoSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getCategory")]
  public static extern IntPtr Command_getCategory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getCategorySwigExplicitCommand")]
  public static extern IntPtr Command_getCategorySwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_setCategory")]
  public static extern void Command_setCategory(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_setCategorySwigExplicitCommand")]
  public static extern void Command_setCategorySwigExplicitCommand(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getPriority")]
  public static extern int Command_getPriority(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getPrioritySwigExplicitCommand")]
  public static extern int Command_getPrioritySwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_setPriority")]
  public static extern void Command_setPriority(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_setPrioritySwigExplicitCommand")]
  public static extern void Command_setPrioritySwigExplicitCommand(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getSubordinates")]
  public static extern IntPtr Command_getSubordinates(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getSubordinatesSwigExplicitCommand")]
  public static extern IntPtr Command_getSubordinatesSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_addSubordinate")]
  public static extern void Command_addSubordinate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_addSubordinateSwigExplicitCommand")]
  public static extern void Command_addSubordinateSwigExplicitCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getRecordable")]
  public static extern bool Command_getRecordable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getRecordableSwigExplicitCommand")]
  public static extern bool Command_getRecordableSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getUndoable")]
  public static extern bool Command_getUndoable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getUndoableSwigExplicitCommand")]
  public static extern bool Command_getUndoableSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getEnabled")]
  public static extern bool Command_getEnabled(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getEnabledSwigExplicitCommand")]
  public static extern bool Command_getEnabledSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getChecked")]
  public static extern bool Command_getChecked(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getCheckedSwigExplicitCommand")]
  public static extern bool Command_getCheckedSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getType")]
  public static extern int Command_getType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getTypeSwigExplicitCommand")]
  public static extern int Command_getTypeSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getToolTip")]
  public static extern IntPtr Command_getToolTip(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getToolTipSwigExplicitCommand")]
  public static extern IntPtr Command_getToolTipSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_hasSubordinates")]
  public static extern bool Command_hasSubordinates(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_hasSubordinatesSwigExplicitCommand")]
  public static extern bool Command_hasSubordinatesSwigExplicitCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_getLastException")]
  public static extern IntPtr Command_getLastException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_setLastException")]
  public static extern void Command_setLastException(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_Executed")]
  public static extern IntPtr Command_Executed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_notifyCommandExecuted")]
  public static extern void Command_notifyCommandExecuted(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Command")]
  public static extern IntPtr new_Command();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Command_director_connect")]
  public static extern void Command_director_connect(HandleRef jarg1, Command.SwigDelegateCommand_0 delegate0, Command.SwigDelegateCommand_1 delegate1, Command.SwigDelegateCommand_2 delegate2, Command.SwigDelegateCommand_3 delegate3, Command.SwigDelegateCommand_4 delegate4, Command.SwigDelegateCommand_5 delegate5, Command.SwigDelegateCommand_6 delegate6, Command.SwigDelegateCommand_7 delegate7, Command.SwigDelegateCommand_8 delegate8, Command.SwigDelegateCommand_9 delegate9, Command.SwigDelegateCommand_10 delegate10, Command.SwigDelegateCommand_11 delegate11, Command.SwigDelegateCommand_12 delegate12, Command.SwigDelegateCommand_13 delegate13, Command.SwigDelegateCommand_14 delegate14, Command.SwigDelegateCommand_15 delegate15, Command.SwigDelegateCommand_16 delegate16, Command.SwigDelegateCommand_17 delegate17, Command.SwigDelegateCommand_18 delegate18, Command.SwigDelegateCommand_19 delegate19, Command.SwigDelegateCommand_20 delegate20);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_create")]
  public static extern IntPtr CommandManagerEvent_create(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_getErrorMsg")]
  public static extern IntPtr CommandManagerEvent_getErrorMsg(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManagerEvent_dynamic_cast")]
  public static extern IntPtr CommandManagerEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CommandManagerEvent")]
  public static extern void delete_CommandManagerEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_test")]
  public static extern void CommandManager_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CommandManager")]
  public static extern IntPtr new_CommandManager();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CommandManager")]
  public static extern void delete_CommandManager(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_clearAllCommands")]
  public static extern void CommandManager_clearAllCommands(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_executeCommand")]
  public static extern bool CommandManager_executeCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_recordCommand")]
  public static extern void CommandManager_recordCommand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_undoCommand")]
  public static extern bool CommandManager_undoCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_redoCommand")]
  public static extern bool CommandManager_redoCommand(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_canUndo")]
  public static extern bool CommandManager_canUndo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_getUndoCommandName")]
  public static extern IntPtr CommandManager_getUndoCommandName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_canRedo")]
  public static extern bool CommandManager_canRedo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_getRedoCommandName")]
  public static extern IntPtr CommandManager_getRedoCommandName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_getUndoableCommands")]
  public static extern IntPtr CommandManager_getUndoableCommands(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_getRedoableCommands")]
  public static extern IntPtr CommandManager_getRedoableCommands(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_size")]
  public static extern int CommandManager_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_sendNotification")]
  public static extern void CommandManager_sendNotification(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CommandManager_getNotifier")]
  public static extern IntPtr CommandManager_getNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_earthRadius_get")]
  public static extern double earthRadius_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_icosahedronRadius_set")]
  public static extern void icosahedronRadius_set(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_icosahedronRadius_get")]
  public static extern double icosahedronRadius_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PI_get")]
  public static extern double PI_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_kfLatitudeAbsMax_get")]
  public static extern double CoordLatLon_kfLatitudeAbsMax_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_kfLongitudeAbsMax_get")]
  public static extern double CoordLatLon_kfLongitudeAbsMax_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_test")]
  public static extern void CoordLatLon_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CoordLatLon__SWIG_0")]
  public static extern IntPtr new_CoordLatLon__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CoordLatLon__SWIG_1")]
  public static extern IntPtr new_CoordLatLon__SWIG_1(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CoordLatLon__SWIG_2")]
  public static extern IntPtr new_CoordLatLon__SWIG_2(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CoordLatLon")]
  public static extern void delete_CoordLatLon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_lat")]
  public static extern double CoordLatLon_lat(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_setLat")]
  public static extern void CoordLatLon_setLat(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_latInDegrees")]
  public static extern double CoordLatLon_latInDegrees(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_setLatInDegrees")]
  public static extern void CoordLatLon_setLatInDegrees(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_lon")]
  public static extern double CoordLatLon_lon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_setLon")]
  public static extern void CoordLatLon_setLon(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_lonInDegrees")]
  public static extern double CoordLatLon_lonInDegrees(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_setLonInDegrees")]
  public static extern void CoordLatLon_setLonInDegrees(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_set")]
  public static extern void CoordLatLon_set(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_setInDegrees")]
  public static extern void CoordLatLon_setInDegrees(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_randomize")]
  public static extern void CoordLatLon_randomize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_perturb__SWIG_0")]
  public static extern void CoordLatLon_perturb__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_perturb__SWIG_1")]
  public static extern void CoordLatLon_perturb__SWIG_1(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isNorthPole__SWIG_0")]
  public static extern bool CoordLatLon_isNorthPole__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isNorthPole__SWIG_1")]
  public static extern bool CoordLatLon_isNorthPole__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isSouthPole__SWIG_0")]
  public static extern bool CoordLatLon_isSouthPole__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isSouthPole__SWIG_1")]
  public static extern bool CoordLatLon_isSouthPole__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnEquator__SWIG_0")]
  public static extern bool CoordLatLon_isOnEquator__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnEquator__SWIG_1")]
  public static extern bool CoordLatLon_isOnEquator__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnPrimeMeridian__SWIG_0")]
  public static extern bool CoordLatLon_isOnPrimeMeridian__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnPrimeMeridian__SWIG_1")]
  public static extern bool CoordLatLon_isOnPrimeMeridian__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnIntlDateLine__SWIG_0")]
  public static extern bool CoordLatLon_isOnIntlDateLine__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isOnIntlDateLine__SWIG_1")]
  public static extern bool CoordLatLon_isOnIntlDateLine__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_equal__SWIG_0")]
  public static extern bool CoordLatLon_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_equal__SWIG_1")]
  public static extern bool CoordLatLon_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_insideSWNE")]
  public static extern bool CoordLatLon_insideSWNE(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_insideNWSE")]
  public static extern bool CoordLatLon_insideNWSE(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_crossesIntlDateLine")]
  public static extern bool CoordLatLon_crossesIntlDateLine(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_calculateResolutionRadians")]
  public static extern double CoordLatLon_calculateResolutionRadians(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isLatitudeValid")]
  public static extern bool CoordLatLon_isLatitudeValid(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_isLongitudeValid")]
  public static extern bool CoordLatLon_isLongitudeValid(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_northPole")]
  public static extern IntPtr CoordLatLon_northPole();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_southPole")]
  public static extern IntPtr CoordLatLon_southPole();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_distanceToLine")]
  public static extern double CoordLatLon_distanceToLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_sideN")]
  public static extern double CoordLatLon_sideN(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_hexagonCircumradius")]
  public static extern double CoordLatLon_hexagonCircumradius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_hexagonInradius")]
  public static extern double CoordLatLon_hexagonInradius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_pentagonCircumradius")]
  public static extern double CoordLatLon_pentagonCircumradius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CoordLatLon_pentagonInradius")]
  public static extern double CoordLatLon_pentagonInradius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_test")]
  public static extern void PYXCoordPolar_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoordPolar__SWIG_0")]
  public static extern IntPtr new_PYXCoordPolar__SWIG_0(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoordPolar__SWIG_1")]
  public static extern IntPtr new_PYXCoordPolar__SWIG_1(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoordPolar__SWIG_2")]
  public static extern IntPtr new_PYXCoordPolar__SWIG_2();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_radius")]
  public static extern double PYXCoordPolar_radius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_setRadius")]
  public static extern void PYXCoordPolar_setRadius(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_angle")]
  public static extern double PYXCoordPolar_angle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_setAngle")]
  public static extern void PYXCoordPolar_setAngle(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_angleInDegrees")]
  public static extern double PYXCoordPolar_angleInDegrees(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_setAngleInDegrees")]
  public static extern void PYXCoordPolar_setAngleInDegrees(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_equal__SWIG_0")]
  public static extern bool PYXCoordPolar_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordPolar_equal__SWIG_1")]
  public static extern bool PYXCoordPolar_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoordPolar")]
  public static extern void delete_PYXCoordPolar(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXException")]
  public static extern IntPtr new_PYXException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXException")]
  public static extern void delete_PYXException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXException_getLocalizedErrorString")]
  public static extern IntPtr PYXException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXException_getFullErrorString")]
  public static extern IntPtr PYXException_getFullErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXException_isTracing")]
  public static extern bool PYXException_isTracing();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXException_disableTrace")]
  public static extern void PYXException_disableTrace();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXException_enableTrace")]
  public static extern void PYXException_enableTrace();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCommandException")]
  public static extern IntPtr new_PYXCommandException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandException_getLocalizedErrorString")]
  public static extern IntPtr PYXCommandException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCommandException")]
  public static extern void delete_PYXCommandException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCommandExecuteException")]
  public static extern IntPtr new_PYXCommandExecuteException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandExecuteException_getLocalizedErrorString")]
  public static extern IntPtr PYXCommandExecuteException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCommandExecuteException")]
  public static extern void delete_PYXCommandExecuteException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCommandUndoException")]
  public static extern IntPtr new_PYXCommandUndoException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandUndoException_getLocalizedErrorString")]
  public static extern IntPtr PYXCommandUndoException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCommandUndoException")]
  public static extern void delete_PYXCommandUndoException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCommandRedoException")]
  public static extern IntPtr new_PYXCommandRedoException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandRedoException_getLocalizedErrorString")]
  public static extern IntPtr PYXCommandRedoException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCommandRedoException")]
  public static extern void delete_PYXCommandRedoException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHttpException")]
  public static extern IntPtr new_PYXHttpException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHttpException_getLocalizedErrorString")]
  public static extern IntPtr PYXHttpException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHttpException")]
  public static extern void delete_PYXHttpException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXThreadException")]
  public static extern IntPtr new_PYXThreadException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXThreadException_getLocalizedErrorString")]
  public static extern IntPtr PYXThreadException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXThreadException")]
  public static extern void delete_PYXThreadException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXDirException")]
  public static extern IntPtr new_PYXDirException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDirException_getLocalizedErrorString")]
  public static extern IntPtr PYXDirException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXDirException")]
  public static extern void delete_PYXDirException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFileException")]
  public static extern IntPtr new_PYXFileException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFileException_getLocalizedErrorString")]
  public static extern IntPtr PYXFileException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFileException")]
  public static extern void delete_PYXFileException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXLockException")]
  public static extern IntPtr new_PYXLockException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLockException_getLocalizedErrorString")]
  public static extern IntPtr PYXLockException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXLockException")]
  public static extern void delete_PYXLockException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSerializableException")]
  public static extern IntPtr new_PYXSerializableException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSerializableException_getLocalizedErrorString")]
  public static extern IntPtr PYXSerializableException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSerializableException")]
  public static extern void delete_PYXSerializableException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueColumnException")]
  public static extern IntPtr new_PYXValueColumnException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueColumnException_getLocalizedErrorString")]
  public static extern IntPtr PYXValueColumnException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueColumnException")]
  public static extern void delete_PYXValueColumnException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTableException")]
  public static extern IntPtr new_PYXValueTableException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTableException_getLocalizedErrorString")]
  public static extern IntPtr PYXValueTableException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueTableException")]
  public static extern void delete_PYXValueTableException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Checksum")]
  public static extern IntPtr new_Checksum();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Checksum")]
  public static extern void delete_Checksum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ResolverAgent_ResolveFile")]
  public static extern IntPtr ResolverAgent_ResolveFile(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ResolverAgent_OnFileResolved")]
  public static extern void ResolverAgent_OnFileResolved(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ResolverAgent")]
  public static extern IntPtr new_ResolverAgent();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ResolverAgent")]
  public static extern void delete_ResolverAgent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileResolver")]
  public static extern IntPtr new_FileResolver();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_FileResolver")]
  public static extern void delete_FileResolver(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp__WIN32_WINNT_get")]
  public static extern int _WIN32_WINNT_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNode_Name")]
  public static extern IntPtr GdalInfoDataSourceNode_Name(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNode_Desc")]
  public static extern IntPtr GdalInfoDataSourceNode_Desc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GdalInfoDataSourceNode")]
  public static extern IntPtr new_GdalInfoDataSourceNode();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GdalInfoDataSourceNode")]
  public static extern void delete_GdalInfoDataSourceNode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GdalInfo")]
  public static extern IntPtr new_GdalInfo();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GdalInfo")]
  public static extern void delete_GdalInfo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfo_OracleSupportAvailable")]
  public static extern bool GdalInfo_OracleSupportAvailable();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfo_GetRasterDataSources")]
  public static extern void GdalInfo_GetRasterDataSources(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfo_ReleaseRasterDataSourceNodes")]
  public static extern void GdalInfo_ReleaseRasterDataSourceNodes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfo_GenerateVrt")]
  public static extern void GdalInfo_GenerateVrt(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_test")]
  public static extern void GreatCircleArc_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GreatCircleArc")]
  public static extern IntPtr new_GreatCircleArc(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GreatCircleArc")]
  public static extern void delete_GreatCircleArc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_calcDistance__SWIG_0")]
  public static extern double GreatCircleArc_calcDistance__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_calcDistance__SWIG_1")]
  public static extern double GreatCircleArc_calcDistance__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_getPoint1")]
  public static extern IntPtr GreatCircleArc_getPoint1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_getPoint2")]
  public static extern IntPtr GreatCircleArc_getPoint2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_getDistance")]
  public static extern double GreatCircleArc_getDistance(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GreatCircleArc_getPoint")]
  public static extern IntPtr GreatCircleArc_getPoint(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf30Rad_get")]
  public static extern double MathUtils_kf30Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf60Rad_get")]
  public static extern double MathUtils_kf60Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf90Rad_get")]
  public static extern double MathUtils_kf90Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf120Rad_get")]
  public static extern double MathUtils_kf120Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf150Rad_get")]
  public static extern double MathUtils_kf150Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf180Rad_get")]
  public static extern double MathUtils_kf180Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf240Rad_get")]
  public static extern double MathUtils_kf240Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf300Rad_get")]
  public static extern double MathUtils_kf300Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kf360Rad_get")]
  public static extern double MathUtils_kf360Rad_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfSin30_get")]
  public static extern double MathUtils_kfSin30_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfCos30_get")]
  public static extern double MathUtils_kfCos30_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfSin60_get")]
  public static extern double MathUtils_kfSin60_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfCos60_get")]
  public static extern double MathUtils_kfCos60_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfTan60_get")]
  public static extern double MathUtils_kfTan60_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfDefaultFloatPrecision_get")]
  public static extern float MathUtils_kfDefaultFloatPrecision_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfDefaultDoublePrecision_get")]
  public static extern double MathUtils_kfDefaultDoublePrecision_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfPI_get")]
  public static extern double MathUtils_kfPI_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfDegreesToRadians_get")]
  public static extern double MathUtils_kfDegreesToRadians_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfPHI_get")]
  public static extern double MathUtils_kfPHI_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_kfSqrt3_get")]
  public static extern double MathUtils_kfSqrt3_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_equal__SWIG_0")]
  public static extern bool MathUtils_equal__SWIG_0(float jarg1, float jarg2, float jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_equal__SWIG_1")]
  public static extern bool MathUtils_equal__SWIG_1(float jarg1, float jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_equal__SWIG_2")]
  public static extern bool MathUtils_equal__SWIG_2(double jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_equal__SWIG_3")]
  public static extern bool MathUtils_equal__SWIG_3(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_radiansToDegrees")]
  public static extern double MathUtils_radiansToDegrees(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_degreesToRadians")]
  public static extern double MathUtils_degreesToRadians(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_MathUtils_hav")]
  public static extern double MathUtils_hav(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_MathUtils")]
  public static extern IntPtr new_MathUtils();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_MathUtils")]
  public static extern void delete_MathUtils(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_NotifierEvent")]
  public static extern void delete_NotifierEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_NotifierEvent")]
  public static extern IntPtr new_NotifierEvent();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Observer_kstrDescription_get")]
  public static extern IntPtr Observer_kstrDescription_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Observer")]
  public static extern void delete_Observer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Observer_getObserverDescription")]
  public static extern IntPtr Observer_getObserverDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Observer_getObserverDescriptionSwigExplicitObserver")]
  public static extern IntPtr Observer_getObserverDescriptionSwigExplicitObserver(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Observer_updateObserverImpl")]
  public static extern void Observer_updateObserverImpl(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Observer")]
  public static extern IntPtr new_Observer();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Observer_director_connect")]
  public static extern void Observer_director_connect(HandleRef jarg1, Observer.SwigDelegateObserver_0 delegate0, Observer.SwigDelegateObserver_1 delegate1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_test")]
  public static extern void Notifier_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Notifier__SWIG_0")]
  public static extern IntPtr new_Notifier__SWIG_0(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Notifier__SWIG_1")]
  public static extern IntPtr new_Notifier__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Notifier")]
  public static extern void delete_Notifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_Notifier__SWIG_2")]
  public static extern IntPtr new_Notifier__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_attach")]
  public static extern void Notifier_attach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_detach")]
  public static extern void Notifier_detach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_setNotifierName")]
  public static extern void Notifier_setNotifierName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_notify")]
  public static extern void Notifier_notify(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_getObserverCount")]
  public static extern int Notifier_getObserverCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Notifier_getNotifierDescription")]
  public static extern IntPtr Notifier_getNotifierDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UnitTests_NotifierBase")]
  public static extern IntPtr new_UnitTests_NotifierBase();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UnitTests_NotifierBase")]
  public static extern void delete_UnitTests_NotifierBase(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerived_getNotifier")]
  public static extern IntPtr UnitTests_NotifierDerived_getNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerived_attach")]
  public static extern void UnitTests_NotifierDerived_attach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerived_detach")]
  public static extern void UnitTests_NotifierDerived_detach(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerived_getObserverCount")]
  public static extern int UnitTests_NotifierDerived_getObserverCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerived_notify")]
  public static extern void UnitTests_NotifierDerived_notify(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UnitTests_NotifierDerived")]
  public static extern IntPtr new_UnitTests_NotifierDerived();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UnitTests_NotifierDerived")]
  public static extern void delete_UnitTests_NotifierDerived(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_NOERROR_get")]
  public static extern int PYXCOM_NOERROR_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data1_set")]
  public static extern void GUID_Data1_set(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data1_get")]
  public static extern uint GUID_Data1_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data2_set")]
  public static extern void GUID_Data2_set(HandleRef jarg1, ushort jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data2_get")]
  public static extern ushort GUID_Data2_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data3_set")]
  public static extern void GUID_Data3_set(HandleRef jarg1, ushort jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data3_get")]
  public static extern ushort GUID_Data3_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data4_set")]
  public static extern void GUID_Data4_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_Data4_get")]
  public static extern IntPtr GUID_Data4_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_ParseString")]
  public static extern void GUID_ParseString(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GUID")]
  public static extern void delete_GUID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InlineIsEqualGUID")]
  public static extern int InlineIsEqualGUID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IsEqualGUID")]
  public static extern int IsEqualGUID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GUID_NULL_get")]
  public static extern IntPtr GUID_NULL_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IUnknown_iid_get")]
  public static extern IntPtr PYXCOM_IUnknown_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IUnknown_AddRef")]
  public static extern uint PYXCOM_IUnknown_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IUnknown_Release")]
  public static extern uint PYXCOM_IUnknown_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IClassFactory_iid_get")]
  public static extern IntPtr PYXCOM_IClassFactory_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IClassFactory_CreateInstance")]
  public static extern int PYXCOM_IClassFactory_CreateInstance(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IClassFactory_LockServer")]
  public static extern int PYXCOM_IClassFactory_LockServer(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCOM_IClassFactory")]
  public static extern void delete_PYXCOM_IClassFactory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IClassInfo_iid_get")]
  public static extern IntPtr IClassInfo_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IClassInfo_getClass")]
  public static extern int IClassInfo_getClass(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IClassInfo_getNumInterfaces")]
  public static extern int IClassInfo_getNumInterfaces(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IClassInfo_getInterfaces")]
  public static extern int IClassInfo_getInterfaces(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IClassInfo")]
  public static extern void delete_IClassInfo(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObject_iid_get")]
  public static extern IntPtr IEnumClassObject_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObject_Next")]
  public static extern int IEnumClassObject_Next(HandleRef jarg1, uint jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObject_Skip")]
  public static extern int IEnumClassObject_Skip(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObject_Reset")]
  public static extern int IEnumClassObject_Reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObject_Clone")]
  public static extern int IEnumClassObject_Clone(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IEnumClassObject")]
  public static extern void delete_IEnumClassObject(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_7")]
  public static extern void intrusive_ptr_add_ref__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_7")]
  public static extern void intrusive_ptr_release__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMInitialize")]
  public static extern int PYXCOMInitialize();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMUninitialize")]
  public static extern int PYXCOMUninitialize();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMRegister")]
  public static extern int PYXCOMRegister(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMCreateGuid")]
  public static extern int PYXCOMCreateGuid(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMGetClassObject")]
  public static extern int PYXCOMGetClassObject(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMCreateInstance")]
  public static extern int PYXCOMCreateInstance(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMGetClassIDs")]
  public static extern int PYXCOMGetClassIDs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOMImplementsInterface")]
  public static extern bool PYXCOMImplementsInterface(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_guidToStr")]
  public static extern IntPtr guidToStr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_strToGuid")]
  public static extern IntPtr strToGuid(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DI_get__SWIG_0")]
  public static extern IntPtr DI_get__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DI_get__SWIG_1")]
  public static extern IntPtr DI_get__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DI_getAll")]
  public static extern IntPtr DI_getAll(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DI_set__SWIG_0")]
  public static extern void DI_set__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DI_set__SWIG_1")]
  public static extern void DI_set__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_DI")]
  public static extern IntPtr new_DI();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_DI")]
  public static extern void delete_DI(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRGB__SWIG_0")]
  public static extern IntPtr new_PYXRGB__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRGB__SWIG_1")]
  public static extern IntPtr new_PYXRGB__SWIG_1(int jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRGB__SWIG_2")]
  public static extern IntPtr new_PYXRGB__SWIG_2(int jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_red")]
  public static extern int PYXRGB_red(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_redAsDouble")]
  public static extern double PYXRGB_redAsDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setRed")]
  public static extern void PYXRGB_setRed(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setRedAsDouble")]
  public static extern void PYXRGB_setRedAsDouble(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_green")]
  public static extern int PYXRGB_green(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_greenAsDouble")]
  public static extern double PYXRGB_greenAsDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setGreen")]
  public static extern void PYXRGB_setGreen(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setGreenAsDouble")]
  public static extern void PYXRGB_setGreenAsDouble(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_blue")]
  public static extern int PYXRGB_blue(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_blueAsDouble")]
  public static extern double PYXRGB_blueAsDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setBlue")]
  public static extern void PYXRGB_setBlue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setBlueAsDouble")]
  public static extern void PYXRGB_setBlueAsDouble(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_alpha")]
  public static extern int PYXRGB_alpha(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_alphaAsDouble")]
  public static extern double PYXRGB_alphaAsDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setAlpha")]
  public static extern void PYXRGB_setAlpha(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setAlphaAsDouble")]
  public static extern void PYXRGB_setAlphaAsDouble(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_invertColor")]
  public static extern void PYXRGB_invertColor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_reset")]
  public static extern void PYXRGB_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_set__SWIG_0")]
  public static extern void PYXRGB_set__SWIG_0(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_set__SWIG_1")]
  public static extern void PYXRGB_set__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setAsDouble__SWIG_0")]
  public static extern void PYXRGB_setAsDouble__SWIG_0(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRGB_setAsDouble__SWIG_1")]
  public static extern void PYXRGB_setAsDouble__SWIG_1(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRGB")]
  public static extern void delete_PYXRGB(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_knEarthRadius_get")]
  public static extern int SphereMath_knEarthRadius_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_knNumericEpsilon_get")]
  public static extern double SphereMath_knNumericEpsilon_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_knDotNumericEpsilon_get")]
  public static extern double SphereMath_knDotNumericEpsilon_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_test")]
  public static extern void SphereMath_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_xyzll")]
  public static extern IntPtr SphereMath_xyzll(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_llxyz__SWIG_0")]
  public static extern void SphereMath_llxyz__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_llxyz__SWIG_1")]
  public static extern IntPtr SphereMath_llxyz__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_calcPolygonArea__SWIG_0")]
  public static extern double SphereMath_calcPolygonArea__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_calcPolygonArea__SWIG_1")]
  public static extern double SphereMath_calcPolygonArea__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_distanceBetween__SWIG_0")]
  public static extern double SphereMath_distanceBetween__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_distanceBetween__SWIG_1")]
  public static extern double SphereMath_distanceBetween__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SphereMath_headingInDegrees")]
  public static extern double SphereMath_headingInDegrees(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_SphereMath")]
  public static extern IntPtr new_SphereMath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_SphereMath")]
  public static extern void delete_SphereMath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_test")]
  public static extern void StringUtils_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_trim")]
  public static extern IntPtr StringUtils_trim(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_trimRight")]
  public static extern IntPtr StringUtils_trimRight(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_trimLeft")]
  public static extern IntPtr StringUtils_trimLeft(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_format__SWIG_0")]
  public static extern IntPtr StringUtils_format__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_format__SWIG_1")]
  public static extern IntPtr StringUtils_format__SWIG_1(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_format__SWIG_2")]
  public static extern IntPtr StringUtils_format__SWIG_2(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_format__SWIG_3")]
  public static extern IntPtr StringUtils_format__SWIG_3(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_format__SWIG_4")]
  public static extern IntPtr StringUtils_format__SWIG_4(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_countDecimalPlaces")]
  public static extern int StringUtils_countDecimalPlaces(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_getDecimalString")]
  public static extern IntPtr StringUtils_getDecimalString(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_now")]
  public static extern IntPtr StringUtils_now();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_ascTime")]
  public static extern IntPtr StringUtils_ascTime(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_toColour")]
  public static extern int StringUtils_toColour(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_isNumeric")]
  public static extern bool StringUtils_isNumeric(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_tryParseFormattedNumber")]
  public static extern bool StringUtils_tryParseFormattedNumber(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_isNumericOctal")]
  public static extern bool StringUtils_isNumericOctal(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_isNumericHexadecimal")]
  public static extern bool StringUtils_isNumericHexadecimal(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_procRefToStr__SWIG_0")]
  public static extern IntPtr StringUtils_procRefToStr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_procRefToStr__SWIG_1")]
  public static extern IntPtr StringUtils_procRefToStr__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_strToPYXValue__SWIG_0")]
  public static extern void StringUtils_strToPYXValue__SWIG_0(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringUtils_strToPYXValue__SWIG_1")]
  public static extern IntPtr StringUtils_strToPYXValue__SWIG_1(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_StringUtils")]
  public static extern IntPtr new_StringUtils();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_StringUtils")]
  public static extern void delete_StringUtils(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_doubleToString__SWIG_0")]
  public static extern IntPtr doubleToString__SWIG_0(double jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_doubleToString__SWIG_1")]
  public static extern IntPtr doubleToString__SWIG_1(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intToString")]
  public static extern IntPtr intToString(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_TesterBase")]
  public static extern void delete_TesterBase(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TesterBase_test")]
  public static extern void TesterBase_test(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TesterBase_getTypeName")]
  public static extern IntPtr TesterBase_getTypeName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TesterBase_getTestDataPath")]
  public static extern IntPtr TesterBase_getTestDataPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TesterBase_getForceForeground")]
  public static extern bool TesterBase_getForceForeground(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_kstrUninitialized_get")]
  public static extern IntPtr TestFrame_kstrUninitialized_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_getInstance")]
  public static extern IntPtr TestFrame_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_performTest__SWIG_0")]
  public static extern bool TestFrame_performTest__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_performTest__SWIG_1")]
  public static extern bool TestFrame_performTest__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_addTest")]
  public static extern void TestFrame_addTest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_addTestAtFront")]
  public static extern void TestFrame_addTestAtFront(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_testAssert")]
  public static extern bool TestFrame_testAssert(HandleRef jarg1, bool jarg2, string jarg3, int jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_getTests")]
  public static extern IntPtr TestFrame_getTests(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_getFailedTests")]
  public static extern IntPtr TestFrame_getFailedTests(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_test")]
  public static extern bool TestFrame_test(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TestFrame_getTestLog")]
  public static extern IntPtr TestFrame_getTestLog(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrErrorPrefix_get")]
  public static extern IntPtr Trace_kstrErrorPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrTimePrefix_get")]
  public static extern IntPtr Trace_kstrTimePrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrInfoPrefix_get")]
  public static extern IntPtr Trace_kstrInfoPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrTestPrefix_get")]
  public static extern IntPtr Trace_kstrTestPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrDebugPrefix_get")]
  public static extern IntPtr Trace_kstrDebugPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrMemoryPrefix_get")]
  public static extern IntPtr Trace_kstrMemoryPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrNotifyPrefix_get")]
  public static extern IntPtr Trace_kstrNotifyPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrThreadPrefix_get")]
  public static extern IntPtr Trace_kstrThreadPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrUIDebugPrefix_get")]
  public static extern IntPtr Trace_kstrUIDebugPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrUIPrefix_get")]
  public static extern IntPtr Trace_kstrUIPrefix_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrScope_get")]
  public static extern IntPtr Trace_kstrScope_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrLevel_get")]
  public static extern IntPtr Trace_kstrLevel_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_kstrLevelDesc_get")]
  public static extern IntPtr Trace_kstrLevelDesc_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_getInstance")]
  public static extern IntPtr Trace_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_isInitialized")]
  public static extern bool Trace_isInitialized();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_setLevels")]
  public static extern void Trace_setLevels(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_getLevels")]
  public static extern uint Trace_getLevels(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_setCallback")]
  public static extern void Trace_setCallback(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_traceLevel")]
  public static extern void Trace_traceLevel(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_traceOn")]
  public static extern void Trace_traceOn(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_traceOff")]
  public static extern void Trace_traceOff(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_message")]
  public static extern void Trace_message(int jarg1, IntPtr jarg2, int jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_getTimestampString")]
  public static extern IntPtr Trace_getTimestampString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_flush")]
  public static extern void Trace_flush();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_destroy")]
  public static extern void Trace_destroy();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_enabled")]
  public static extern bool Trace_enabled(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_debug")]
  public static extern void Trace_debug(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_error")]
  public static extern void Trace_error(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_info")]
  public static extern void Trace_info(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_memory")]
  public static extern void Trace_memory(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_notify")]
  public static extern void Trace_notify(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_thread")]
  public static extern void Trace_thread(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_time")]
  public static extern void Trace_time(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_test")]
  public static extern void Trace_test(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_ui")]
  public static extern void Trace_ui(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_uiDebug")]
  public static extern void Trace_uiDebug(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Trace_setTraceCallback")]
  public static extern void Trace_setTraceCallback(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getMax")]
  public static extern double PYXValue_getMax(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getMin")]
  public static extern double PYXValue_getMin(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isSigned")]
  public static extern bool PYXValue_isSigned(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUnsigned")]
  public static extern bool PYXValue_isUnsigned(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_test")]
  public static extern void PYXValue_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_create__SWIG_0")]
  public static extern IntPtr PYXValue_create__SWIG_0(int jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_create__SWIG_1")]
  public static extern IntPtr PYXValue_create__SWIG_1(int jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getTypeAsString")]
  public static extern IntPtr PYXValue_getTypeAsString(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_0")]
  public static extern IntPtr new_PYXValue__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_1")]
  public static extern IntPtr new_PYXValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_2")]
  public static extern IntPtr new_PYXValue__SWIG_2(bool jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_3")]
  public static extern IntPtr new_PYXValue__SWIG_3(char jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_4")]
  public static extern IntPtr new_PYXValue__SWIG_4(sbyte jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_5")]
  public static extern IntPtr new_PYXValue__SWIG_5(byte jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_6")]
  public static extern IntPtr new_PYXValue__SWIG_6(short jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_7")]
  public static extern IntPtr new_PYXValue__SWIG_7(ushort jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_8")]
  public static extern IntPtr new_PYXValue__SWIG_8(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_9")]
  public static extern IntPtr new_PYXValue__SWIG_9(uint jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_10")]
  public static extern IntPtr new_PYXValue__SWIG_10(float jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_11")]
  public static extern IntPtr new_PYXValue__SWIG_11(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_12")]
  public static extern IntPtr new_PYXValue__SWIG_12(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_13")]
  public static extern IntPtr new_PYXValue__SWIG_13(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_14")]
  public static extern IntPtr new_PYXValue__SWIG_14(string jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_15")]
  public static extern IntPtr new_PYXValue__SWIG_15(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_16")]
  public static extern IntPtr new_PYXValue__SWIG_16(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_17")]
  public static extern IntPtr new_PYXValue__SWIG_17(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_18")]
  public static extern IntPtr new_PYXValue__SWIG_18(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_19")]
  public static extern IntPtr new_PYXValue__SWIG_19(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_20")]
  public static extern IntPtr new_PYXValue__SWIG_20(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_21")]
  public static extern IntPtr new_PYXValue__SWIG_21(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_22")]
  public static extern IntPtr new_PYXValue__SWIG_22(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_23")]
  public static extern IntPtr new_PYXValue__SWIG_23(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_24")]
  public static extern IntPtr new_PYXValue__SWIG_24(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_25")]
  public static extern IntPtr new_PYXValue__SWIG_25(string jarg1, int jarg2, char jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_26")]
  public static extern IntPtr new_PYXValue__SWIG_26(HandleRef jarg1, int jarg2, sbyte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_27")]
  public static extern IntPtr new_PYXValue__SWIG_27(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_28")]
  public static extern IntPtr new_PYXValue__SWIG_28(HandleRef jarg1, int jarg2, short jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_29")]
  public static extern IntPtr new_PYXValue__SWIG_29(HandleRef jarg1, int jarg2, ushort jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_30")]
  public static extern IntPtr new_PYXValue__SWIG_30(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_31")]
  public static extern IntPtr new_PYXValue__SWIG_31(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_32")]
  public static extern IntPtr new_PYXValue__SWIG_32(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_33")]
  public static extern IntPtr new_PYXValue__SWIG_33(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValue__SWIG_34")]
  public static extern IntPtr new_PYXValue__SWIG_34(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValue")]
  public static extern void delete_PYXValue(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_swap")]
  public static extern void PYXValue_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getType__SWIG_0")]
  public static extern int PYXValue_getType__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setType")]
  public static extern void PYXValue_setType(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getString__SWIG_0")]
  public static extern string PYXValue_getString__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getType__SWIG_1")]
  public static extern int PYXValue_getType__SWIG_1(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isNumeric__SWIG_0")]
  public static extern bool PYXValue_isNumeric__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_compare__SWIG_0")]
  public static extern int PYXValue_compare__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_compare__SWIG_1")]
  public static extern int PYXValue_compare__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isNumeric__SWIG_1")]
  public static extern bool PYXValue_isNumeric__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isNull__SWIG_0")]
  public static extern bool PYXValue_isNull__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isBool")]
  public static extern bool PYXValue_isBool(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isChar")]
  public static extern bool PYXValue_isChar(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isInt8")]
  public static extern bool PYXValue_isInt8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUInt8")]
  public static extern bool PYXValue_isUInt8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isInt16")]
  public static extern bool PYXValue_isInt16(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUInt16")]
  public static extern bool PYXValue_isUInt16(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isInt32")]
  public static extern bool PYXValue_isInt32(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUInt32")]
  public static extern bool PYXValue_isUInt32(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isFloat")]
  public static extern bool PYXValue_isFloat(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isDouble")]
  public static extern bool PYXValue_isDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isString")]
  public static extern bool PYXValue_isString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isArray")]
  public static extern bool PYXValue_isArray(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isSChar")]
  public static extern bool PYXValue_isSChar(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUChar")]
  public static extern bool PYXValue_isUChar(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isShort")]
  public static extern bool PYXValue_isShort(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUShort")]
  public static extern bool PYXValue_isUShort(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isInt")]
  public static extern bool PYXValue_isInt(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isUInt")]
  public static extern bool PYXValue_isUInt(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isLong")]
  public static extern bool PYXValue_isLong(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isULong")]
  public static extern bool PYXValue_isULong(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getBool__SWIG_0")]
  public static extern bool PYXValue_getBool__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getChar__SWIG_0")]
  public static extern char PYXValue_getChar__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt8__SWIG_0")]
  public static extern sbyte PYXValue_getInt8__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt8__SWIG_0")]
  public static extern byte PYXValue_getUInt8__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt16__SWIG_0")]
  public static extern short PYXValue_getInt16__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt16__SWIG_0")]
  public static extern ushort PYXValue_getUInt16__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt32__SWIG_0")]
  public static extern int PYXValue_getInt32__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt32__SWIG_0")]
  public static extern uint PYXValue_getUInt32__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getFloat__SWIG_0")]
  public static extern float PYXValue_getFloat__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getDouble__SWIG_0")]
  public static extern double PYXValue_getDouble__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getString__SWIG_1")]
  public static extern IntPtr PYXValue_getString__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getSChar__SWIG_0")]
  public static extern sbyte PYXValue_getSChar__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUChar__SWIG_0")]
  public static extern byte PYXValue_getUChar__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getShort__SWIG_0")]
  public static extern short PYXValue_getShort__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUShort__SWIG_0")]
  public static extern ushort PYXValue_getUShort__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt__SWIG_0")]
  public static extern int PYXValue_getInt__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt__SWIG_0")]
  public static extern uint PYXValue_getUInt__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getLong__SWIG_0")]
  public static extern int PYXValue_getLong__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getULong__SWIG_0")]
  public static extern uint PYXValue_getULong__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_0")]
  public static extern void PYXValue_get__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_1")]
  public static extern void PYXValue_get__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_2")]
  public static extern void PYXValue_get__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_3")]
  public static extern void PYXValue_get__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_4")]
  public static extern void PYXValue_get__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_5")]
  public static extern void PYXValue_get__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_6")]
  public static extern void PYXValue_get__SWIG_6(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_7")]
  public static extern void PYXValue_get__SWIG_7(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_8")]
  public static extern void PYXValue_get__SWIG_8(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_9")]
  public static extern void PYXValue_get__SWIG_9(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_get__SWIG_10")]
  public static extern void PYXValue_get__SWIG_10(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setBool__SWIG_0")]
  public static extern void PYXValue_setBool__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setChar__SWIG_0")]
  public static extern void PYXValue_setChar__SWIG_0(HandleRef jarg1, char jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt8__SWIG_0")]
  public static extern void PYXValue_setInt8__SWIG_0(HandleRef jarg1, sbyte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt8__SWIG_0")]
  public static extern void PYXValue_setUInt8__SWIG_0(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt16__SWIG_0")]
  public static extern void PYXValue_setInt16__SWIG_0(HandleRef jarg1, short jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt16__SWIG_0")]
  public static extern void PYXValue_setUInt16__SWIG_0(HandleRef jarg1, ushort jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt32__SWIG_0")]
  public static extern void PYXValue_setInt32__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt32__SWIG_0")]
  public static extern void PYXValue_setUInt32__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setFloat__SWIG_0")]
  public static extern void PYXValue_setFloat__SWIG_0(HandleRef jarg1, float jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setDouble__SWIG_0")]
  public static extern void PYXValue_setDouble__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setString__SWIG_0")]
  public static extern void PYXValue_setString__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setSChar__SWIG_0")]
  public static extern void PYXValue_setSChar__SWIG_0(HandleRef jarg1, sbyte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUChar__SWIG_0")]
  public static extern void PYXValue_setUChar__SWIG_0(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setShort__SWIG_0")]
  public static extern void PYXValue_setShort__SWIG_0(HandleRef jarg1, short jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUShort__SWIG_0")]
  public static extern void PYXValue_setUShort__SWIG_0(HandleRef jarg1, ushort jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt__SWIG_0")]
  public static extern void PYXValue_setInt__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt__SWIG_0")]
  public static extern void PYXValue_setUInt__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setLong__SWIG_0")]
  public static extern void PYXValue_setLong__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setULong__SWIG_0")]
  public static extern void PYXValue_setULong__SWIG_0(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_0")]
  public static extern void PYXValue_set__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_1")]
  public static extern void PYXValue_set__SWIG_1(HandleRef jarg1, char jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_2")]
  public static extern void PYXValue_set__SWIG_2(HandleRef jarg1, sbyte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_3")]
  public static extern void PYXValue_set__SWIG_3(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_4")]
  public static extern void PYXValue_set__SWIG_4(HandleRef jarg1, short jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_5")]
  public static extern void PYXValue_set__SWIG_5(HandleRef jarg1, ushort jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_6")]
  public static extern void PYXValue_set__SWIG_6(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_7")]
  public static extern void PYXValue_set__SWIG_7(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_8")]
  public static extern void PYXValue_set__SWIG_8(HandleRef jarg1, float jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_9")]
  public static extern void PYXValue_set__SWIG_9(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_10")]
  public static extern void PYXValue_set__SWIG_10(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getArrayType")]
  public static extern int PYXValue_getArrayType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getArraySize")]
  public static extern int PYXValue_getArraySize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isArrayNullable")]
  public static extern bool PYXValue_isArrayNullable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_isNull__SWIG_1")]
  public static extern bool PYXValue_isNull__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getValue")]
  public static extern IntPtr PYXValue_getValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getNullValue")]
  public static extern IntPtr PYXValue_getNullValue(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getBool__SWIG_1")]
  public static extern bool PYXValue_getBool__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getChar__SWIG_1")]
  public static extern char PYXValue_getChar__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt8__SWIG_1")]
  public static extern sbyte PYXValue_getInt8__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt8__SWIG_1")]
  public static extern byte PYXValue_getUInt8__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt16__SWIG_1")]
  public static extern short PYXValue_getInt16__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt16__SWIG_1")]
  public static extern ushort PYXValue_getUInt16__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt32__SWIG_1")]
  public static extern int PYXValue_getInt32__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt32__SWIG_1")]
  public static extern uint PYXValue_getUInt32__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getFloat__SWIG_1")]
  public static extern float PYXValue_getFloat__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getDouble__SWIG_1")]
  public static extern double PYXValue_getDouble__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getString__SWIG_2")]
  public static extern IntPtr PYXValue_getString__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getSChar__SWIG_1")]
  public static extern sbyte PYXValue_getSChar__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUChar__SWIG_1")]
  public static extern byte PYXValue_getUChar__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getShort__SWIG_1")]
  public static extern short PYXValue_getShort__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUShort__SWIG_1")]
  public static extern ushort PYXValue_getUShort__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt__SWIG_1")]
  public static extern int PYXValue_getInt__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt__SWIG_1")]
  public static extern uint PYXValue_getUInt__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getLong__SWIG_1")]
  public static extern int PYXValue_getLong__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getULong__SWIG_1")]
  public static extern uint PYXValue_getULong__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setBool__SWIG_1")]
  public static extern void PYXValue_setBool__SWIG_1(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setChar__SWIG_1")]
  public static extern void PYXValue_setChar__SWIG_1(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt8__SWIG_1")]
  public static extern void PYXValue_setInt8__SWIG_1(HandleRef jarg1, int jarg2, sbyte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt8__SWIG_1")]
  public static extern void PYXValue_setUInt8__SWIG_1(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt16__SWIG_1")]
  public static extern void PYXValue_setInt16__SWIG_1(HandleRef jarg1, int jarg2, short jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt16__SWIG_1")]
  public static extern void PYXValue_setUInt16__SWIG_1(HandleRef jarg1, int jarg2, ushort jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt32__SWIG_1")]
  public static extern void PYXValue_setInt32__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt32__SWIG_1")]
  public static extern void PYXValue_setUInt32__SWIG_1(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setFloat__SWIG_1")]
  public static extern void PYXValue_setFloat__SWIG_1(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setDouble__SWIG_1")]
  public static extern void PYXValue_setDouble__SWIG_1(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setString__SWIG_1")]
  public static extern void PYXValue_setString__SWIG_1(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setSChar__SWIG_1")]
  public static extern void PYXValue_setSChar__SWIG_1(HandleRef jarg1, int jarg2, sbyte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUChar__SWIG_1")]
  public static extern void PYXValue_setUChar__SWIG_1(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setShort__SWIG_1")]
  public static extern void PYXValue_setShort__SWIG_1(HandleRef jarg1, int jarg2, short jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUShort__SWIG_1")]
  public static extern void PYXValue_setUShort__SWIG_1(HandleRef jarg1, int jarg2, ushort jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setInt__SWIG_1")]
  public static extern void PYXValue_setInt__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setUInt__SWIG_1")]
  public static extern void PYXValue_setUInt__SWIG_1(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setLong__SWIG_1")]
  public static extern void PYXValue_setLong__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_setULong__SWIG_1")]
  public static extern void PYXValue_setULong__SWIG_1(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_11")]
  public static extern void PYXValue_set__SWIG_11(HandleRef jarg1, int jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_12")]
  public static extern void PYXValue_set__SWIG_12(HandleRef jarg1, int jarg2, char jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_13")]
  public static extern void PYXValue_set__SWIG_13(HandleRef jarg1, int jarg2, sbyte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_14")]
  public static extern void PYXValue_set__SWIG_14(HandleRef jarg1, int jarg2, byte jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_15")]
  public static extern void PYXValue_set__SWIG_15(HandleRef jarg1, int jarg2, short jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_16")]
  public static extern void PYXValue_set__SWIG_16(HandleRef jarg1, int jarg2, ushort jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_17")]
  public static extern void PYXValue_set__SWIG_17(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_18")]
  public static extern void PYXValue_set__SWIG_18(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_19")]
  public static extern void PYXValue_set__SWIG_19(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_20")]
  public static extern void PYXValue_set__SWIG_20(HandleRef jarg1, int jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_set__SWIG_21")]
  public static extern void PYXValue_set__SWIG_21(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getPtr__SWIG_0")]
  public static extern IntPtr PYXValue_getPtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getBoolPtr__SWIG_0")]
  public static extern IntPtr PYXValue_getBoolPtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getCharPtr__SWIG_0")]
  public static extern string PYXValue_getCharPtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt8Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getInt8Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt8Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getUInt8Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt16Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getInt16Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt16Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getUInt16Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getInt32Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getInt32Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getUInt32Ptr__SWIG_0")]
  public static extern IntPtr PYXValue_getUInt32Ptr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getFloatPtr__SWIG_0")]
  public static extern IntPtr PYXValue_getFloatPtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getDoublePtr__SWIG_0")]
  public static extern IntPtr PYXValue_getDoublePtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_getStringPtr__SWIG_0")]
  public static extern IntPtr PYXValue_getStringPtr__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValue_cast")]
  public static extern IntPtr PYXValue_cast(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_swap")]
  public static extern void swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_test")]
  public static extern void PYXValueMath_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_zero")]
  public static extern void PYXValueMath_zero(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_assignInto")]
  public static extern void PYXValueMath_assignInto(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_addInto__SWIG_0")]
  public static extern void PYXValueMath_addInto__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_addInto__SWIG_1")]
  public static extern void PYXValueMath_addInto__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_subtractFrom__SWIG_0")]
  public static extern void PYXValueMath_subtractFrom__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_subtractFrom__SWIG_1")]
  public static extern void PYXValueMath_subtractFrom__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_divideBy__SWIG_0")]
  public static extern void PYXValueMath_divideBy__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_divideBy__SWIG_1")]
  public static extern void PYXValueMath_divideBy__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_multiplyBy__SWIG_0")]
  public static extern void PYXValueMath_multiplyBy__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueMath_multiplyBy__SWIG_1")]
  public static extern void PYXValueMath_multiplyBy__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_applyXsltTransform")]
  public static extern IntPtr CSharpFunctionProvider_applyXsltTransform(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_applyXsltTransformSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_applyXsltTransformSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_doesXPathMatch")]
  public static extern bool CSharpFunctionProvider_doesXPathMatch(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_doesXPathMatchSwigExplicitCSharpFunctionProvider")]
  public static extern bool CSharpFunctionProvider_doesXPathMatchSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_isWellFormedURI")]
  public static extern bool CSharpFunctionProvider_isWellFormedURI(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_isWellFormedURISwigExplicitCSharpFunctionProvider")]
  public static extern bool CSharpFunctionProvider_isWellFormedURISwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_setDefaultValueForUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_setDefaultValueForUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_setDefaultValueForUrlQueryParameterSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_setDefaultValueForUrlQueryParameterSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_overwriteUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_overwriteUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_overwriteUrlQueryParameterSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_overwriteUrlQueryParameterSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_removeUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_removeUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_removeUrlQueryParameterSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_removeUrlQueryParameterSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getUrlQueryParameter")]
  public static extern IntPtr CSharpFunctionProvider_getUrlQueryParameter(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getUrlQueryParameterSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getUrlQueryParameterSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getUrlHost")]
  public static extern IntPtr CSharpFunctionProvider_getUrlHost(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getUrlHostSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getUrlHostSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_XMLSerialize")]
  public static extern IntPtr CSharpFunctionProvider_XMLSerialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_XMLSerializeSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_XMLSerializeSwigExplicitCSharpFunctionProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_XMLDeserialize")]
  public static extern bool CSharpFunctionProvider_XMLDeserialize(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_XMLDeserializeSwigExplicitCSharpFunctionProvider")]
  public static extern bool CSharpFunctionProvider_XMLDeserializeSwigExplicitCSharpFunctionProvider(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getSerializedManifest")]
  public static extern IntPtr CSharpFunctionProvider_getSerializedManifest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getSerializedManifestSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getSerializedManifestSwigExplicitCSharpFunctionProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getSerializedManifestForFile")]
  public static extern IntPtr CSharpFunctionProvider_getSerializedManifestForFile(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getSerializedManifestForFileSwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getSerializedManifestForFileSwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getIdentity")]
  public static extern IntPtr CSharpFunctionProvider_getIdentity(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getIdentitySwigExplicitCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getIdentitySwigExplicitCSharpFunctionProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_release")]
  public static extern int CSharpFunctionProvider_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_releaseSwigExplicitCSharpFunctionProvider")]
  public static extern int CSharpFunctionProvider_releaseSwigExplicitCSharpFunctionProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_addRef")]
  public static extern int CSharpFunctionProvider_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_addRefSwigExplicitCSharpFunctionProvider")]
  public static extern int CSharpFunctionProvider_addRefSwigExplicitCSharpFunctionProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CSharpFunctionProvider")]
  public static extern void delete_CSharpFunctionProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_getCSharpFunctionProvider")]
  public static extern IntPtr CSharpFunctionProvider_getCSharpFunctionProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_setCSharpFunctionProvider")]
  public static extern void CSharpFunctionProvider_setCSharpFunctionProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpFunctionProvider")]
  public static extern IntPtr new_CSharpFunctionProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpFunctionProvider_director_connect")]
  public static extern void CSharpFunctionProvider_director_connect(HandleRef jarg1, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_0 delegate0, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_1 delegate1, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_2 delegate2, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_3 delegate3, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_4 delegate4, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_5 delegate5, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_6 delegate6, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_7 delegate7, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_8 delegate8, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_9 delegate9, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_10 delegate10, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_11 delegate11, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_12 delegate12, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_13 delegate13, CSharpFunctionProvider.SwigDelegateCSharpFunctionProvider_14 delegate14);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_createDocument")]
  public static extern int CSharpXMLDocProvider_createDocument(HandleRef jarg1, IntPtr jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_createDocumentSwigExplicitCSharpXMLDocProvider")]
  public static extern int CSharpXMLDocProvider_createDocumentSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, IntPtr jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_destroyDocument")]
  public static extern void CSharpXMLDocProvider_destroyDocument(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_destroyDocumentSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_destroyDocumentSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_saveToFile")]
  public static extern void CSharpXMLDocProvider_saveToFile(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_saveToFileSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_saveToFileSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getNodesCount")]
  public static extern int CSharpXMLDocProvider_getNodesCount(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getNodesCountSwigExplicitCSharpXMLDocProvider")]
  public static extern int CSharpXMLDocProvider_getNodesCountSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_hasNode")]
  public static extern bool CSharpXMLDocProvider_hasNode(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_hasNodeSwigExplicitCSharpXMLDocProvider")]
  public static extern bool CSharpXMLDocProvider_hasNodeSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setNodeText")]
  public static extern void CSharpXMLDocProvider_setNodeText(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setNodeTextSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_setNodeTextSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getNodeText")]
  public static extern IntPtr CSharpXMLDocProvider_getNodeText(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getNodeTextSwigExplicitCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_getNodeTextSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getInnerXMLString")]
  public static extern IntPtr CSharpXMLDocProvider_getInnerXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getInnerXMLStringSwigExplicitCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_getInnerXMLStringSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setInnerXMLString")]
  public static extern void CSharpXMLDocProvider_setInnerXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setInnerXMLStringSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_setInnerXMLStringSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getOuterXMLString")]
  public static extern IntPtr CSharpXMLDocProvider_getOuterXMLString(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getOuterXMLStringSwigExplicitCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_getOuterXMLStringSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_removeNode")]
  public static extern void CSharpXMLDocProvider_removeNode(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_removeNodeSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_removeNodeSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addChild")]
  public static extern void CSharpXMLDocProvider_addChild(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addChildSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_addChildSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addChildWithInnerText")]
  public static extern void CSharpXMLDocProvider_addChildWithInnerText(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addChildWithInnerTextSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_addChildWithInnerTextSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_hasAttribute")]
  public static extern bool CSharpXMLDocProvider_hasAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_hasAttributeSwigExplicitCSharpXMLDocProvider")]
  public static extern bool CSharpXMLDocProvider_hasAttributeSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getAttributeValue")]
  public static extern IntPtr CSharpXMLDocProvider_getAttributeValue(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getAttributeValueSwigExplicitCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_getAttributeValueSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setAttributeValue")]
  public static extern void CSharpXMLDocProvider_setAttributeValue(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setAttributeValueSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_setAttributeValueSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addAttribute")]
  public static extern void CSharpXMLDocProvider_addAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addAttributeSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_addAttributeSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_removeAttribute")]
  public static extern void CSharpXMLDocProvider_removeAttribute(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_removeAttributeSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_removeAttributeSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addNamespace")]
  public static extern void CSharpXMLDocProvider_addNamespace(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addNamespaceSwigExplicitCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_addNamespaceSwigExplicitCSharpXMLDocProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_release")]
  public static extern int CSharpXMLDocProvider_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_releaseSwigExplicitCSharpXMLDocProvider")]
  public static extern int CSharpXMLDocProvider_releaseSwigExplicitCSharpXMLDocProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addRef")]
  public static extern int CSharpXMLDocProvider_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_addRefSwigExplicitCSharpXMLDocProvider")]
  public static extern int CSharpXMLDocProvider_addRefSwigExplicitCSharpXMLDocProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CSharpXMLDocProvider")]
  public static extern void delete_CSharpXMLDocProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_getCSharpXMLDocProvider")]
  public static extern IntPtr CSharpXMLDocProvider_getCSharpXMLDocProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_setCSharpXMLDocProvider")]
  public static extern void CSharpXMLDocProvider_setCSharpXMLDocProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CSharpXMLDocProvider")]
  public static extern IntPtr new_CSharpXMLDocProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CSharpXMLDocProvider_director_connect")]
  public static extern void CSharpXMLDocProvider_director_connect(HandleRef jarg1, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_0 delegate0, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_1 delegate1, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_2 delegate2, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_3 delegate3, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_4 delegate4, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_5 delegate5, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_6 delegate6, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_7 delegate7, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_8 delegate8, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_9 delegate9, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_10 delegate10, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_11 delegate11, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_12 delegate12, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_13 delegate13, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_14 delegate14, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_15 delegate15, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_16 delegate16, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_17 delegate17, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_18 delegate18, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_19 delegate19, CSharpXMLDocProvider.SwigDelegateCSharpXMLDocProvider_20 delegate20);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_createRequest__SWIG_0")]
  public static extern int HttpRequestProvider_createRequest__SWIG_0(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_createRequestSwigExplicitHttpRequestProvider__SWIG_0")]
  public static extern int HttpRequestProvider_createRequestSwigExplicitHttpRequestProvider__SWIG_0(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_createRequest__SWIG_1")]
  public static extern int HttpRequestProvider_createRequest__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_createRequestSwigExplicitHttpRequestProvider__SWIG_1")]
  public static extern int HttpRequestProvider_createRequestSwigExplicitHttpRequestProvider__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_destroyRequest")]
  public static extern void HttpRequestProvider_destroyRequest(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_destroyRequestSwigExplicitHttpRequestProvider")]
  public static extern void HttpRequestProvider_destroyRequestSwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_getResponse")]
  public static extern bool HttpRequestProvider_getResponse(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_getResponseSwigExplicitHttpRequestProvider")]
  public static extern bool HttpRequestProvider_getResponseSwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_getResponseBody")]
  public static extern IntPtr HttpRequestProvider_getResponseBody(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_getResponseBodySwigExplicitHttpRequestProvider")]
  public static extern IntPtr HttpRequestProvider_getResponseBodySwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_downloadResponse")]
  public static extern bool HttpRequestProvider_downloadResponse(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_downloadResponseSwigExplicitHttpRequestProvider")]
  public static extern bool HttpRequestProvider_downloadResponseSwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRequestBody")]
  public static extern void HttpRequestProvider_addRequestBody(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRequestBodySwigExplicitHttpRequestProvider")]
  public static extern void HttpRequestProvider_addRequestBodySwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRequestHeader")]
  public static extern void HttpRequestProvider_addRequestHeader(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRequestHeaderSwigExplicitHttpRequestProvider")]
  public static extern void HttpRequestProvider_addRequestHeaderSwigExplicitHttpRequestProvider(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_release")]
  public static extern int HttpRequestProvider_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_releaseSwigExplicitHttpRequestProvider")]
  public static extern int HttpRequestProvider_releaseSwigExplicitHttpRequestProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRef")]
  public static extern int HttpRequestProvider_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_addRefSwigExplicitHttpRequestProvider")]
  public static extern int HttpRequestProvider_addRefSwigExplicitHttpRequestProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_HttpRequestProvider")]
  public static extern void delete_HttpRequestProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_getHttpRequestProvider")]
  public static extern IntPtr HttpRequestProvider_getHttpRequestProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_setHttpRequestProvider")]
  public static extern void HttpRequestProvider_setHttpRequestProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpRequestProvider")]
  public static extern IntPtr new_HttpRequestProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequestProvider_director_connect")]
  public static extern void HttpRequestProvider_director_connect(HandleRef jarg1, HttpRequestProvider.SwigDelegateHttpRequestProvider_0 delegate0, HttpRequestProvider.SwigDelegateHttpRequestProvider_1 delegate1, HttpRequestProvider.SwigDelegateHttpRequestProvider_2 delegate2, HttpRequestProvider.SwigDelegateHttpRequestProvider_3 delegate3, HttpRequestProvider.SwigDelegateHttpRequestProvider_4 delegate4, HttpRequestProvider.SwigDelegateHttpRequestProvider_5 delegate5, HttpRequestProvider.SwigDelegateHttpRequestProvider_6 delegate6, HttpRequestProvider.SwigDelegateHttpRequestProvider_7 delegate7, HttpRequestProvider.SwigDelegateHttpRequestProvider_8 delegate8, HttpRequestProvider.SwigDelegateHttpRequestProvider_9 delegate9);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_create__SWIG_0")]
  public static extern IntPtr HttpRequest_create__SWIG_0(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_create__SWIG_1")]
  public static extern IntPtr HttpRequest_create__SWIG_1(IntPtr jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_HttpRequest")]
  public static extern void delete_HttpRequest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_addRequestBody")]
  public static extern void HttpRequest_addRequestBody(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_addRequestHeader")]
  public static extern void HttpRequest_addRequestHeader(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_getResponse")]
  public static extern bool HttpRequest_getResponse(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_getResponseBody")]
  public static extern IntPtr HttpRequest_getResponseBody(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_downloadResponse")]
  public static extern bool HttpRequest_downloadResponse(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_HttpRequest_test")]
  public static extern void HttpRequest_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_HttpUtils")]
  public static extern IntPtr new_HttpUtils();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_HttpUtils")]
  public static extern void delete_HttpUtils(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_width_set")]
  public static extern void BitmapServerData_width_set(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_width_get")]
  public static extern uint BitmapServerData_width_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_height_set")]
  public static extern void BitmapServerData_height_set(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_height_get")]
  public static extern uint BitmapServerData_height_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_bitmap0_set")]
  public static extern void BitmapServerData_bitmap0_set(HandleRef jarg1, byte jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerData_bitmap0_get")]
  public static extern byte BitmapServerData_bitmap0_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerData")]
  public static extern IntPtr new_BitmapServerData();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_BitmapServerData")]
  public static extern void delete_BitmapServerData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadIcon")]
  public static extern IntPtr BitmapServerProvider_loadIcon(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadIconSwigExplicitBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_loadIconSwigExplicitBitmapServerProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadResource")]
  public static extern IntPtr BitmapServerProvider_loadResource(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadResourceSwigExplicitBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_loadResourceSwigExplicitBitmapServerProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadBitmap")]
  public static extern IntPtr BitmapServerProvider_loadBitmap(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_loadBitmapSwigExplicitBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_loadBitmapSwigExplicitBitmapServerProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_forceRGB")]
  public static extern IntPtr BitmapServerProvider_forceRGB(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_forceRGBSwigExplicitBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_forceRGBSwigExplicitBitmapServerProvider(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_release")]
  public static extern int BitmapServerProvider_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_releaseSwigExplicitBitmapServerProvider")]
  public static extern int BitmapServerProvider_releaseSwigExplicitBitmapServerProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_addRef")]
  public static extern int BitmapServerProvider_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_addRefSwigExplicitBitmapServerProvider")]
  public static extern int BitmapServerProvider_addRefSwigExplicitBitmapServerProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_BitmapServerProvider")]
  public static extern void delete_BitmapServerProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_getBitmapServerProvider")]
  public static extern IntPtr BitmapServerProvider_getBitmapServerProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_setBitmapServerProvider")]
  public static extern void BitmapServerProvider_setBitmapServerProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BitmapServerProvider")]
  public static extern IntPtr new_BitmapServerProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BitmapServerProvider_director_connect")]
  public static extern void BitmapServerProvider_director_connect(HandleRef jarg1, BitmapServerProvider.SwigDelegateBitmapServerProvider_0 delegate0, BitmapServerProvider.SwigDelegateBitmapServerProvider_1 delegate1, BitmapServerProvider.SwigDelegateBitmapServerProvider_2 delegate2, BitmapServerProvider.SwigDelegateBitmapServerProvider_3 delegate3, BitmapServerProvider.SwigDelegateBitmapServerProvider_4 delegate4, BitmapServerProvider.SwigDelegateBitmapServerProvider_5 delegate5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXModelException")]
  public static extern IntPtr new_PYXModelException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXModelException_getLocalizedErrorString")]
  public static extern IntPtr PYXModelException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXModelException")]
  public static extern void delete_PYXModelException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoordConversionException")]
  public static extern IntPtr new_PYXCoordConversionException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordConversionException_getLocalizedErrorString")]
  public static extern IntPtr PYXCoordConversionException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoordConversionException")]
  public static extern void delete_PYXCoordConversionException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIndexException")]
  public static extern IntPtr new_PYXIndexException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndexException_getLocalizedErrorString")]
  public static extern IntPtr PYXIndexException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIndexException")]
  public static extern void delete_PYXIndexException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMathException")]
  public static extern IntPtr new_PYXMathException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMathException_getLocalizedErrorString")]
  public static extern IntPtr PYXMathException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMathException")]
  public static extern void delete_PYXMathException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSnyderException")]
  public static extern IntPtr new_PYXSnyderException(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSnyderException_getLocalizedErrorString")]
  public static extern IntPtr PYXSnyderException_getLocalizedErrorString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSnyderException")]
  public static extern void delete_PYXSnyderException(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Hexagon_test")]
  public static extern void Hexagon_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Hexagon_knNumVertices_get")]
  public static extern int Hexagon_knNumVertices_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Hexagon_knNumSides_get")]
  public static extern int Hexagon_knNumSides_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Hexagon_circumRadiusToInRadius")]
  public static extern double Hexagon_circumRadiusToInRadius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Hexagon_inRadiusToCircumRadius")]
  public static extern double Hexagon_inRadiusToCircumRadius(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Hexagon")]
  public static extern void delete_Hexagon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Pentagon_knNumVertices_get")]
  public static extern int Pentagon_knNumVertices_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Pentagon_knNumSides_get")]
  public static extern int Pentagon_knNumSides_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Pentagon")]
  public static extern void delete_Pentagon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_knMaxSpiralingDepth_get")]
  public static extern int PYXSpiralIterator_knMaxSpiralingDepth_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_create__SWIG_0")]
  public static extern IntPtr PYXSpiralIterator_create__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_create__SWIG_1")]
  public static extern IntPtr PYXSpiralIterator_create__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_test")]
  public static extern void PYXSpiralIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpiralIterator__SWIG_0")]
  public static extern IntPtr new_PYXSpiralIterator__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpiralIterator__SWIG_1")]
  public static extern IntPtr new_PYXSpiralIterator__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSpiralIterator")]
  public static extern void delete_PYXSpiralIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_next")]
  public static extern void PYXSpiralIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_end")]
  public static extern bool PYXSpiralIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_getIndex")]
  public static extern IntPtr PYXSpiralIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_reset__SWIG_0")]
  public static extern void PYXSpiralIterator_reset__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_reset__SWIG_1")]
  public static extern void PYXSpiralIterator_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_getTwoDirectionFactor")]
  public static extern int PYXSpiralIterator_getTwoDirectionFactor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpiralIterator_getSixDirectionFactor")]
  public static extern int PYXSpiralIterator_getSixDirectionFactor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_kfRadius_get")]
  public static extern double ReferenceSphere_kfRadius_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_getInstance")]
  public static extern IntPtr ReferenceSphere_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_getName")]
  public static extern IntPtr ReferenceSphere_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_calcDistance")]
  public static extern double ReferenceSphere_calcDistance(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_toGeocentric")]
  public static extern IntPtr ReferenceSphere_toGeocentric(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ReferenceSphere_toDatum")]
  public static extern IntPtr ReferenceSphere_toDatum(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ReferenceSphere")]
  public static extern void delete_ReferenceSphere(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_knMaxDigits_get")]
  public static extern int knMaxDigits_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_test")]
  public static extern void PYXIndex_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_knDigitMask_get")]
  public static extern uint PYXIndex_knDigitMask_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_knBitsPerDigit_get")]
  public static extern int PYXIndex_knBitsPerDigit_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIndex__SWIG_0")]
  public static extern IntPtr new_PYXIndex__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIndex__SWIG_1")]
  public static extern IntPtr new_PYXIndex__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIndex__SWIG_2")]
  public static extern IntPtr new_PYXIndex__SWIG_2(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIndex")]
  public static extern void delete_PYXIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_reset")]
  public static extern void PYXIndex_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_getResolution")]
  public static extern int PYXIndex_getResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_setResolution")]
  public static extern void PYXIndex_setResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_toString")]
  public static extern IntPtr PYXIndex_toString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_isNull")]
  public static extern bool PYXIndex_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_isAtOrigin__SWIG_0")]
  public static extern bool PYXIndex_isAtOrigin__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_isAtOrigin__SWIG_1")]
  public static extern bool PYXIndex_isAtOrigin__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_hasVertexChildren")]
  public static extern bool PYXIndex_hasVertexChildren(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_appendDigit")]
  public static extern void PYXIndex_appendDigit(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_appendPair")]
  public static extern void PYXIndex_appendPair(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_prependDigit")]
  public static extern void PYXIndex_prependDigit(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_prependPair")]
  public static extern void PYXIndex_prependPair(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_negate")]
  public static extern void PYXIndex_negate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_isAncestorOf")]
  public static extern bool PYXIndex_isAncestorOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_isDescendantOf")]
  public static extern bool PYXIndex_isDescendantOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_stripRight")]
  public static extern uint PYXIndex_stripRight(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_stripRightPair")]
  public static extern uint PYXIndex_stripRightPair(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_stripLeft")]
  public static extern uint PYXIndex_stripLeft(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_stripLeftPair")]
  public static extern uint PYXIndex_stripLeftPair(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_randomize")]
  public static extern void PYXIndex_randomize(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_getDigitCount")]
  public static extern int PYXIndex_getDigitCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_append")]
  public static extern void PYXIndex_append(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_getDigit")]
  public static extern uint PYXIndex_getDigit(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_getLastDigit")]
  public static extern uint PYXIndex_getLastDigit(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_subseq__SWIG_0")]
  public static extern IntPtr PYXIndex_subseq__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_subseq__SWIG_1")]
  public static extern IntPtr PYXIndex_subseq__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndex_mostSignificant")]
  public static extern uint PYXIndex_mostSignificant(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_test")]
  public static extern void PYXMath_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_knMaxAbsResolution_get")]
  public static extern int PYXMath_knMaxAbsResolution_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_knMaxRelResolution_get")]
  public static extern int PYXMath_knMaxRelResolution_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_kfResZeroIntercell_get")]
  public static extern double PYXMath_kfResZeroIntercell_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_getHexClass")]
  public static extern int PYXMath_getHexClass(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_getAltHexClass")]
  public static extern int PYXMath_getAltHexClass(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_negateDir")]
  public static extern int PYXMath_negateDir(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_move")]
  public static extern void PYXMath_move(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_add__SWIG_0")]
  public static extern void PYXMath_add__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4, bool jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_add__SWIG_1")]
  public static extern void PYXMath_add__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_subtract")]
  public static extern void PYXMath_subtract(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_multiply")]
  public static extern void PYXMath_multiply(int jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_polarToIndex")]
  public static extern void PYXMath_polarToIndex(HandleRef jarg1, int jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_indexToPolar")]
  public static extern void PYXMath_indexToPolar(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_getParent")]
  public static extern IntPtr PYXMath_getParent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_factor__SWIG_0")]
  public static extern void PYXMath_factor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_factor__SWIG_1")]
  public static extern void PYXMath_factor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_zoomIn__SWIG_0")]
  public static extern bool PYXMath_zoomIn__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_zoomIn__SWIG_1")]
  public static extern bool PYXMath_zoomIn__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_zoomOut__SWIG_0")]
  public static extern bool PYXMath_zoomOut__SWIG_0(HandleRef jarg1, ref int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_zoomOut__SWIG_1")]
  public static extern bool PYXMath_zoomOut__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_originDir")]
  public static extern int PYXMath_originDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_calcAncestorIndex")]
  public static extern IntPtr PYXMath_calcAncestorIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_calcDescendantIndex")]
  public static extern IntPtr PYXMath_calcDescendantIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_rotateIndex")]
  public static extern void PYXMath_rotateIndex(HandleRef jarg1, uint jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_rotateDirection")]
  public static extern int PYXMath_rotateDirection(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_rotateDelta__SWIG_0")]
  public static extern void PYXMath_rotateDelta__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_rotateDelta__SWIG_1")]
  public static extern int PYXMath_rotateDelta__SWIG_1(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_hexSector__SWIG_0")]
  public static extern int PYXMath_hexSector__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_hexSector__SWIG_1")]
  public static extern int PYXMath_hexSector__SWIG_1(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_calcInterCellDistance")]
  public static extern double PYXMath_calcInterCellDistance(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_calcCircumRadius")]
  public static extern double PYXMath_calcCircumRadius(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_calcInRadius")]
  public static extern double PYXMath_calcInRadius(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_isInLine")]
  public static extern bool PYXMath_isInLine(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMath_factor__SWIG_2")]
  public static extern void PYXMath_factor__SWIG_2(HandleRef jarg1, ref int jarg2, ref int jarg3, ref int jarg4, ref int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMath")]
  public static extern void delete_PYXMath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_test")]
  public static extern void PYXIcosIndex_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knResolution0_get")]
  public static extern int PYXIcosIndex_knResolution0_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knResolution1_get")]
  public static extern int PYXIcosIndex_knResolution1_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_kcFaceFirstChar_get")]
  public static extern char PYXIcosIndex_kcFaceFirstChar_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_kcFaceLastChar_get")]
  public static extern char PYXIcosIndex_kcFaceLastChar_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knMinSubRes_get")]
  public static extern int PYXIcosIndex_knMinSubRes_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knFirstVertex_get")]
  public static extern int PYXIcosIndex_knFirstVertex_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knLastVertex_get")]
  public static extern int PYXIcosIndex_knLastVertex_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_knNullPrimaryRes_get")]
  public static extern int PYXIcosIndex_knNullPrimaryRes_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIndex__SWIG_0")]
  public static extern IntPtr new_PYXIcosIndex__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIndex__SWIG_1")]
  public static extern IntPtr new_PYXIcosIndex__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIndex__SWIG_2")]
  public static extern IntPtr new_PYXIcosIndex__SWIG_2(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosIndex")]
  public static extern void delete_PYXIcosIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_reset")]
  public static extern void PYXIcosIndex_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_normalizeResolution")]
  public static extern void PYXIcosIndex_normalizeResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isNull")]
  public static extern bool PYXIcosIndex_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_toString")]
  public static extern IntPtr PYXIcosIndex_toString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_getSubIndex")]
  public static extern IntPtr PYXIcosIndex_getSubIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_getResolution")]
  public static extern int PYXIcosIndex_getResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_setResolution")]
  public static extern void PYXIcosIndex_setResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_incrementResolution")]
  public static extern void PYXIcosIndex_incrementResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_decrementResolution")]
  public static extern void PYXIcosIndex_decrementResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_getPrimaryResolution")]
  public static extern int PYXIcosIndex_getPrimaryResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_setPrimaryResolution")]
  public static extern void PYXIcosIndex_setPrimaryResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isVertex")]
  public static extern bool PYXIcosIndex_isVertex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isPolar")]
  public static extern bool PYXIcosIndex_isPolar(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isFace")]
  public static extern bool PYXIcosIndex_isFace(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_hasVertexChildren")]
  public static extern bool PYXIcosIndex_hasVertexChildren(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isPentagon__SWIG_0")]
  public static extern bool PYXIcosIndex_isPentagon__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isPentagon__SWIG_1")]
  public static extern bool PYXIcosIndex_isPentagon__SWIG_1(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isHexagon")]
  public static extern bool PYXIcosIndex_isHexagon(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isMajor")]
  public static extern bool PYXIcosIndex_isMajor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isMinor")]
  public static extern bool PYXIcosIndex_isMinor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isNorthern")]
  public static extern bool PYXIcosIndex_isNorthern(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isSouthern")]
  public static extern bool PYXIcosIndex_isSouthern(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_getClass")]
  public static extern int PYXIcosIndex_getClass(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isAncestorOf")]
  public static extern bool PYXIcosIndex_isAncestorOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_isDescendantOf")]
  public static extern bool PYXIcosIndex_isDescendantOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_determineNumSides")]
  public static extern int PYXIcosIndex_determineNumSides(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_randomize")]
  public static extern void PYXIcosIndex_randomize(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIndex_getMaximumChildCount")]
  public static extern uint PYXIcosIndex_getMaximumChildCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_test")]
  public static extern void PYXIcosMath_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomIntoChildren__SWIG_0")]
  public static extern bool PYXIcosMath_zoomIntoChildren__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomIntoChildren__SWIG_1")]
  public static extern bool PYXIcosMath_zoomIntoChildren__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomIntoNeighbourhood__SWIG_0")]
  public static extern bool PYXIcosMath_zoomIntoNeighbourhood__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomIntoNeighbourhood__SWIG_1")]
  public static extern bool PYXIcosMath_zoomIntoNeighbourhood__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomOut__SWIG_0")]
  public static extern bool PYXIcosMath_zoomOut__SWIG_0(HandleRef jarg1, ref int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_zoomOut__SWIG_1")]
  public static extern bool PYXIcosMath_zoomOut__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcAncestorIndex")]
  public static extern IntPtr PYXIcosMath_calcAncestorIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcDescendantIndex")]
  public static extern IntPtr PYXIcosMath_calcDescendantIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_rotateDirection")]
  public static extern int PYXIcosMath_rotateDirection(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_move__SWIG_0")]
  public static extern IntPtr PYXIcosMath_move__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_move__SWIG_1")]
  public static extern bool PYXIcosMath_move__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_add")]
  public static extern IntPtr PYXIcosMath_add(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_isValidDirection__SWIG_0")]
  public static extern bool PYXIcosMath_isValidDirection__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_isValidDirection__SWIG_1")]
  public static extern bool PYXIcosMath_isValidDirection__SWIG_1(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_isValidResolution")]
  public static extern bool PYXIcosMath_isValidResolution(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_faceOwner")]
  public static extern int PYXIcosMath_faceOwner(char jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getParent")]
  public static extern IntPtr PYXIcosMath_getParent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCoveringCells")]
  public static extern int PYXIcosMath_getCoveringCells(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCoveredCells")]
  public static extern int PYXIcosMath_getCoveredCells(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getAllCoveringCells")]
  public static extern void PYXIcosMath_getAllCoveringCells(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getFaceVertices")]
  public static extern void PYXIcosMath_getFaceVertices(char jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getDir1Angle")]
  public static extern double PYXIcosMath_getDir1Angle(char jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getFaceOrientation")]
  public static extern bool PYXIcosMath_getFaceOrientation(char jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCellGap__SWIG_0")]
  public static extern bool PYXIcosMath_getCellGap__SWIG_0(HandleRef jarg1, ref int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCellGap__SWIG_1")]
  public static extern bool PYXIcosMath_getCellGap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_isValidIndex")]
  public static extern bool PYXIcosMath_isValidIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_polarToIndex")]
  public static extern void PYXIcosMath_polarToIndex(HandleRef jarg1, int jarg2, char jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_indexToPolar")]
  public static extern void PYXIcosMath_indexToPolar(HandleRef jarg1, HandleRef jarg2, string jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getDirectionFromPolar")]
  public static extern int PYXIcosMath_getDirectionFromPolar(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCellCount__SWIG_0")]
  public static extern int PYXIcosMath_getCellCount__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getCellCount__SWIG_1")]
  public static extern int PYXIcosMath_getCellCount__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getOffset")]
  public static extern uint PYXIcosMath_getOffset(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcCellPosition__SWIG_0")]
  public static extern uint PYXIcosMath_calcCellPosition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcCellPosition__SWIG_1")]
  public static extern uint PYXIcosMath_calcCellPosition__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcEdgePosition")]
  public static extern int PYXIcosMath_calcEdgePosition(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_calcIndexFromOffset")]
  public static extern IntPtr PYXIcosMath_calcIndexFromOffset(HandleRef jarg1, int jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_areSiblings__SWIG_0")]
  public static extern bool PYXIcosMath_areSiblings__SWIG_0(HandleRef jarg1, HandleRef jarg2, ref int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_areSiblings__SWIG_1")]
  public static extern bool PYXIcosMath_areSiblings__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_directionFromParent__SWIG_0")]
  public static extern bool PYXIcosMath_directionFromParent__SWIG_0(HandleRef jarg1, ref int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_directionFromParent__SWIG_1")]
  public static extern bool PYXIcosMath_directionFromParent__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_isDataContained")]
  public static extern bool PYXIcosMath_isDataContained(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getNeighbours")]
  public static extern void PYXIcosMath_getNeighbours(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_getNeighbourDirection")]
  public static extern int PYXIcosMath_getNeighbourDirection(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_rotateIndex")]
  public static extern void PYXIcosMath_rotateIndex(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosMath_rotateTail")]
  public static extern void PYXIcosMath_rotateTail(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosMath")]
  public static extern void delete_PYXIcosMath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_iid_get")]
  public static extern IntPtr ICoordConverter_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_clone")]
  public static extern IntPtr ICoordConverter_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_nativeToPYXIS")]
  public static extern void ICoordConverter_nativeToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_pyxisToNative")]
  public static extern void ICoordConverter_pyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_tryPyxisToNative")]
  public static extern bool ICoordConverter_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_nativeToLatLon")]
  public static extern void ICoordConverter_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_latLonToNative")]
  public static extern void ICoordConverter_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_isProjected")]
  public static extern bool ICoordConverter_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_serialize")]
  public static extern IntPtr ICoordConverter_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_deserialize")]
  public static extern IntPtr ICoordConverter_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverter_serializeCOM")]
  public static extern void ICoordConverter_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverter")]
  public static extern void delete_ICoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordConverter_deserializeCOM")]
  public static extern IntPtr PYXCoordConverter_deserializeCOM(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoordConverter")]
  public static extern void delete_PYXCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_iid_get")]
  public static extern IntPtr ICoordConverterFromSrsFactory_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_createFromSRS")]
  public static extern IntPtr ICoordConverterFromSrsFactory_createFromSRS(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_createFromWKT")]
  public static extern IntPtr ICoordConverterFromSrsFactory_createFromWKT(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactory_convertToSRS")]
  public static extern IntPtr ICoordConverterFromSrsFactory_convertToSRS(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoordConverterFromSrsFactory")]
  public static extern void delete_ICoordConverterFromSrsFactory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_clsid_get")]
  public static extern IntPtr PYXAxisFlipCoordConverter_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_aiid_get")]
  public static extern IntPtr PYXAxisFlipCoordConverter_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_niid_get")]
  public static extern int PYXAxisFlipCoordConverter_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_AddRef")]
  public static extern uint PYXAxisFlipCoordConverter_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_Release")]
  public static extern uint PYXAxisFlipCoordConverter_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXAxisFlipCoordConverter__SWIG_0")]
  public static extern IntPtr new_PYXAxisFlipCoordConverter__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXAxisFlipCoordConverter__SWIG_1")]
  public static extern IntPtr new_PYXAxisFlipCoordConverter__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXAxisFlipCoordConverter")]
  public static extern void delete_PYXAxisFlipCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_setInternalCoordConverter")]
  public static extern void PYXAxisFlipCoordConverter_setInternalCoordConverter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_serialize")]
  public static extern IntPtr PYXAxisFlipCoordConverter_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_deserialize")]
  public static extern IntPtr PYXAxisFlipCoordConverter_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_serializeCOM")]
  public static extern void PYXAxisFlipCoordConverter_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_clone")]
  public static extern IntPtr PYXAxisFlipCoordConverter_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_nativeToPYXIS")]
  public static extern void PYXAxisFlipCoordConverter_nativeToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_pyxisToNative")]
  public static extern void PYXAxisFlipCoordConverter_pyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_tryPyxisToNative")]
  public static extern bool PYXAxisFlipCoordConverter_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_nativeToLatLon")]
  public static extern void PYXAxisFlipCoordConverter_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_latLonToNative")]
  public static extern void PYXAxisFlipCoordConverter_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverter_isProjected")]
  public static extern bool PYXAxisFlipCoordConverter_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProjectionMethod")]
  public static extern void delete_ProjectionMethod(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_nativeToPYXIS__SWIG_0")]
  public static extern void ProjectionMethod_nativeToPYXIS__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_pyxisToNative__SWIG_0")]
  public static extern void ProjectionMethod_pyxisToNative__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_nativeToPYXIS__SWIG_1")]
  public static extern void ProjectionMethod_nativeToPYXIS__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_pyxisToNative__SWIG_1")]
  public static extern void ProjectionMethod_pyxisToNative__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_xyzToPYXIS")]
  public static extern void ProjectionMethod_xyzToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_pyxisToXYZ")]
  public static extern void ProjectionMethod_pyxisToXYZ(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_precisionToResolution")]
  public static extern int ProjectionMethod_precisionToResolution(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethod_resolutionToPrecision")]
  public static extern double ProjectionMethod_resolutionToPrecision(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_clsid_get")]
  public static extern IntPtr SnyderProjection_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_aiid_get")]
  public static extern IntPtr SnyderProjection_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_niid_get")]
  public static extern int SnyderProjection_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_AddRef")]
  public static extern uint SnyderProjection_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_Release")]
  public static extern uint SnyderProjection_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_kfUnitRadianDistance_set")]
  public static extern void SnyderProjection_kfUnitRadianDistance_set(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_kfUnitRadianDistance_get")]
  public static extern double SnyderProjection_kfUnitRadianDistance_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_kfUnitMetreDistance_set")]
  public static extern void SnyderProjection_kfUnitMetreDistance_set(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_kfUnitMetreDistance_get")]
  public static extern double SnyderProjection_kfUnitMetreDistance_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_test")]
  public static extern void SnyderProjection_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_getInstance")]
  public static extern IntPtr SnyderProjection_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_clone")]
  public static extern IntPtr SnyderProjection_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_nativeToPYXIS__SWIG_0")]
  public static extern void SnyderProjection_nativeToPYXIS__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_pyxisToNative__SWIG_0")]
  public static extern void SnyderProjection_pyxisToNative__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_tryPyxisToNative")]
  public static extern bool SnyderProjection_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_nativeToPYXIS__SWIG_1")]
  public static extern void SnyderProjection_nativeToPYXIS__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_pyxisToNative__SWIG_1")]
  public static extern void SnyderProjection_pyxisToNative__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_nativeToLatLon")]
  public static extern void SnyderProjection_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_latLonToNative")]
  public static extern void SnyderProjection_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_isProjected")]
  public static extern bool SnyderProjection_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_xyzToPYXIS")]
  public static extern void SnyderProjection_xyzToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_pyxisToXYZ")]
  public static extern void SnyderProjection_pyxisToXYZ(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_precisionToResolution")]
  public static extern int SnyderProjection_precisionToResolution(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_resolutionToPrecision")]
  public static extern double SnyderProjection_resolutionToPrecision(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_calculateResolution")]
  public static extern int SnyderProjection_calculateResolution(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_serialize")]
  public static extern IntPtr SnyderProjection_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_deserialize")]
  public static extern IntPtr SnyderProjection_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_serializeCOM")]
  public static extern void SnyderProjection_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_calcCellAreaOnUnitSphere")]
  public static extern double SnyderProjection_calcCellAreaOnUnitSphere(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_calcCellAreaOnReferenceSphere")]
  public static extern double SnyderProjection_calcCellAreaOnReferenceSphere(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjection_calcCellDistanceOnReferenceSphere")]
  public static extern double SnyderProjection_calcCellDistanceOnReferenceSphere(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_test")]
  public static extern void PointLocation_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromWGS84__SWIG_0")]
  public static extern IntPtr PointLocation_fromWGS84__SWIG_0(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromWGS84__SWIG_1")]
  public static extern IntPtr PointLocation_fromWGS84__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromGeocenteric__SWIG_0")]
  public static extern IntPtr PointLocation_fromGeocenteric__SWIG_0(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromGeocenteric__SWIG_1")]
  public static extern IntPtr PointLocation_fromGeocenteric__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromPYXIndex")]
  public static extern IntPtr PointLocation_fromPYXIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_fromXYZ")]
  public static extern IntPtr PointLocation_fromXYZ(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_asWGS84")]
  public static extern IntPtr PointLocation_asWGS84(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_asGeocentric")]
  public static extern IntPtr PointLocation_asGeocentric(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_asXYZ")]
  public static extern IntPtr PointLocation_asXYZ(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_asPYXIcosIndex")]
  public static extern IntPtr PointLocation_asPYXIcosIndex(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PointLocation_distance")]
  public static extern double PointLocation_distance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PointLocation")]
  public static extern void delete_PointLocation(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_clsid_get")]
  public static extern IntPtr WGS84CoordConverter_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_aiid_get")]
  public static extern IntPtr WGS84CoordConverter_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_niid_get")]
  public static extern int WGS84CoordConverter_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_AddRef")]
  public static extern uint WGS84CoordConverter_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_Release")]
  public static extern uint WGS84CoordConverter_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_knDegreesPerDegree_get")]
  public static extern int WGS84CoordConverter_knDegreesPerDegree_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_knMinutesPerDegree_get")]
  public static extern int WGS84CoordConverter_knMinutesPerDegree_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_knSecondsPerDegree_get")]
  public static extern int WGS84CoordConverter_knSecondsPerDegree_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_knTenthsOfSecondsPerDegree_get")]
  public static extern int WGS84CoordConverter_knTenthsOfSecondsPerDegree_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_test")]
  public static extern void WGS84CoordConverter_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_WGS84CoordConverter__SWIG_0")]
  public static extern IntPtr new_WGS84CoordConverter__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_WGS84CoordConverter__SWIG_1")]
  public static extern IntPtr new_WGS84CoordConverter__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_WGS84CoordConverter__SWIG_2")]
  public static extern IntPtr new_WGS84CoordConverter__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_WGS84CoordConverter")]
  public static extern void delete_WGS84CoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_clone")]
  public static extern IntPtr WGS84CoordConverter_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_nativeToPYXIS")]
  public static extern void WGS84CoordConverter_nativeToPYXIS(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_pyxisToNative")]
  public static extern void WGS84CoordConverter_pyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_tryPyxisToNative")]
  public static extern bool WGS84CoordConverter_tryPyxisToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_nativeToLatLon")]
  public static extern void WGS84CoordConverter_nativeToLatLon(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_latLonToNative")]
  public static extern void WGS84CoordConverter_latLonToNative(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_isProjected")]
  public static extern bool WGS84CoordConverter_isProjected(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_serialize")]
  public static extern IntPtr WGS84CoordConverter_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_deserialize")]
  public static extern IntPtr WGS84CoordConverter_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverter_serializeCOM")]
  public static extern void WGS84CoordConverter_serializeCOM(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_getInstance")]
  public static extern IntPtr WGS84_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_getName")]
  public static extern IntPtr WGS84_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_calcDistance")]
  public static extern double WGS84_calcDistance(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_toGeocentric")]
  public static extern IntPtr WGS84_toGeocentric(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_toDatum")]
  public static extern IntPtr WGS84_toDatum(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84_tryParseFromString")]
  public static extern bool WGS84_tryParseFromString(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_WGS84")]
  public static extern void delete_WGS84(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_test")]
  public static extern void PYXCursor_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCursor__SWIG_0")]
  public static extern IntPtr new_PYXCursor__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCursor__SWIG_1")]
  public static extern IntPtr new_PYXCursor__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCursor__SWIG_2")]
  public static extern IntPtr new_PYXCursor__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_forward__SWIG_0")]
  public static extern void PYXCursor_forward__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_forward__SWIG_1")]
  public static extern void PYXCursor_forward__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_backward__SWIG_0")]
  public static extern void PYXCursor_backward__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_backward__SWIG_1")]
  public static extern void PYXCursor_backward__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_left__SWIG_0")]
  public static extern void PYXCursor_left__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_left__SWIG_1")]
  public static extern void PYXCursor_left__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_right__SWIG_0")]
  public static extern void PYXCursor_right__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_right__SWIG_1")]
  public static extern void PYXCursor_right__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_zoomOut")]
  public static extern void PYXCursor_zoomOut(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_zoomIn")]
  public static extern void PYXCursor_zoomIn(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_getIndex")]
  public static extern IntPtr PYXCursor_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_getDir")]
  public static extern int PYXCursor_getDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_getBackDir")]
  public static extern int PYXCursor_getBackDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_getInitialDir")]
  public static extern int PYXCursor_getInitialDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_getRotation")]
  public static extern int PYXCursor_getRotation(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_reset")]
  public static extern void PYXCursor_reset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_setIndex")]
  public static extern void PYXCursor_setIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_setDir")]
  public static extern void PYXCursor_setDir(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCursor_toString")]
  public static extern IntPtr PYXCursor_toString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCursor__SWIG_3")]
  public static extern IntPtr new_PYXCursor__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCursor")]
  public static extern void delete_PYXCursor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIterator")]
  public static extern void delete_PYXIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_getIndex")]
  public static extern IntPtr PYXIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_getFieldValue__SWIG_0")]
  public static extern IntPtr PYXIterator_getFieldValue__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_getFieldValue__SWIG_1")]
  public static extern IntPtr PYXIterator_getFieldValue__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_setFieldValue__SWIG_0")]
  public static extern void PYXIterator_setFieldValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIterator_setFieldValue__SWIG_1")]
  public static extern void PYXIterator_setFieldValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyIterator_create")]
  public static extern IntPtr PYXEmptyIterator_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEmptyIterator")]
  public static extern IntPtr new_PYXEmptyIterator();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXEmptyIterator")]
  public static extern void delete_PYXEmptyIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyIterator_next")]
  public static extern void PYXEmptyIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyIterator_end")]
  public static extern bool PYXEmptyIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyIterator_getIndex")]
  public static extern IntPtr PYXEmptyIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSingleIterator_create")]
  public static extern IntPtr PYXSingleIterator_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSingleIterator")]
  public static extern IntPtr new_PYXSingleIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSingleIterator")]
  public static extern void delete_PYXSingleIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSingleIterator_next")]
  public static extern void PYXSingleIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSingleIterator_end")]
  public static extern bool PYXSingleIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSingleIterator_getIndex")]
  public static extern IntPtr PYXSingleIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_test")]
  public static extern void PYXChildIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXChildIterator")]
  public static extern IntPtr new_PYXChildIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXChildIterator")]
  public static extern void delete_PYXChildIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_next")]
  public static extern void PYXChildIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_end")]
  public static extern bool PYXChildIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIterator_getIndex")]
  public static extern IntPtr PYXChildIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerChildIterator_test")]
  public static extern void PYXInnerChildIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerChildIterator")]
  public static extern IntPtr new_PYXInnerChildIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerChildIterator")]
  public static extern void delete_PYXInnerChildIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerChildIterator_next")]
  public static extern void PYXInnerChildIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerChildIterator_end")]
  public static extern bool PYXInnerChildIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerChildIterator_getIndex")]
  public static extern IntPtr PYXInnerChildIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_create")]
  public static extern IntPtr PYXNeighbourIterator_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_test")]
  public static extern void PYXNeighbourIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNeighbourIterator")]
  public static extern IntPtr new_PYXNeighbourIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNeighbourIterator")]
  public static extern void delete_PYXNeighbourIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_end")]
  public static extern bool PYXNeighbourIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_next")]
  public static extern void PYXNeighbourIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_getIndex")]
  public static extern IntPtr PYXNeighbourIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_getDirection")]
  public static extern int PYXNeighbourIterator_getDirection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIterator_getRootIndex")]
  public static extern IntPtr PYXNeighbourIterator_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVertexIterator")]
  public static extern IntPtr new_PYXVertexIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVertexIterator")]
  public static extern void delete_PYXVertexIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_reset")]
  public static extern void PYXVertexIterator_reset(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_end")]
  public static extern bool PYXVertexIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_next")]
  public static extern void PYXVertexIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_getIndex")]
  public static extern IntPtr PYXVertexIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_getDirection")]
  public static extern int PYXVertexIterator_getDirection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_getRootIndex")]
  public static extern IntPtr PYXVertexIterator_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_getCentroidChild")]
  public static extern IntPtr PYXVertexIterator_getCentroidChild(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIterator_numVertices")]
  public static extern int PYXVertexIterator_numVertices(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_test")]
  public static extern void PYXEdgeIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_create")]
  public static extern IntPtr PYXEdgeIterator_create(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEdgeIterator")]
  public static extern IntPtr new_PYXEdgeIterator(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_restartIterator")]
  public static extern void PYXEdgeIterator_restartIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_setIteratorIndex")]
  public static extern bool PYXEdgeIterator_setIteratorIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXEdgeIterator")]
  public static extern void delete_PYXEdgeIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_next")]
  public static extern void PYXEdgeIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_end")]
  public static extern bool PYXEdgeIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_getIndex")]
  public static extern IntPtr PYXEdgeIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_calcCurrentOffset")]
  public static extern int PYXEdgeIterator_calcCurrentOffset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_calcCellCount")]
  public static extern int PYXEdgeIterator_calcCellCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIterator_getRoot")]
  public static extern IntPtr PYXEdgeIterator_getRoot(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosVertexIterator__SWIG_0")]
  public static extern IntPtr new_PYXIcosVertexIterator__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosVertexIterator__SWIG_1")]
  public static extern IntPtr new_PYXIcosVertexIterator__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosVertexIterator")]
  public static extern void delete_PYXIcosVertexIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosVertexIterator_next")]
  public static extern void PYXIcosVertexIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosVertexIterator_end")]
  public static extern bool PYXIcosVertexIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosVertexIterator_getIndex")]
  public static extern IntPtr PYXIcosVertexIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosFaceIterator__SWIG_0")]
  public static extern IntPtr new_PYXIcosFaceIterator__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosFaceIterator__SWIG_1")]
  public static extern IntPtr new_PYXIcosFaceIterator__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosFaceIterator")]
  public static extern void delete_PYXIcosFaceIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosFaceIterator_next")]
  public static extern void PYXIcosFaceIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosFaceIterator_end")]
  public static extern bool PYXIcosFaceIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosFaceIterator_getIndex")]
  public static extern IntPtr PYXIcosFaceIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_create__SWIG_0")]
  public static extern IntPtr PYXIcosIterator_create__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_create__SWIG_1")]
  public static extern IntPtr PYXIcosIterator_create__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator__SWIG_0")]
  public static extern IntPtr new_PYXIcosIterator__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosIterator__SWIG_1")]
  public static extern IntPtr new_PYXIcosIterator__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosIterator")]
  public static extern void delete_PYXIcosIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_next")]
  public static extern void PYXIcosIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_end")]
  public static extern bool PYXIcosIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIterator_getIndex")]
  public static extern IntPtr PYXIcosIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_create")]
  public static extern IntPtr PYXExhaustiveIterator_create(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_test")]
  public static extern void PYXExhaustiveIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXExhaustiveIterator")]
  public static extern IntPtr new_PYXExhaustiveIterator(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXExhaustiveIterator")]
  public static extern void delete_PYXExhaustiveIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_next")]
  public static extern void PYXExhaustiveIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_end")]
  public static extern bool PYXExhaustiveIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_setEnd")]
  public static extern void PYXExhaustiveIterator_setEnd(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_getIndex")]
  public static extern IntPtr PYXExhaustiveIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIterator_reset")]
  public static extern void PYXExhaustiveIterator_reset(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus__SWIG_0")]
  public static extern IntPtr new_PYXRhombus__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus__SWIG_1")]
  public static extern IntPtr new_PYXRhombus__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus__SWIG_2")]
  public static extern IntPtr new_PYXRhombus__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus__SWIG_3")]
  public static extern IntPtr new_PYXRhombus__SWIG_3(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombus__SWIG_4")]
  public static extern IntPtr new_PYXRhombus__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getSubRhombus__SWIG_0")]
  public static extern IntPtr PYXRhombus_getSubRhombus__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getSubRhombus__SWIG_1")]
  public static extern IntPtr PYXRhombus_getSubRhombus__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getSubRhombi")]
  public static extern IntPtr PYXRhombus_getSubRhombi(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getSubIndex__SWIG_0")]
  public static extern IntPtr PYXRhombus_getSubIndex__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getSubIndex__SWIG_1")]
  public static extern IntPtr PYXRhombus_getSubIndex__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getIndex")]
  public static extern IntPtr PYXRhombus_getIndex(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getDirection")]
  public static extern int PYXRhombus_getDirection(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getRevDirection")]
  public static extern int PYXRhombus_getRevDirection(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_isInside__SWIG_0")]
  public static extern bool PYXRhombus_isInside__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_intersects")]
  public static extern bool PYXRhombus_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_isInside__SWIG_1")]
  public static extern bool PYXRhombus_isInside__SWIG_1(HandleRef jarg1, HandleRef jarg2, out int jarg3, out int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_isInside__SWIG_2")]
  public static extern bool PYXRhombus_isInside__SWIG_2(HandleRef jarg1, HandleRef jarg2, out double jarg3, out double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_getUVMax")]
  public static extern int PYXRhombus_getUVMax(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombus_test")]
  public static extern void PYXRhombus_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRhombus")]
  public static extern void delete_PYXRhombus(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombusCursor__SWIG_0")]
  public static extern IntPtr new_PYXRhombusCursor__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombusCursor__SWIG_1")]
  public static extern IntPtr new_PYXRhombusCursor__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_next")]
  public static extern void PYXRhombusCursor_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_end")]
  public static extern bool PYXRhombusCursor_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_getIndex")]
  public static extern IntPtr PYXRhombusCursor_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_getUCoord")]
  public static extern int PYXRhombusCursor_getUCoord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_getVCoord")]
  public static extern int PYXRhombusCursor_getVCoord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_getOffsetCoord")]
  public static extern int PYXRhombusCursor_getOffsetCoord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_getMaxUV")]
  public static extern int PYXRhombusCursor_getMaxUV(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursor_isOddResolutionDepth")]
  public static extern bool PYXRhombusCursor_isOddResolutionDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRhombusCursor")]
  public static extern void delete_PYXRhombusCursor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_willLoadFast")]
  public static extern bool PYXRhombusUtils_willLoadFast(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_loadRhombusBGRA")]
  public static extern IntPtr PYXRhombusUtils_loadRhombusBGRA(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_loadRhombusBGRAPalette")]
  public static extern IntPtr PYXRhombusUtils_loadRhombusBGRAPalette(HandleRef jarg1, int jarg2, HandleRef jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_loadRhombusDouble")]
  public static extern IntPtr PYXRhombusUtils_loadRhombusDouble(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_loadRhombusFloat")]
  public static extern IntPtr PYXRhombusUtils_loadRhombusFloat(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusUtils_loadRhombusInt")]
  public static extern IntPtr PYXRhombusUtils_loadRhombusInt(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombusUtils")]
  public static extern IntPtr new_PYXRhombusUtils();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRhombusUtils")]
  public static extern void delete_PYXRhombusUtils(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombusRasterizer__SWIG_0")]
  public static extern IntPtr new_PYXRhombusRasterizer__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRhombusRasterizer__SWIG_1")]
  public static extern IntPtr new_PYXRhombusRasterizer__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRhombusRasterizer")]
  public static extern void delete_PYXRhombusRasterizer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_getCellResolution")]
  public static extern int PYXRhombusRasterizer_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_getNeededTile")]
  public static extern IntPtr PYXRhombusRasterizer_getNeededTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_isReady")]
  public static extern bool PYXRhombusRasterizer_isReady(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_setTileGeometry")]
  public static extern void PYXRhombusRasterizer_setTileGeometry(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_setGeometry")]
  public static extern void PYXRhombusRasterizer_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusRasterizer_rasterToBase64")]
  public static extern IntPtr PYXRhombusRasterizer_rasterToBase64(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_isOptimal")]
  public static extern bool IRegionVisitor_isOptimal(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_trim")]
  public static extern IntPtr IRegionVisitor_trim(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_getInnerTileIterator")]
  public static extern IntPtr IRegionVisitor_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_intersects__SWIG_0")]
  public static extern int IRegionVisitor_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_intersects__SWIG_1")]
  public static extern int IRegionVisitor_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegionVisitor_intersects__SWIG_2")]
  public static extern int IRegionVisitor_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRegionVisitor")]
  public static extern void delete_IRegionVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_clone")]
  public static extern IntPtr IRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_getVerticesCount")]
  public static extern int IRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_getVisitor")]
  public static extern IntPtr IRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_serializeVisitor")]
  public static extern void IRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_deserializeVisitor__SWIG_0")]
  public static extern IntPtr IRegion_deserializeVisitor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRegion_deserializeVisitor__SWIG_1")]
  public static extern IntPtr IRegion_deserializeVisitor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRegion")]
  public static extern void delete_IRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_create")]
  public static extern IntPtr PYXCompletelyInsideVisitor_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCompletelyInsideVisitor")]
  public static extern IntPtr new_PYXCompletelyInsideVisitor();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_isOptimal")]
  public static extern bool PYXCompletelyInsideVisitor_isOptimal(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_trim")]
  public static extern IntPtr PYXCompletelyInsideVisitor_trim(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_getInnerTileIterator")]
  public static extern IntPtr PYXCompletelyInsideVisitor_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_intersects__SWIG_0")]
  public static extern int PYXCompletelyInsideVisitor_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_intersects__SWIG_1")]
  public static extern int PYXCompletelyInsideVisitor_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitor_intersects__SWIG_2")]
  public static extern int PYXCompletelyInsideVisitor_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCompletelyInsideVisitor")]
  public static extern void delete_PYXCompletelyInsideVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegion_intersects__SWIG_0")]
  public static extern int PYXRegion_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegion_intersects__SWIG_1")]
  public static extern int PYXRegion_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRegion")]
  public static extern void delete_PYXRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_isPointContained__SWIG_0")]
  public static extern bool PYXVectorRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_isPointContained__SWIG_1")]
  public static extern bool PYXVectorRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_intersects__SWIG_0")]
  public static extern int PYXVectorRegion_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_intersects__SWIG_1")]
  public static extern int PYXVectorRegion_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_intersects__SWIG_2")]
  public static extern int PYXVectorRegion_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_intersects__SWIG_3")]
  public static extern int PYXVectorRegion_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_getBoundingCircle")]
  public static extern IntPtr PYXVectorRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_getVisitor")]
  public static extern IntPtr PYXVectorRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_serializeVisitor")]
  public static extern void PYXVectorRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegion_deserializeVisitor")]
  public static extern IntPtr PYXVectorRegion_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorRegion")]
  public static extern void delete_PYXVectorRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_create")]
  public static extern IntPtr PYXVectorRegionVisitor_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorRegionVisitor")]
  public static extern IntPtr new_PYXVectorRegionVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_isOptimal")]
  public static extern bool PYXVectorRegionVisitor_isOptimal(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_trim")]
  public static extern IntPtr PYXVectorRegionVisitor_trim(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_getInnerTileIterator")]
  public static extern IntPtr PYXVectorRegionVisitor_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_intersects__SWIG_0")]
  public static extern int PYXVectorRegionVisitor_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_intersects__SWIG_1")]
  public static extern int PYXVectorRegionVisitor_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitor_intersects__SWIG_2")]
  public static extern int PYXVectorRegionVisitor_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorRegionVisitor")]
  public static extern void delete_PYXVectorRegionVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_clone")]
  public static extern IntPtr PYXVectorBufferRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_getVerticesCount")]
  public static extern int PYXVectorBufferRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorBufferRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorBufferRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_isPointContained__SWIG_0")]
  public static extern bool PYXVectorBufferRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_isPointContained__SWIG_1")]
  public static extern bool PYXVectorBufferRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_getBoundingCircle")]
  public static extern IntPtr PYXVectorBufferRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegion_create")]
  public static extern IntPtr PYXVectorBufferRegion_create(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorBufferRegion__SWIG_0")]
  public static extern IntPtr new_PYXVectorBufferRegion__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorBufferRegion__SWIG_1")]
  public static extern IntPtr new_PYXVectorBufferRegion__SWIG_1(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorBufferRegion")]
  public static extern void delete_PYXVectorBufferRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_clone")]
  public static extern IntPtr PYXCollectionVectorRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getVerticesCount")]
  public static extern int PYXCollectionVectorRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCollectionVectorRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCollectionVectorRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_isPointContained__SWIG_0")]
  public static extern bool PYXCollectionVectorRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_isPointContained__SWIG_1")]
  public static extern bool PYXCollectionVectorRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getBoundingCircle")]
  public static extern IntPtr PYXCollectionVectorRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_create")]
  public static extern IntPtr PYXCollectionVectorRegion_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCollectionVectorRegion__SWIG_0")]
  public static extern IntPtr new_PYXCollectionVectorRegion__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCollectionVectorRegion__SWIG_1")]
  public static extern IntPtr new_PYXCollectionVectorRegion__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getRegion__SWIG_0")]
  public static extern IntPtr PYXCollectionVectorRegion_getRegion__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_getRegionCount")]
  public static extern int PYXCollectionVectorRegion_getRegionCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_addRegion")]
  public static extern void PYXCollectionVectorRegion_addRegion(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegion_removeRegion")]
  public static extern void PYXCollectionVectorRegion_removeRegion(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCollectionVectorRegion")]
  public static extern void delete_PYXCollectionVectorRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_clone")]
  public static extern IntPtr PYXVectorPointRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getVerticesCount")]
  public static extern int PYXVectorPointRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getVisitor")]
  public static extern IntPtr PYXVectorPointRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_serializeVisitor")]
  public static extern void PYXVectorPointRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_deserializeVisitor")]
  public static extern IntPtr PYXVectorPointRegion_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXVectorPointRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXVectorPointRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_isPointContained__SWIG_0")]
  public static extern bool PYXVectorPointRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_isPointContained__SWIG_1")]
  public static extern bool PYXVectorPointRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getBoundingCircle")]
  public static extern IntPtr PYXVectorPointRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_create__SWIG_0")]
  public static extern IntPtr PYXVectorPointRegion_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_create__SWIG_1")]
  public static extern IntPtr PYXVectorPointRegion_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorPointRegion")]
  public static extern IntPtr new_PYXVectorPointRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegion_getPoint")]
  public static extern IntPtr PYXVectorPointRegion_getPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorPointRegion")]
  public static extern void delete_PYXVectorPointRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_clone")]
  public static extern IntPtr PYXCircleRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getVerticesCount")]
  public static extern int PYXCircleRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getVisitor")]
  public static extern IntPtr PYXCircleRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_serializeVisitor")]
  public static extern void PYXCircleRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_deserializeVisitor")]
  public static extern IntPtr PYXCircleRegion_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCircleRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCircleRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_isPointContained__SWIG_0")]
  public static extern bool PYXCircleRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_isPointContained__SWIG_1")]
  public static extern bool PYXCircleRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getBoundingCircle")]
  public static extern IntPtr PYXCircleRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_create__SWIG_0")]
  public static extern IntPtr PYXCircleRegion_create__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_create__SWIG_1")]
  public static extern IntPtr PYXCircleRegion_create__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_create__SWIG_2")]
  public static extern IntPtr PYXCircleRegion_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion__SWIG_0")]
  public static extern IntPtr new_PYXCircleRegion__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion__SWIG_1")]
  public static extern IntPtr new_PYXCircleRegion__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCircleRegion__SWIG_2")]
  public static extern IntPtr new_PYXCircleRegion__SWIG_2(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getCenter")]
  public static extern IntPtr PYXCircleRegion_getCenter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegion_getRadius")]
  public static extern double PYXCircleRegion_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleRegion")]
  public static extern void delete_PYXCircleRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_clone")]
  public static extern IntPtr PYXCurveRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getVerticesCount")]
  public static extern int PYXCurveRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getVisitor")]
  public static extern IntPtr PYXCurveRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_serializeVisitor")]
  public static extern void PYXCurveRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_deserializeVisitor")]
  public static extern IntPtr PYXCurveRegion_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXCurveRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXCurveRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_isPointContained__SWIG_0")]
  public static extern bool PYXCurveRegion_isPointContained__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_isPointContained__SWIG_1")]
  public static extern bool PYXCurveRegion_isPointContained__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_intersects__SWIG_0")]
  public static extern int PYXCurveRegion_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_intersects__SWIG_1")]
  public static extern int PYXCurveRegion_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_intersects__SWIG_2")]
  public static extern int PYXCurveRegion_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_intersects__SWIG_3")]
  public static extern int PYXCurveRegion_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getBoundingCircle")]
  public static extern IntPtr PYXCurveRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_create__SWIG_0")]
  public static extern IntPtr PYXCurveRegion_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_create__SWIG_1")]
  public static extern IntPtr PYXCurveRegion_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_create__SWIG_2")]
  public static extern IntPtr PYXCurveRegion_create__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_create__SWIG_3")]
  public static extern IntPtr PYXCurveRegion_create__SWIG_3(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_create__SWIG_4")]
  public static extern IntPtr PYXCurveRegion_create__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion__SWIG_0")]
  public static extern IntPtr new_PYXCurveRegion__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion__SWIG_1")]
  public static extern IntPtr new_PYXCurveRegion__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion__SWIG_2")]
  public static extern IntPtr new_PYXCurveRegion__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion__SWIG_3")]
  public static extern IntPtr new_PYXCurveRegion__SWIG_3(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCurveRegion__SWIG_4")]
  public static extern IntPtr new_PYXCurveRegion__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_closeCurve")]
  public static extern void PYXCurveRegion_closeCurve(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_isClosed")]
  public static extern bool PYXCurveRegion_isClosed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_getVertex")]
  public static extern IntPtr PYXCurveRegion_getVertex(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegion_test")]
  public static extern void PYXCurveRegion_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCurveRegion")]
  public static extern void delete_PYXCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_clone")]
  public static extern IntPtr PYXMultiCurveRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getVerticesCount")]
  public static extern int PYXMultiCurveRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiCurveRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiCurveRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_isPointContained")]
  public static extern bool PYXMultiCurveRegion_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_intersects__SWIG_0")]
  public static extern int PYXMultiCurveRegion_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_intersects__SWIG_1")]
  public static extern int PYXMultiCurveRegion_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_intersects__SWIG_2")]
  public static extern int PYXMultiCurveRegion_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_intersects__SWIG_3")]
  public static extern int PYXMultiCurveRegion_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getBoundingCircle")]
  public static extern IntPtr PYXMultiCurveRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_serializeVisitor")]
  public static extern void PYXMultiCurveRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_deserializeVisitor")]
  public static extern IntPtr PYXMultiCurveRegion_deserializeVisitor(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_create__SWIG_0")]
  public static extern IntPtr PYXMultiCurveRegion_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_create__SWIG_1")]
  public static extern IntPtr PYXMultiCurveRegion_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_create__SWIG_2")]
  public static extern IntPtr PYXMultiCurveRegion_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getCurveCount")]
  public static extern int PYXMultiCurveRegion_getCurveCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getCurveVerticesCount")]
  public static extern int PYXMultiCurveRegion_getCurveVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegion_getCurveVertex")]
  public static extern IntPtr PYXMultiCurveRegion_getCurveVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCurveRegion")]
  public static extern void delete_PYXMultiCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_clone")]
  public static extern IntPtr PYXMultiPolygonRegion_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getVerticesCount")]
  public static extern int PYXMultiPolygonRegion_getVerticesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getVisitor")]
  public static extern IntPtr PYXMultiPolygonRegion_getVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getDistanceToBorder__SWIG_0")]
  public static extern double PYXMultiPolygonRegion_getDistanceToBorder__SWIG_0(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getDistanceToBorder__SWIG_1")]
  public static extern double PYXMultiPolygonRegion_getDistanceToBorder__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_isPointContained")]
  public static extern bool PYXMultiPolygonRegion_isPointContained(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_intersects__SWIG_0")]
  public static extern int PYXMultiPolygonRegion_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_intersects__SWIG_1")]
  public static extern int PYXMultiPolygonRegion_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_intersects__SWIG_2")]
  public static extern int PYXMultiPolygonRegion_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_intersects__SWIG_3")]
  public static extern int PYXMultiPolygonRegion_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getBoundingCircle")]
  public static extern IntPtr PYXMultiPolygonRegion_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_serializeVisitor")]
  public static extern void PYXMultiPolygonRegion_serializeVisitor(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_deserializeVisitor__SWIG_0")]
  public static extern IntPtr PYXMultiPolygonRegion_deserializeVisitor__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_deserializeVisitor__SWIG_1")]
  public static extern IntPtr PYXMultiPolygonRegion_deserializeVisitor__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getExteriorPoint")]
  public static extern IntPtr PYXMultiPolygonRegion_getExteriorPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getExteriorPointContained")]
  public static extern bool PYXMultiPolygonRegion_getExteriorPointContained(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_create__SWIG_0")]
  public static extern IntPtr PYXMultiPolygonRegion_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_create__SWIG_1")]
  public static extern IntPtr PYXMultiPolygonRegion_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_create__SWIG_2")]
  public static extern IntPtr PYXMultiPolygonRegion_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getRingsCount")]
  public static extern int PYXMultiPolygonRegion_getRingsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getRingVerticesCount")]
  public static extern int PYXMultiPolygonRegion_getRingVerticesCount(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegion_getRingVertex")]
  public static extern IntPtr PYXMultiPolygonRegion_getRingVertex(HandleRef jarg1, uint jarg2, uint jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiPolygonRegion")]
  public static extern void delete_PYXMultiPolygonRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRegionBuilder")]
  public static extern IntPtr new_PYXRegionBuilder();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_addVertex__SWIG_0")]
  public static extern void PYXRegionBuilder_addVertex__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_addVertex__SWIG_1")]
  public static extern void PYXRegionBuilder_addVertex__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_closeCurve")]
  public static extern void PYXRegionBuilder_closeCurve(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_endCurve")]
  public static extern void PYXRegionBuilder_endCurve(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_suggestResolution")]
  public static extern int PYXRegionBuilder_suggestResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_createCurveRegion")]
  public static extern IntPtr PYXRegionBuilder_createCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_createPolygonRegion")]
  public static extern IntPtr PYXRegionBuilder_createPolygonRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_createCurveGeometry")]
  public static extern IntPtr PYXRegionBuilder_createCurveGeometry(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionBuilder_createPolyonGeometry")]
  public static extern IntPtr PYXRegionBuilder_createPolyonGeometry(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRegionBuilder")]
  public static extern void delete_PYXRegionBuilder(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_clone")]
  public static extern IntPtr PYXGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_isCollection")]
  public static extern bool PYXGeometry_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_isEmpty")]
  public static extern bool PYXGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_getCellResolution")]
  public static extern int PYXGeometry_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_setCellResolution")]
  public static extern void PYXGeometry_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_intersection__SWIG_0")]
  public static extern IntPtr PYXGeometry_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_intersection__SWIG_1")]
  public static extern IntPtr PYXGeometry_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_intersects__SWIG_0")]
  public static extern bool PYXGeometry_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_intersects__SWIG_1")]
  public static extern bool PYXGeometry_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_contains")]
  public static extern bool PYXGeometry_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_disjunction")]
  public static extern IntPtr PYXGeometry_disjunction(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_getIterator")]
  public static extern IntPtr PYXGeometry_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_getInnerTileIterator")]
  public static extern IntPtr PYXGeometry_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_calcPerimeter")]
  public static extern void PYXGeometry_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_copyTo__SWIG_0")]
  public static extern void PYXGeometry_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_copyTo__SWIG_1")]
  public static extern void PYXGeometry_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_getBoundingRects")]
  public static extern void PYXGeometry_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometry_getBoundingCircle")]
  public static extern IntPtr PYXGeometry_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometry")]
  public static extern void delete_PYXGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_test")]
  public static extern void PYXEmptyGeometry_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_create__SWIG_0")]
  public static extern IntPtr PYXEmptyGeometry_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_create__SWIG_1")]
  public static extern IntPtr PYXEmptyGeometry_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXEmptyGeometry")]
  public static extern IntPtr new_PYXEmptyGeometry();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXEmptyGeometry")]
  public static extern void delete_PYXEmptyGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_clone")]
  public static extern IntPtr PYXEmptyGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_isEmpty")]
  public static extern bool PYXEmptyGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_getCellResolution")]
  public static extern int PYXEmptyGeometry_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_setCellResolution")]
  public static extern void PYXEmptyGeometry_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_intersection__SWIG_0")]
  public static extern IntPtr PYXEmptyGeometry_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_intersection__SWIG_1")]
  public static extern IntPtr PYXEmptyGeometry_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_intersects__SWIG_0")]
  public static extern bool PYXEmptyGeometry_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_intersects__SWIG_1")]
  public static extern bool PYXEmptyGeometry_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_getIterator")]
  public static extern IntPtr PYXEmptyGeometry_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_calcPerimeter")]
  public static extern void PYXEmptyGeometry_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_copyTo__SWIG_0")]
  public static extern void PYXEmptyGeometry_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_copyTo__SWIG_1")]
  public static extern void PYXEmptyGeometry_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometry_getBoundingCircle")]
  public static extern IntPtr PYXEmptyGeometry_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_test")]
  public static extern void PYXGlobalGeometry_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_create__SWIG_0")]
  public static extern IntPtr PYXGlobalGeometry_create__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_create__SWIG_1")]
  public static extern IntPtr PYXGlobalGeometry_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_create__SWIG_2")]
  public static extern IntPtr PYXGlobalGeometry_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry__SWIG_0")]
  public static extern IntPtr new_PYXGlobalGeometry__SWIG_0(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGlobalGeometry__SWIG_1")]
  public static extern IntPtr new_PYXGlobalGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGlobalGeometry")]
  public static extern void delete_PYXGlobalGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_clone")]
  public static extern IntPtr PYXGlobalGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_serialize")]
  public static extern void PYXGlobalGeometry_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_isEmpty")]
  public static extern bool PYXGlobalGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_getCellResolution")]
  public static extern int PYXGlobalGeometry_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_setCellResolution")]
  public static extern void PYXGlobalGeometry_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_intersection__SWIG_0")]
  public static extern IntPtr PYXGlobalGeometry_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_intersection__SWIG_1")]
  public static extern IntPtr PYXGlobalGeometry_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_intersects__SWIG_0")]
  public static extern bool PYXGlobalGeometry_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_intersects__SWIG_1")]
  public static extern bool PYXGlobalGeometry_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_getIterator")]
  public static extern IntPtr PYXGlobalGeometry_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_calcPerimeter")]
  public static extern void PYXGlobalGeometry_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_copyTo__SWIG_0")]
  public static extern void PYXGlobalGeometry_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_copyTo__SWIG_1")]
  public static extern void PYXGlobalGeometry_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometry_getBoundingCircle")]
  public static extern IntPtr PYXGlobalGeometry_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_test")]
  public static extern void PYXCell_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_create__SWIG_0")]
  public static extern IntPtr PYXCell_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_create__SWIG_1")]
  public static extern IntPtr PYXCell_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_create__SWIG_2")]
  public static extern IntPtr PYXCell_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCell")]
  public static extern IntPtr new_PYXCell();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCell")]
  public static extern void delete_PYXCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_setIndex")]
  public static extern void PYXCell_setIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_getIndex")]
  public static extern IntPtr PYXCell_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_clone")]
  public static extern IntPtr PYXCell_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_isEmpty")]
  public static extern bool PYXCell_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_setEmpty")]
  public static extern void PYXCell_setEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_getCellResolution")]
  public static extern int PYXCell_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_setCellResolution")]
  public static extern void PYXCell_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersection__SWIG_0")]
  public static extern IntPtr PYXCell_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersection__SWIG_1")]
  public static extern IntPtr PYXCell_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersection__SWIG_2")]
  public static extern IntPtr PYXCell_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersects__SWIG_0")]
  public static extern bool PYXCell_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersects__SWIG_1")]
  public static extern bool PYXCell_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_intersects__SWIG_2")]
  public static extern bool PYXCell_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_getIterator")]
  public static extern IntPtr PYXCell_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_calcPerimeter")]
  public static extern void PYXCell_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_copyTo__SWIG_0")]
  public static extern void PYXCell_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_copyTo__SWIG_1")]
  public static extern void PYXCell_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_getBoundingRects")]
  public static extern void PYXCell_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCell_getBoundingCircle")]
  public static extern IntPtr PYXCell_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTest")]
  public static extern void delete_PYXTest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_initialize")]
  public static extern void PYXTest_initialize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_getDataResolution")]
  public static extern int PYXTest_getDataResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_setDataResolution")]
  public static extern void PYXTest_setDataResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_getTargetResolution")]
  public static extern int PYXTest_getTargetResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_setTargetResolution")]
  public static extern void PYXTest_setTargetResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_setAbortOnYes")]
  public static extern void PYXTest_setAbortOnYes(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTest_testIndex")]
  public static extern int PYXTest_testIndex(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_test")]
  public static extern void PYXTile_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_knDefaultTileDepth_get")]
  public static extern int PYXTile_knDefaultTileDepth_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_create__SWIG_0")]
  public static extern IntPtr PYXTile_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_create__SWIG_1")]
  public static extern IntPtr PYXTile_create__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTile")]
  public static extern IntPtr new_PYXTile();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTile")]
  public static extern void delete_PYXTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_clone")]
  public static extern IntPtr PYXTile_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_isEmpty")]
  public static extern bool PYXTile_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getCellResolution")]
  public static extern int PYXTile_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_setCellResolution")]
  public static extern void PYXTile_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_setOriginChildRoot")]
  public static extern void PYXTile_setOriginChildRoot(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getBoundingCell")]
  public static extern IntPtr PYXTile_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getBoundingRects")]
  public static extern void PYXTile_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersection__SWIG_0")]
  public static extern IntPtr PYXTile_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersection__SWIG_1")]
  public static extern IntPtr PYXTile_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersection__SWIG_2")]
  public static extern IntPtr PYXTile_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersection__SWIG_3")]
  public static extern IntPtr PYXTile_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersects__SWIG_0")]
  public static extern bool PYXTile_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersects__SWIG_1")]
  public static extern bool PYXTile_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersects__SWIG_2")]
  public static extern bool PYXTile_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_intersects__SWIG_3")]
  public static extern bool PYXTile_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getIterator")]
  public static extern IntPtr PYXTile_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_calcPerimeter")]
  public static extern void PYXTile_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getBoundingCircle")]
  public static extern IntPtr PYXTile_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_copyTo__SWIG_0")]
  public static extern void PYXTile_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_copyTo__SWIG_1")]
  public static extern void PYXTile_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_hasIndex")]
  public static extern bool PYXTile_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getRootIndex")]
  public static extern IntPtr PYXTile_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getDepth")]
  public static extern int PYXTile_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTile_getCellCount")]
  public static extern int PYXTile_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_test")]
  public static extern void PYXInnerTile_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_create__SWIG_0")]
  public static extern IntPtr PYXInnerTile_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_covertToInnerTile")]
  public static extern bool PYXInnerTile_covertToInnerTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_create__SWIG_1")]
  public static extern IntPtr PYXInnerTile_create__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_createInnerTiles")]
  public static extern IntPtr PYXInnerTile_createInnerTiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXInnerTile")]
  public static extern IntPtr new_PYXInnerTile();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerTile")]
  public static extern void delete_PYXInnerTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_clone")]
  public static extern IntPtr PYXInnerTile_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_isEmpty")]
  public static extern bool PYXInnerTile_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_isAncestorOf")]
  public static extern bool PYXInnerTile_isAncestorOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getCellResolution")]
  public static extern int PYXInnerTile_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_setCellResolution")]
  public static extern void PYXInnerTile_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getBoundingCell")]
  public static extern IntPtr PYXInnerTile_getBoundingCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getBoundingRects")]
  public static extern void PYXInnerTile_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersection__SWIG_0")]
  public static extern IntPtr PYXInnerTile_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersection__SWIG_1")]
  public static extern IntPtr PYXInnerTile_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersection__SWIG_2")]
  public static extern IntPtr PYXInnerTile_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersection__SWIG_3")]
  public static extern IntPtr PYXInnerTile_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersects__SWIG_0")]
  public static extern bool PYXInnerTile_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersects__SWIG_1")]
  public static extern bool PYXInnerTile_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersects__SWIG_2")]
  public static extern bool PYXInnerTile_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_intersects__SWIG_3")]
  public static extern bool PYXInnerTile_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getIterator")]
  public static extern IntPtr PYXInnerTile_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_calcPerimeter")]
  public static extern void PYXInnerTile_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getBoundingCircle")]
  public static extern IntPtr PYXInnerTile_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_copyTo__SWIG_0")]
  public static extern void PYXInnerTile_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_copyTo__SWIG_1")]
  public static extern void PYXInnerTile_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_hasIndex")]
  public static extern bool PYXInnerTile_hasIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getRootIndex")]
  public static extern IntPtr PYXInnerTile_getRootIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getDepth")]
  public static extern int PYXInnerTile_getDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_getCellCount")]
  public static extern int PYXInnerTile_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTile_asTile")]
  public static extern IntPtr PYXInnerTile_asTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_test")]
  public static extern void PYXPrimeInnerTileIterator_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXPrimeInnerTileIterator")]
  public static extern IntPtr new_PYXPrimeInnerTileIterator();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_getPrimeInnerTileRoot")]
  public static extern IntPtr PYXPrimeInnerTileIterator_getPrimeInnerTileRoot(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_getPrimeInnerTileRootByPosition")]
  public static extern IntPtr PYXPrimeInnerTileIterator_getPrimeInnerTileRootByPosition(uint jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_getPrimeInnerTileRootPosition")]
  public static extern uint PYXPrimeInnerTileIterator_getPrimeInnerTileRootPosition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_totalCount_get")]
  public static extern uint PYXPrimeInnerTileIterator_totalCount_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_initStaticData")]
  public static extern void PYXPrimeInnerTileIterator_initStaticData();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_freeStaticData")]
  public static extern void PYXPrimeInnerTileIterator_freeStaticData();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_getIndex")]
  public static extern IntPtr PYXPrimeInnerTileIterator_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_getPosition")]
  public static extern uint PYXPrimeInnerTileIterator_getPosition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_next")]
  public static extern void PYXPrimeInnerTileIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIterator_end")]
  public static extern bool PYXPrimeInnerTileIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXPrimeInnerTileIterator")]
  public static extern void delete_PYXPrimeInnerTileIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_getTile")]
  public static extern IntPtr PYXInnerTileIntersectionIterator_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_getIntersection")]
  public static extern int PYXInnerTileIntersectionIterator_getIntersection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_intersects")]
  public static extern bool PYXInnerTileIntersectionIterator_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIterator_nextTileWithIntersection")]
  public static extern void PYXInnerTileIntersectionIterator_nextTileWithIntersection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXInnerTileIntersectionIterator")]
  public static extern void delete_PYXInnerTileIntersectionIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometryCollection")]
  public static extern void delete_PYXGeometryCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_isCollection")]
  public static extern bool PYXGeometryCollection_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_getIterator")]
  public static extern IntPtr PYXGeometryCollection_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_clear")]
  public static extern void PYXGeometryCollection_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_setCellResolution")]
  public static extern void PYXGeometryCollection_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_getGeometryCount")]
  public static extern int PYXGeometryCollection_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_getGeometryIterator")]
  public static extern IntPtr PYXGeometryCollection_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_getBoundingRects")]
  public static extern void PYXGeometryCollection_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollection_getBoundingCircle")]
  public static extern IntPtr PYXGeometryCollection_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_test")]
  public static extern void PYXTileCollection_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_create__SWIG_0")]
  public static extern IntPtr PYXTileCollection_create__SWIG_0(bool jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_create__SWIG_1")]
  public static extern IntPtr PYXTileCollection_create__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_create__SWIG_2")]
  public static extern IntPtr PYXTileCollection_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_create__SWIG_3")]
  public static extern IntPtr PYXTileCollection_create__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_create__SWIG_4")]
  public static extern IntPtr PYXTileCollection_create__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection__SWIG_0")]
  public static extern IntPtr new_PYXTileCollection__SWIG_0(bool jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection__SWIG_1")]
  public static extern IntPtr new_PYXTileCollection__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection__SWIG_2")]
  public static extern IntPtr new_PYXTileCollection__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection__SWIG_3")]
  public static extern IntPtr new_PYXTileCollection__SWIG_3(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollection__SWIG_4")]
  public static extern IntPtr new_PYXTileCollection__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTileCollection")]
  public static extern void delete_PYXTileCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_clone")]
  public static extern IntPtr PYXTileCollection_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_serialize")]
  public static extern void PYXTileCollection_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_deserialize")]
  public static extern void PYXTileCollection_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_isEmpty")]
  public static extern bool PYXTileCollection_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_clear")]
  public static extern void PYXTileCollection_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getCellResolution")]
  public static extern int PYXTileCollection_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_setCellResolution")]
  public static extern void PYXTileCollection_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersection__SWIG_0")]
  public static extern IntPtr PYXTileCollection_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersection__SWIG_1")]
  public static extern IntPtr PYXTileCollection_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersection__SWIG_2")]
  public static extern IntPtr PYXTileCollection_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersection__SWIG_3")]
  public static extern IntPtr PYXTileCollection_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersection__SWIG_4")]
  public static extern IntPtr PYXTileCollection_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_0")]
  public static extern bool PYXTileCollection_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_1")]
  public static extern bool PYXTileCollection_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_2")]
  public static extern bool PYXTileCollection_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_3")]
  public static extern bool PYXTileCollection_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_4")]
  public static extern bool PYXTileCollection_intersects__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_intersects__SWIG_5")]
  public static extern bool PYXTileCollection_intersects__SWIG_5(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_contains__SWIG_0")]
  public static extern bool PYXTileCollection_contains__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_contains__SWIG_1")]
  public static extern bool PYXTileCollection_contains__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_disjunction__SWIG_0")]
  public static extern IntPtr PYXTileCollection_disjunction__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_disjunction__SWIG_1")]
  public static extern IntPtr PYXTileCollection_disjunction__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getGeometryCount")]
  public static extern int PYXTileCollection_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getGeometryIterator")]
  public static extern IntPtr PYXTileCollection_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getTileIterator")]
  public static extern IntPtr PYXTileCollection_getTileIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getInnerTileIterator")]
  public static extern IntPtr PYXTileCollection_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_calcPerimeter")]
  public static extern void PYXTileCollection_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_copyTo__SWIG_0")]
  public static extern void PYXTileCollection_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_copyTo__SWIG_1")]
  public static extern void PYXTileCollection_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getBoundingCircle")]
  public static extern IntPtr PYXTileCollection_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_addTile__SWIG_0")]
  public static extern void PYXTileCollection_addTile__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_addTile__SWIG_1")]
  public static extern void PYXTileCollection_addTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_addTile__SWIG_2")]
  public static extern void PYXTileCollection_addTile__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_addGeometry")]
  public static extern void PYXTileCollection_addGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getAutoAggregate")]
  public static extern bool PYXTileCollection_getAutoAggregate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_isEqual")]
  public static extern bool PYXTileCollection_isEqual(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_limitCellsCountTo")]
  public static extern void PYXTileCollection_limitCellsCountTo(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getCellCount")]
  public static extern int PYXTileCollection_getCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollection_getAreaOnReferenceShpere")]
  public static extern double PYXTileCollection_getAreaOnReferenceShpere(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_create")]
  public static extern IntPtr PYXTileCollectionIterator_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXTileCollectionIterator")]
  public static extern IntPtr new_PYXTileCollectionIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXTileCollectionIterator")]
  public static extern void delete_PYXTileCollectionIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_reset")]
  public static extern void PYXTileCollectionIterator_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_next")]
  public static extern void PYXTileCollectionIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_end")]
  public static extern bool PYXTileCollectionIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_getGeometry")]
  public static extern IntPtr PYXTileCollectionIterator_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionIterator_getTile")]
  public static extern IntPtr PYXTileCollectionIterator_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosTraverser")]
  public static extern void delete_PYXIcosTraverser(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_traverse__SWIG_0")]
  public static extern bool PYXIcosTraverser_traverse__SWIG_0(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_traverse__SWIG_1")]
  public static extern bool PYXIcosTraverser_traverse__SWIG_1(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_traverse__SWIG_2")]
  public static extern bool PYXIcosTraverser_traverse__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_traverse__SWIG_3")]
  public static extern bool PYXIcosTraverser_traverse__SWIG_3(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_traverse__SWIG_4")]
  public static extern bool PYXIcosTraverser_traverse__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTraverser_setGeometry")]
  public static extern void PYXIcosTraverser_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTestTraverser_test")]
  public static extern void PYXIcosTestTraverser_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXIcosTestTraverser")]
  public static extern IntPtr new_PYXIcosTestTraverser();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTestTraverser_getTileCollection")]
  public static extern IntPtr PYXIcosTestTraverser_getTileCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTestTraverser_setTest")]
  public static extern void PYXIcosTestTraverser_setTest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXIcosTestTraverser")]
  public static extern void delete_PYXIcosTestTraverser(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_test")]
  public static extern void PYXMultiCell_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_create__SWIG_0")]
  public static extern IntPtr PYXMultiCell_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_create__SWIG_1")]
  public static extern IntPtr PYXMultiCell_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXMultiCell")]
  public static extern IntPtr new_PYXMultiCell();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXMultiCell")]
  public static extern void delete_PYXMultiCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_addIndex")]
  public static extern void PYXMultiCell_addIndex(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_addCell")]
  public static extern void PYXMultiCell_addCell(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_clone")]
  public static extern IntPtr PYXMultiCell_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_isEmpty")]
  public static extern bool PYXMultiCell_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_setEmpty")]
  public static extern void PYXMultiCell_setEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_getCellResolution")]
  public static extern int PYXMultiCell_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_setCellResolution")]
  public static extern void PYXMultiCell_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersection__SWIG_0")]
  public static extern IntPtr PYXMultiCell_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersection__SWIG_1")]
  public static extern IntPtr PYXMultiCell_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersection__SWIG_2")]
  public static extern IntPtr PYXMultiCell_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersection__SWIG_3")]
  public static extern IntPtr PYXMultiCell_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersects__SWIG_0")]
  public static extern bool PYXMultiCell_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersects__SWIG_1")]
  public static extern bool PYXMultiCell_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersects__SWIG_2")]
  public static extern bool PYXMultiCell_intersects__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_intersects__SWIG_3")]
  public static extern bool PYXMultiCell_intersects__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_getIterator")]
  public static extern IntPtr PYXMultiCell_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_calcPerimeter")]
  public static extern void PYXMultiCell_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_copyTo__SWIG_0")]
  public static extern void PYXMultiCell_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_copyTo__SWIG_1")]
  public static extern void PYXMultiCell_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCell_getBoundingCircle")]
  public static extern IntPtr PYXMultiCell_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_test")]
  public static extern void PYXCircleGeometry_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_create__SWIG_0")]
  public static extern IntPtr PYXCircleGeometry_create__SWIG_0(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_create__SWIG_1")]
  public static extern IntPtr PYXCircleGeometry_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCircleGeometry")]
  public static extern void delete_PYXCircleGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_isEmpty")]
  public static extern bool PYXCircleGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_setRadius")]
  public static extern void PYXCircleGeometry_setRadius(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getRadius")]
  public static extern double PYXCircleGeometry_getRadius(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getCentre")]
  public static extern IntPtr PYXCircleGeometry_getCentre(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_clear")]
  public static extern void PYXCircleGeometry_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getGeometryCount")]
  public static extern int PYXCircleGeometry_getGeometryCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_setCellResolution")]
  public static extern void PYXCircleGeometry_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getCellResolution")]
  public static extern int PYXCircleGeometry_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getGeometryIterator")]
  public static extern IntPtr PYXCircleGeometry_getGeometryIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_calcPerimeter")]
  public static extern void PYXCircleGeometry_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_clone")]
  public static extern IntPtr PYXCircleGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_copyTo__SWIG_0")]
  public static extern void PYXCircleGeometry_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_copyTo__SWIG_1")]
  public static extern void PYXCircleGeometry_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_setCentrePoint")]
  public static extern void PYXCircleGeometry_setCentrePoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_serialize")]
  public static extern void PYXCircleGeometry_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_deserialize")]
  public static extern void PYXCircleGeometry_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_intersects__SWIG_0")]
  public static extern bool PYXCircleGeometry_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_intersects__SWIG_1")]
  public static extern bool PYXCircleGeometry_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_intersection__SWIG_0")]
  public static extern IntPtr PYXCircleGeometry_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_intersection__SWIG_1")]
  public static extern IntPtr PYXCircleGeometry_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometry_getBoundingCircle")]
  public static extern IntPtr PYXCircleGeometry_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_create__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry_create__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_create__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_create__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry__SWIG_0")]
  public static extern IntPtr new_PYXVectorGeometry__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry__SWIG_1")]
  public static extern IntPtr new_PYXVectorGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry__SWIG_2")]
  public static extern IntPtr new_PYXVectorGeometry__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorGeometry")]
  public static extern void delete_PYXVectorGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_getRegion")]
  public static extern IntPtr PYXVectorGeometry_getRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_setRegion")]
  public static extern void PYXVectorGeometry_setRegion(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_clone")]
  public static extern IntPtr PYXVectorGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_isEmpty")]
  public static extern bool PYXVectorGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_getCellResolution")]
  public static extern int PYXVectorGeometry_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_setCellResolution")]
  public static extern void PYXVectorGeometry_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersection__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersection__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersection__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersection__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersection__SWIG_4")]
  public static extern IntPtr PYXVectorGeometry_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_contains")]
  public static extern bool PYXVectorGeometry_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersects__SWIG_0")]
  public static extern bool PYXVectorGeometry_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_intersects__SWIG_1")]
  public static extern bool PYXVectorGeometry_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_getIterator")]
  public static extern IntPtr PYXVectorGeometry_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_getInnerTileIterator")]
  public static extern IntPtr PYXVectorGeometry_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_calcPerimeter")]
  public static extern void PYXVectorGeometry_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_getBoundingCircle")]
  public static extern IntPtr PYXVectorGeometry_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_copyTo__SWIG_0")]
  public static extern void PYXVectorGeometry_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_copyTo__SWIG_1")]
  public static extern void PYXVectorGeometry_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_initStaticData")]
  public static extern void PYXVectorGeometry_initStaticData();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry_freeStaticData")]
  public static extern void PYXVectorGeometry_freeStaticData();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_create__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry2_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_create__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry2_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_create__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry2_create__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_createFromPoint")]
  public static extern IntPtr PYXVectorGeometry2_createFromPoint(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_createFromLine")]
  public static extern IntPtr PYXVectorGeometry2_createFromLine(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_create__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry2_create__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2__SWIG_0")]
  public static extern IntPtr new_PYXVectorGeometry2__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2__SWIG_1")]
  public static extern IntPtr new_PYXVectorGeometry2__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2__SWIG_2")]
  public static extern IntPtr new_PYXVectorGeometry2__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXVectorGeometry2__SWIG_3")]
  public static extern IntPtr new_PYXVectorGeometry2__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXVectorGeometry2")]
  public static extern void delete_PYXVectorGeometry2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_deserialize")]
  public static extern void PYXVectorGeometry2_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_serialize__SWIG_0")]
  public static extern void PYXVectorGeometry2_serialize__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_serialize__SWIG_1")]
  public static extern void PYXVectorGeometry2_serialize__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getRegion")]
  public static extern IntPtr PYXVectorGeometry2_getRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_clone")]
  public static extern IntPtr PYXVectorGeometry2_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_isEmpty")]
  public static extern bool PYXVectorGeometry2_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getCellResolution")]
  public static extern int PYXVectorGeometry2_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_setCellResolution")]
  public static extern void PYXVectorGeometry2_setCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersection__SWIG_0")]
  public static extern IntPtr PYXVectorGeometry2_intersection__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersection__SWIG_1")]
  public static extern IntPtr PYXVectorGeometry2_intersection__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersection__SWIG_2")]
  public static extern IntPtr PYXVectorGeometry2_intersection__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersection__SWIG_3")]
  public static extern IntPtr PYXVectorGeometry2_intersection__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersection__SWIG_4")]
  public static extern IntPtr PYXVectorGeometry2_intersection__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_contains")]
  public static extern bool PYXVectorGeometry2_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersects__SWIG_0")]
  public static extern bool PYXVectorGeometry2_intersects__SWIG_0(HandleRef jarg1, HandleRef jarg2, bool jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_intersects__SWIG_1")]
  public static extern bool PYXVectorGeometry2_intersects__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getIterator")]
  public static extern IntPtr PYXVectorGeometry2_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getInnerTileIterator")]
  public static extern IntPtr PYXVectorGeometry2_getInnerTileIterator(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_calcPerimeter")]
  public static extern void PYXVectorGeometry2_calcPerimeter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getBoundingCircle")]
  public static extern IntPtr PYXVectorGeometry2_getBoundingCircle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_copyTo__SWIG_0")]
  public static extern void PYXVectorGeometry2_copyTo__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_copyTo__SWIG_1")]
  public static extern void PYXVectorGeometry2_copyTo__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_getBoundingRects")]
  public static extern void PYXVectorGeometry2_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2_test")]
  public static extern void PYXVectorGeometry2_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometrySerializer_test")]
  public static extern void PYXGeometrySerializer_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometrySerializer_deserializeFromBase64")]
  public static extern IntPtr PYXGeometrySerializer_deserializeFromBase64(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometrySerializer_serializeToBase64")]
  public static extern IntPtr PYXGeometrySerializer_serializeToBase64(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXGeometrySerializer")]
  public static extern IntPtr new_PYXGeometrySerializer();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometrySerializer")]
  public static extern void delete_PYXGeometrySerializer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_resolve")]
  public static extern IntPtr ProcessResolver_resolve(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_notifyResolve")]
  public static extern IntPtr ProcessResolver_notifyResolve(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessResolver_notifyFinalize")]
  public static extern void ProcessResolver_notifyFinalize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessResolver")]
  public static extern IntPtr new_ProcessResolver();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessResolver")]
  public static extern void delete_ProcessResolver(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_getProcess__SWIG_0")]
  public static extern IntPtr PipeManager_getProcess__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_getProcess__SWIG_1")]
  public static extern IntPtr PipeManager_getProcess__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_notifyFinalize")]
  public static extern void PipeManager_notifyFinalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_getWrappedProcessNotifier")]
  public static extern IntPtr PipeManager_getWrappedProcessNotifier();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_getProcessProcessingNotifier")]
  public static extern IntPtr PipeManager_getProcessProcessingNotifier();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_pushProcessResolver")]
  public static extern void PipeManager_pushProcessResolver(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_popProcessResolver")]
  public static extern IntPtr PipeManager_popProcessResolver();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_clearProcessResolvers")]
  public static extern void PipeManager_clearProcessResolvers();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_import__SWIG_0")]
  public static extern IntPtr PipeManager_import__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_import__SWIG_1")]
  public static extern IntPtr PipeManager_import__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_import__SWIG_2")]
  public static extern IntPtr PipeManager_import__SWIG_2(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_importStr")]
  public static extern IntPtr PipeManager_importStr(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_releaseMemoryIfPossible")]
  public static extern void PipeManager_releaseMemoryIfPossible();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_getProcessPath")]
  public static extern IntPtr PipeManager_getProcessPath();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writeProcess")]
  public static extern void PipeManager_writeProcess(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writeProcessToFile")]
  public static extern void PipeManager_writeProcessToFile(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writeProcessToString")]
  public static extern void PipeManager_writeProcessToString(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writePipeline")]
  public static extern void PipeManager_writePipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writePipelineToFile")]
  public static extern void PipeManager_writePipelineToFile(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writePipelineToString")]
  public static extern void PipeManager_writePipelineToString(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readProcess")]
  public static extern IntPtr PipeManager_readProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readProcessFromFile")]
  public static extern IntPtr PipeManager_readProcessFromFile(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readProcessFromString")]
  public static extern IntPtr PipeManager_readProcessFromString(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readPipeline")]
  public static extern IntPtr PipeManager_readPipeline(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readPipelineFromFile")]
  public static extern IntPtr PipeManager_readPipelineFromFile(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_readPipelineFromString")]
  public static extern IntPtr PipeManager_readPipelineFromString(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_exists")]
  public static extern bool PipeManager_exists();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writeProcessToNewString")]
  public static extern IntPtr PipeManager_writeProcessToNewString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeManager_writePipelineToNewString")]
  public static extern IntPtr PipeManager_writePipelineToNewString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeManager")]
  public static extern IntPtr new_PipeManager();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipeManager")]
  public static extern void delete_PipeManager(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_pruneNonRoots")]
  public static extern void PipeUtils_pruneNonRoots(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_cloneProcess")]
  public static extern IntPtr PipeUtils_cloneProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_clonePipeline")]
  public static extern IntPtr PipeUtils_clonePipeline(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_modifyPipeline__SWIG_0")]
  public static extern IntPtr PipeUtils_modifyPipeline__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_modifyPipeline__SWIG_1")]
  public static extern IntPtr PipeUtils_modifyPipeline__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_pipeToTree__SWIG_0")]
  public static extern IntPtr PipeUtils_pipeToTree__SWIG_0(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_pipeToTree__SWIG_1")]
  public static extern IntPtr PipeUtils_pipeToTree__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_pipeToTree__SWIG_2")]
  public static extern IntPtr PipeUtils_pipeToTree__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_findFirstError__SWIG_0")]
  public static extern IntPtr PipeUtils_findFirstError__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_findFirstError__SWIG_1")]
  public static extern IntPtr PipeUtils_findFirstError__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_findProcsOfType")]
  public static extern int PipeUtils_findProcsOfType(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_findProcsOfClass")]
  public static extern int PipeUtils_findProcsOfClass(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_findAsParameter")]
  public static extern bool PipeUtils_findAsParameter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_doesPipelineContainProcRef")]
  public static extern bool PipeUtils_doesPipelineContainProcRef(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_isPipelineIdentityStable")]
  public static extern bool PipeUtils_isPipelineIdentityStable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_waitUntilPipelineIdentityStable")]
  public static extern void PipeUtils_waitUntilPipelineIdentityStable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeUtils_getProcessIdentityCacheDirectory")]
  public static extern IntPtr PipeUtils_getProcessIdentityCacheDirectory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PipeUtils")]
  public static extern IntPtr new_PipeUtils();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipeUtils")]
  public static extern void delete_PipeUtils(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_create__SWIG_0")]
  public static extern IntPtr ProcessSpec_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_create__SWIG_1")]
  public static extern IntPtr ProcessSpec_create__SWIG_1(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_write__SWIG_0")]
  public static extern void ProcessSpec_write__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_read__SWIG_0")]
  public static extern void ProcessSpec_read__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_write__SWIG_1")]
  public static extern IntPtr ProcessSpec_write__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_read__SWIG_1")]
  public static extern void ProcessSpec_read__SWIG_1(IntPtr jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getOutputInterfaces")]
  public static extern IntPtr ProcessSpec_getOutputInterfaces(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getClass")]
  public static extern IntPtr ProcessSpec_getClass(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getParameterCount")]
  public static extern int ProcessSpec_getParameterCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getParameter")]
  public static extern IntPtr ProcessSpec_getParameter(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getName")]
  public static extern IntPtr ProcessSpec_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getDescription")]
  public static extern IntPtr ProcessSpec_getDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_getCategory")]
  public static extern IntPtr ProcessSpec_getCategory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_providesOutputType")]
  public static extern bool ProcessSpec_providesOutputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_hasInputType")]
  public static extern bool ProcessSpec_hasInputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setOutputIIDs")]
  public static extern void ProcessSpec_setOutputIIDs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setClass")]
  public static extern void ProcessSpec_setClass(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setName")]
  public static extern void ProcessSpec_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setDescription")]
  public static extern void ProcessSpec_setDescription(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setCategory")]
  public static extern void ProcessSpec_setCategory(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessSpec_setParameterSpecs")]
  public static extern void ProcessSpec_setParameterSpecs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessSpec")]
  public static extern void delete_ProcessSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_getProcess")]
  public static extern IntPtr ProcessEvent_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_create")]
  public static extern IntPtr ProcessEvent_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEvent_dynamic_cast")]
  public static extern IntPtr ProcessEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessEvent")]
  public static extern void delete_ProcessEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Error_set")]
  public static extern void ProcessProcessingEvent_Error_set(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Error_get")]
  public static extern IntPtr ProcessProcessingEvent_Error_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Processing_set")]
  public static extern void ProcessProcessingEvent_Processing_set(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Processing_get")]
  public static extern IntPtr ProcessProcessingEvent_Processing_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Fetching_set")]
  public static extern void ProcessProcessingEvent_Fetching_set(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Fetching_get")]
  public static extern IntPtr ProcessProcessingEvent_Fetching_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Downloading_set")]
  public static extern void ProcessProcessingEvent_Downloading_set(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_Downloading_get")]
  public static extern IntPtr ProcessProcessingEvent_Downloading_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_getProcessingMessage")]
  public static extern IntPtr ProcessProcessingEvent_getProcessingMessage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_create")]
  public static extern IntPtr ProcessProcessingEvent_create(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessProcessingEvent")]
  public static extern IntPtr new_ProcessProcessingEvent(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEvent_dynamic_cast")]
  public static extern IntPtr ProcessProcessingEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessProcessingEvent")]
  public static extern void delete_ProcessProcessingEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessVersionEvent_create")]
  public static extern IntPtr ProcessVersionEvent_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessVersionEvent")]
  public static extern void delete_ProcessVersionEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_iid_get")]
  public static extern IntPtr IProcess_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getProcID")]
  public static extern IntPtr IProcess_getProcID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getProcVersion")]
  public static extern int IProcess_getProcVersion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getProcName")]
  public static extern IntPtr IProcess_getProcName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getProcDescription")]
  public static extern IntPtr IProcess_getProcDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getSpec")]
  public static extern IntPtr IProcess_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getOutput_const")]
  public static extern IntPtr IProcess_getOutput_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getOutput")]
  public static extern IntPtr IProcess_getOutput(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getParameterCount")]
  public static extern int IProcess_getParameterCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getParameter")]
  public static extern IntPtr IProcess_getParameter(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getParameters")]
  public static extern IntPtr IProcess_getParameters(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_equals")]
  public static extern bool IProcess_equals(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getHashCode")]
  public static extern int IProcess_getHashCode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getIdentity")]
  public static extern IntPtr IProcess_getIdentity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getAttributeSchema")]
  public static extern IntPtr IProcess_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getAttributes")]
  public static extern IntPtr IProcess_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getData")]
  public static extern IntPtr IProcess_getData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getNotifier")]
  public static extern IntPtr IProcess_getNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getDataChanged")]
  public static extern IntPtr IProcess_getDataChanged(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setProcID")]
  public static extern void IProcess_setProcID(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setProcVersion")]
  public static extern void IProcess_setProcVersion(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setProcName")]
  public static extern void IProcess_setProcName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setProcDescription")]
  public static extern void IProcess_setProcDescription(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setAttributes")]
  public static extern void IProcess_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setData")]
  public static extern void IProcess_setData(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setParameters")]
  public static extern void IProcess_setParameters(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_initProc__SWIG_0")]
  public static extern int IProcess_initProc__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_initProc__SWIG_1")]
  public static extern int IProcess_initProc__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_reinitProc__SWIG_0")]
  public static extern int IProcess_reinitProc__SWIG_0(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_reinitProc__SWIG_1")]
  public static extern int IProcess_reinitProc__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getInitError")]
  public static extern IntPtr IProcess_getInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_getInitState")]
  public static extern int IProcess_getInitState(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_setFinalize")]
  public static extern bool IProcess_setFinalize(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcess_ProvidesOutputType")]
  public static extern bool IProcess_ProvidesOutputType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcess")]
  public static extern void delete_IProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_create__SWIG_0")]
  public static extern IntPtr ProcessDataChangedEvent_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_create__SWIG_1")]
  public static extern IntPtr ProcessDataChangedEvent_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_create__SWIG_2")]
  public static extern IntPtr ProcessDataChangedEvent_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_getProcess")]
  public static extern IntPtr ProcessDataChangedEvent_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_getGeometry")]
  public static extern IntPtr ProcessDataChangedEvent_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEvent_getDataChangeTrigger")]
  public static extern int ProcessDataChangedEvent_getDataChangeTrigger(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessDataChangedEvent")]
  public static extern void delete_ProcessDataChangedEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcRef__SWIG_0")]
  public static extern IntPtr new_ProcRef__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcRef__SWIG_1")]
  public static extern IntPtr new_ProcRef__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcRef__SWIG_2")]
  public static extern IntPtr new_ProcRef__SWIG_2(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcRef_getProcID")]
  public static extern IntPtr ProcRef_getProcID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcRef_getProcVersion")]
  public static extern int ProcRef_getProcVersion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcRef")]
  public static extern void delete_ProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_procRefToStr")]
  public static extern IntPtr procRefToStr(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_strToProcRef")]
  public static extern IntPtr strToProcRef(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeIndication_create")]
  public static extern IntPtr ProcessLifeTimeIndication_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeIndication_getProcName")]
  public static extern IntPtr ProcessLifeTimeIndication_getProcName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeIndication_getProcRef")]
  public static extern IntPtr ProcessLifeTimeIndication_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeIndication_getProcSpec")]
  public static extern IntPtr ProcessLifeTimeIndication_getProcSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessLifeTimeIndication")]
  public static extern void delete_ProcessLifeTimeIndication(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeTracker_notifyProcessCreated")]
  public static extern void ProcessLifeTimeTracker_notifyProcessCreated(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeTracker_notifyProcessDestoryed")]
  public static extern void ProcessLifeTimeTracker_notifyProcessDestoryed(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeTracker_getTrackedProcessCount")]
  public static extern int ProcessLifeTimeTracker_getTrackedProcessCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeTracker_getTrackedProcesses")]
  public static extern IntPtr ProcessLifeTimeTracker_getTrackedProcesses(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessLifeTimeTracker_getInstance")]
  public static extern IntPtr ProcessLifeTimeTracker_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessLifeTimeTracker")]
  public static extern IntPtr new_ProcessLifeTimeTracker();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessLifeTimeTracker")]
  public static extern void delete_ProcessLifeTimeTracker(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_verifySpec")]
  public static extern bool verifySpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_iid_get")]
  public static extern IntPtr IProcessInitError_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_getError")]
  public static extern IntPtr IProcessInitError_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_setError")]
  public static extern void IProcessInitError_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitError_getErrorID")]
  public static extern IntPtr IProcessInitError_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessInitError")]
  public static extern void delete_IProcessInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcInitErrorBase_getError")]
  public static extern IntPtr ProcInitErrorBase_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcInitErrorBase_setError")]
  public static extern void ProcInitErrorBase_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcInitErrorBase")]
  public static extern void delete_ProcInitErrorBase(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_clsid_get")]
  public static extern IntPtr GenericProcInitError_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_aiid_get")]
  public static extern IntPtr GenericProcInitError_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_niid_get")]
  public static extern int GenericProcInitError_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_AddRef")]
  public static extern uint GenericProcInitError_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_Release")]
  public static extern uint GenericProcInitError_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitError_getErrorID")]
  public static extern IntPtr GenericProcInitError_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GenericProcInitError")]
  public static extern IntPtr new_GenericProcInitError();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GenericProcInitError")]
  public static extern void delete_GenericProcInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_clsid_get")]
  public static extern IntPtr InputInitError_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_aiid_get")]
  public static extern IntPtr InputInitError_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_niid_get")]
  public static extern int InputInitError_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_AddRef")]
  public static extern uint InputInitError_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_Release")]
  public static extern uint InputInitError_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitError_getErrorID")]
  public static extern IntPtr InputInitError_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_InputInitError")]
  public static extern IntPtr new_InputInitError();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_InputInitError")]
  public static extern void delete_InputInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_clsid_get")]
  public static extern IntPtr ProcSpecFailure_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_aiid_get")]
  public static extern IntPtr ProcSpecFailure_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_niid_get")]
  public static extern int ProcSpecFailure_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_AddRef")]
  public static extern uint ProcSpecFailure_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_Release")]
  public static extern uint ProcSpecFailure_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailure_getErrorID")]
  public static extern IntPtr ProcSpecFailure_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcSpecFailure")]
  public static extern IntPtr new_ProcSpecFailure();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcSpecFailure")]
  public static extern void delete_ProcSpecFailure(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_create")]
  public static extern IntPtr ProcessList_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessList")]
  public static extern void delete_ProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_hasProcs")]
  public static extern bool ProcessList_hasProcs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_contains")]
  public static extern bool ProcessList_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_addProc__SWIG_0")]
  public static extern void ProcessList_addProc__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_addProc__SWIG_1")]
  public static extern void ProcessList_addProc__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_removeProc")]
  public static extern void ProcessList_removeProc(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_clear")]
  public static extern void ProcessList_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_count")]
  public static extern int ProcessList_count(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_getProcessRefs")]
  public static extern void ProcessList_getProcessRefs(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_getProcesses")]
  public static extern void ProcessList_getProcesses(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_setProcesses")]
  public static extern void ProcessList_setProcesses(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessList_getListChangedNotifier")]
  public static extern IntPtr ProcessList_getListChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_create")]
  public static extern IntPtr ProcessListEvent_create(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_createChangedEvent")]
  public static extern IntPtr ProcessListEvent_createChangedEvent();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessListEvent")]
  public static extern void delete_ProcessListEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_getProcRef")]
  public static extern IntPtr ProcessListEvent_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_getAction")]
  public static extern int ProcessListEvent_getAction(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEvent_dynamic_cast")]
  public static extern IntPtr ProcessListEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEvent_addedValues_set")]
  public static extern void ParameterEvent_addedValues_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEvent_addedValues_get")]
  public static extern IntPtr ParameterEvent_addedValues_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEvent_removedValues_set")]
  public static extern void ParameterEvent_removedValues_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEvent_removedValues_get")]
  public static extern IntPtr ParameterEvent_removedValues_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEvent_create")]
  public static extern IntPtr ParameterEvent_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ParameterEvent")]
  public static extern void delete_ParameterEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_create__SWIG_0")]
  public static extern IntPtr Parameter_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_create__SWIG_1")]
  public static extern IntPtr Parameter_create__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_getSpec")]
  public static extern IntPtr Parameter_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_getValueCount")]
  public static extern int Parameter_getValueCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_getValue")]
  public static extern IntPtr Parameter_getValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_getValues")]
  public static extern IntPtr Parameter_getValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_findValue__SWIG_0")]
  public static extern int Parameter_findValue__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_findValue__SWIG_1")]
  public static extern int Parameter_findValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_setValues")]
  public static extern void Parameter_setValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_setValue")]
  public static extern void Parameter_setValue(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_addValue")]
  public static extern void Parameter_addValue(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_removeValue")]
  public static extern void Parameter_removeValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_swapValues")]
  public static extern void Parameter_swapValues(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_removeAllValues")]
  public static extern void Parameter_removeAllValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_Parameter_getChangeNotifier")]
  public static extern IntPtr Parameter_getChangeNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_Parameter")]
  public static extern void delete_Parameter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_create")]
  public static extern IntPtr ParameterSpec_create(HandleRef jarg1, int jarg2, int jarg3, IntPtr jarg4, IntPtr jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_getInterface")]
  public static extern IntPtr ParameterSpec_getInterface(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_getMinOccurs")]
  public static extern int ParameterSpec_getMinOccurs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_getMaxOccurs")]
  public static extern int ParameterSpec_getMaxOccurs(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_getName")]
  public static extern IntPtr ParameterSpec_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterSpec_getDescription")]
  public static extern IntPtr ParameterSpec_getDescription(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ParameterSpec")]
  public static extern void delete_ParameterSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_iid_get")]
  public static extern IntPtr IPipeBuilder_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_isDataSourceSupported")]
  public static extern bool IPipeBuilder_isDataSourceSupported(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_buildCatalog")]
  public static extern IntPtr IPipeBuilder_buildCatalog(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_setConfig")]
  public static extern void IPipeBuilder_setConfig(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_buildPipeline")]
  public static extern IntPtr IPipeBuilder_buildPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_get")]
  public static extern bool IPipeBuilder_get(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_set")]
  public static extern bool IPipeBuilder_set(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilder_builtDirectory")]
  public static extern bool IPipeBuilder_builtDirectory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPipeBuilder")]
  public static extern void delete_IPipeBuilder(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_kstrPipeBuilderIni_get")]
  public static extern IntPtr PipeBuilderBase_kstrPipeBuilderIni_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_kstrPipeBuilderPropScope_get")]
  public static extern IntPtr PipeBuilderBase_kstrPipeBuilderPropScope_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_kstrPipeBuilderPropKey_get")]
  public static extern IntPtr PipeBuilderBase_kstrPipeBuilderPropKey_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_kstrPipeBuilderDefaultPropValue_get")]
  public static extern IntPtr PipeBuilderBase_kstrPipeBuilderDefaultPropValue_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_kstrPipeBuilderPropDescription_get")]
  public static extern IntPtr PipeBuilderBase_kstrPipeBuilderPropDescription_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_isDataSourceSupported")]
  public static extern bool PipeBuilderBase_isDataSourceSupported(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_buildCatalog")]
  public static extern IntPtr PipeBuilderBase_buildCatalog(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_setConfig")]
  public static extern void PipeBuilderBase_setConfig(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_buildPipeline")]
  public static extern IntPtr PipeBuilderBase_buildPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBase_getDefaultSampler")]
  public static extern IntPtr PipeBuilderBase_getDefaultSampler(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipeBuilderBase")]
  public static extern void delete_PipeBuilderBase(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_iid_get")]
  public static extern IntPtr IPipeFormater_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_canFormatPipeline")]
  public static extern bool IPipeFormater_canFormatPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormater_formatPipeline")]
  public static extern IntPtr IPipeFormater_formatPipeline(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPipeFormater")]
  public static extern void delete_IPipeFormater(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelKeyProvider_getKey")]
  public static extern IntPtr PYXNETChannelKeyProvider_getKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelKeyProvider")]
  public static extern IntPtr new_PYXNETChannelKeyProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannelKeyProvider")]
  public static extern void delete_PYXNETChannelKeyProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannel")]
  public static extern void delete_PYXNETChannel(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_publish")]
  public static extern void PYXNETChannel_publish(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_unpublish")]
  public static extern void PYXNETChannel_unpublish(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_isPublished")]
  public static extern bool PYXNETChannel_isPublished(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_wasFoundRemotely")]
  public static extern bool PYXNETChannel_wasFoundRemotely(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_getProcRef")]
  public static extern IntPtr PYXNETChannel_getProcRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_getDataCode")]
  public static extern IntPtr PYXNETChannel_getDataCode(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_getHandle")]
  public static extern int PYXNETChannel_getHandle(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_getKey")]
  public static extern IntPtr PYXNETChannel_getKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_requestKey")]
  public static extern IntPtr PYXNETChannel_requestKey(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannel_attachLocalProvider")]
  public static extern void PYXNETChannel_attachLocalProvider(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_getOrCreateChannel")]
  public static extern IntPtr PYXNETChannelProvider_getOrCreateChannel(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_createChannel")]
  public static extern int PYXNETChannelProvider_createChannel(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_createChannelSwigExplicitPYXNETChannelProvider")]
  public static extern int PYXNETChannelProvider_createChannelSwigExplicitPYXNETChannelProvider(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_removeChannel")]
  public static extern void PYXNETChannelProvider_removeChannel(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_removeChannelSwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_removeChannelSwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_requestKey")]
  public static extern void PYXNETChannelProvider_requestKey(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_requestKeySwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_requestKeySwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_cancelRequestKey")]
  public static extern void PYXNETChannelProvider_cancelRequestKey(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_cancelRequestKeySwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_cancelRequestKeySwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_addLocalProvider")]
  public static extern void PYXNETChannelProvider_addLocalProvider(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_addLocalProviderSwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_addLocalProviderSwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_publishChannel")]
  public static extern void PYXNETChannelProvider_publishChannel(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_publishChannelSwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_publishChannelSwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_unpublishChannel")]
  public static extern void PYXNETChannelProvider_unpublishChannel(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_unpublishChannelSwigExplicitPYXNETChannelProvider")]
  public static extern void PYXNETChannelProvider_unpublishChannelSwigExplicitPYXNETChannelProvider(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_keyProvidedFailed")]
  public static extern void PYXNETChannelProvider_keyProvidedFailed(HandleRef jarg1, int jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_keyProvided")]
  public static extern void PYXNETChannelProvider_keyProvided(HandleRef jarg1, int jarg2, IntPtr jarg3, IntPtr jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_release")]
  public static extern int PYXNETChannelProvider_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_releaseSwigExplicitPYXNETChannelProvider")]
  public static extern int PYXNETChannelProvider_releaseSwigExplicitPYXNETChannelProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_addRef")]
  public static extern int PYXNETChannelProvider_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_addRefSwigExplicitPYXNETChannelProvider")]
  public static extern int PYXNETChannelProvider_addRefSwigExplicitPYXNETChannelProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXNETChannelProvider")]
  public static extern void delete_PYXNETChannelProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_getInstance")]
  public static extern IntPtr PYXNETChannelProvider_getInstance();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_setInstance")]
  public static extern void PYXNETChannelProvider_setInstance(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXNETChannelProvider")]
  public static extern IntPtr new_PYXNETChannelProvider();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNETChannelProvider_director_connect")]
  public static extern void PYXNETChannelProvider_director_connect(HandleRef jarg1, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_0 delegate0, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_1 delegate1, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_2 delegate2, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_3 delegate3, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_4 delegate4, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_5 delegate5, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_6 delegate6, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_7 delegate7, PYXNETChannelProvider.SwigDelegatePYXNETChannelProvider_8 delegate8);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_test")]
  public static extern void PYXFieldDefinition_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFieldDefinition__SWIG_0")]
  public static extern IntPtr new_PYXFieldDefinition__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFieldDefinition__SWIG_1")]
  public static extern IntPtr new_PYXFieldDefinition__SWIG_1(IntPtr jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFieldDefinition__SWIG_2")]
  public static extern IntPtr new_PYXFieldDefinition__SWIG_2(IntPtr jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFieldDefinition__SWIG_3")]
  public static extern IntPtr new_PYXFieldDefinition__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFieldDefinition")]
  public static extern void delete_PYXFieldDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_getName")]
  public static extern IntPtr PYXFieldDefinition_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_getContext")]
  public static extern int PYXFieldDefinition_getContext(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_getType")]
  public static extern int PYXFieldDefinition_getType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_isNumeric")]
  public static extern bool PYXFieldDefinition_isNumeric(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_getCount")]
  public static extern int PYXFieldDefinition_getCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFieldDefinition_getTypeCompatibleValue")]
  public static extern IntPtr PYXFieldDefinition_getTypeCompatibleValue(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_test")]
  public static extern void PYXTableDefinition_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_create__SWIG_0")]
  public static extern IntPtr PYXTableDefinition_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_create__SWIG_1")]
  public static extern IntPtr PYXTableDefinition_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_clone")]
  public static extern IntPtr PYXTableDefinition_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_clear")]
  public static extern void PYXTableDefinition_clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_addFieldDefinition__SWIG_0")]
  public static extern int PYXTableDefinition_addFieldDefinition__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_addFieldDefinition__SWIG_1")]
  public static extern int PYXTableDefinition_addFieldDefinition__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_addFieldDefinition__SWIG_2")]
  public static extern int PYXTableDefinition_addFieldDefinition__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_addNullField")]
  public static extern void PYXTableDefinition_addNullField(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_getFieldCount")]
  public static extern int PYXTableDefinition_getFieldCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_getFieldDefinition")]
  public static extern IntPtr PYXTableDefinition_getFieldDefinition(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_getFieldIndex")]
  public static extern int PYXTableDefinition_getFieldIndex(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTableDefinition_getFieldNames")]
  public static extern IntPtr PYXTableDefinition_getFieldNames(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_iid_get")]
  public static extern IntPtr IRecord_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_getDefinition__SWIG_0")]
  public static extern IntPtr IRecord_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_getFieldValue")]
  public static extern IntPtr IRecord_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_setFieldValue")]
  public static extern void IRecord_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_getFieldValueByName")]
  public static extern IntPtr IRecord_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_setFieldValueByName")]
  public static extern void IRecord_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_getFieldValues")]
  public static extern IntPtr IRecord_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_setFieldValues")]
  public static extern void IRecord_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_addField__SWIG_0")]
  public static extern void IRecord_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_addField__SWIG_1")]
  public static extern void IRecord_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecord_addField__SWIG_2")]
  public static extern void IRecord_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecord")]
  public static extern void delete_IRecord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordTools_getFieldsAsXml")]
  public static extern IntPtr RecordTools_getFieldsAsXml(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_RecordTools")]
  public static extern IntPtr new_RecordTools();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RecordTools")]
  public static extern void delete_RecordTools(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_end")]
  public static extern bool RecordIterator_end(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_next")]
  public static extern void RecordIterator_next(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_RecordIterator_getRecord")]
  public static extern IntPtr RecordIterator_getRecord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_RecordIterator")]
  public static extern void delete_RecordIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_iid_get")]
  public static extern IntPtr IRecordCollection_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_getIterator")]
  public static extern IntPtr IRecordCollection_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_getRecordDefinition")]
  public static extern IntPtr IRecordCollection_getRecordDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollection_getRecord")]
  public static extern IntPtr IRecordCollection_getRecord(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IRecordCollection")]
  public static extern void delete_IRecordCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_iid_get")]
  public static extern IntPtr IFeature_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_isWritable")]
  public static extern bool IFeature_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_getID")]
  public static extern IntPtr IFeature_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_getGeometry")]
  public static extern IntPtr IFeature_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_getGeometry_const")]
  public static extern IntPtr IFeature_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_getStyle__SWIG_0")]
  public static extern IntPtr IFeature_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeature_getStyle__SWIG_1")]
  public static extern IntPtr IFeature_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeature")]
  public static extern void delete_IFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_iid_get")]
  public static extern IntPtr IWritableFeature_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setID")]
  public static extern void IWritableFeature_setID(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setGeometryName")]
  public static extern void IWritableFeature_setGeometryName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setGeometry")]
  public static extern void IWritableFeature_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setIsWritAble")]
  public static extern void IWritableFeature_setIsWritAble(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setStyle")]
  public static extern void IWritableFeature_setStyle(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeature_setMetaDataDefinition")]
  public static extern void IWritableFeature_setMetaDataDefinition(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWritableFeature")]
  public static extern void delete_IWritableFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_iid_get")]
  public static extern IntPtr IFeatureCollection_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollection_getIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollection_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_getFeatureDefinition__SWIG_0")]
  public static extern IntPtr IFeatureCollection_getFeatureDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_getFeatureStyles")]
  public static extern IntPtr IFeatureCollection_getFeatureStyles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_getFeature")]
  public static extern IntPtr IFeatureCollection_getFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_canRasterize")]
  public static extern bool IFeatureCollection_canRasterize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_geometryHint")]
  public static extern void IFeatureCollection_geometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollection_endGeometryHint")]
  public static extern void IFeatureCollection_endGeometryHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollection")]
  public static extern void delete_IFeatureCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_iid_get")]
  public static extern IntPtr IFeatureCollectionIndex_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_getIterator__SWIG_0")]
  public static extern IntPtr IFeatureCollectionIndex_getIterator__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_getIterator__SWIG_1")]
  public static extern IntPtr IFeatureCollectionIndex_getIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndex_suggest")]
  public static extern IntPtr IFeatureCollectionIndex_suggest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureCollectionIndex")]
  public static extern void delete_IFeatureCollectionIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_iid_get")]
  public static extern IntPtr IFeatureGroup_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getFeaturesCount")]
  public static extern IntPtr IFeatureGroup_getFeaturesCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_moreDetailsAvailable")]
  public static extern bool IFeatureGroup_moreDetailsAvailable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getFieldHistogram__SWIG_0")]
  public static extern IntPtr IFeatureGroup_getFieldHistogram__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getFieldHistogram__SWIG_1")]
  public static extern IntPtr IFeatureGroup_getFieldHistogram__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getFeatureGroup")]
  public static extern IntPtr IFeatureGroup_getFeatureGroup(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getFeatureGroupForFeature")]
  public static extern IntPtr IFeatureGroup_getFeatureGroupForFeature(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getGroupIterator__SWIG_0")]
  public static extern IntPtr IFeatureGroup_getGroupIterator__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroup_getGroupIterator__SWIG_1")]
  public static extern IntPtr IFeatureGroup_getGroupIterator__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IFeatureGroup")]
  public static extern void delete_IFeatureGroup(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_iid_get")]
  public static extern IntPtr ICoverage_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr ICoverage_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getCoverageValue__SWIG_0")]
  public static extern IntPtr ICoverage_getCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getCoverageValue__SWIG_1")]
  public static extern IntPtr ICoverage_getCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getFieldTile__SWIG_0")]
  public static extern IntPtr ICoverage_getFieldTile__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getFieldTile__SWIG_1")]
  public static extern IntPtr ICoverage_getFieldTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getFieldTileCost__SWIG_0")]
  public static extern IntPtr ICoverage_getFieldTileCost__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getFieldTileCost__SWIG_1")]
  public static extern IntPtr ICoverage_getFieldTileCost__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getCoverageTile")]
  public static extern IntPtr ICoverage_getCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_getTileCost")]
  public static extern IntPtr ICoverage_getTileCost(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_setCoverageValue__SWIG_0")]
  public static extern void ICoverage_setCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_setCoverageValue__SWIG_1")]
  public static extern void ICoverage_setCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverage_setCoverageTile")]
  public static extern void ICoverage_setCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverage")]
  public static extern void delete_ICoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_nCells_set")]
  public static extern void PYXValueTileStatistics_nCells_set(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_nCells_get")]
  public static extern int PYXValueTileStatistics_nCells_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_nValues_set")]
  public static extern void PYXValueTileStatistics_nValues_set(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_nValues_get")]
  public static extern int PYXValueTileStatistics_nValues_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_minValue_set")]
  public static extern void PYXValueTileStatistics_minValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_minValue_get")]
  public static extern IntPtr PYXValueTileStatistics_minValue_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_maxValue_set")]
  public static extern void PYXValueTileStatistics_maxValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_maxValue_get")]
  public static extern IntPtr PYXValueTileStatistics_maxValue_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_avgValue_set")]
  public static extern void PYXValueTileStatistics_avgValue_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTileStatistics_avgValue_get")]
  public static extern IntPtr PYXValueTileStatistics_avgValue_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTileStatistics")]
  public static extern IntPtr new_PYXValueTileStatistics();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueTileStatistics")]
  public static extern void delete_PYXValueTileStatistics(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_test")]
  public static extern void PYXValueTile_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_0")]
  public static extern IntPtr PYXValueTile_create__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_1")]
  public static extern IntPtr PYXValueTile_create__SWIG_1(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_2")]
  public static extern IntPtr PYXValueTile_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_0")]
  public static extern IntPtr new_PYXValueTile__SWIG_0(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_3")]
  public static extern IntPtr PYXValueTile_create__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_1")]
  public static extern IntPtr new_PYXValueTile__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_4")]
  public static extern IntPtr PYXValueTile_create__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_2")]
  public static extern IntPtr new_PYXValueTile__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_create__SWIG_5")]
  public static extern IntPtr PYXValueTile_create__SWIG_5(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_3")]
  public static extern IntPtr new_PYXValueTile__SWIG_3(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_4")]
  public static extern IntPtr new_PYXValueTile__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTile__SWIG_5")]
  public static extern IntPtr new_PYXValueTile__SWIG_5(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueTile")]
  public static extern void delete_PYXValueTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_isValueTileCompatible")]
  public static extern bool PYXValueTile_isValueTileCompatible(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getTypeCompatibleValue")]
  public static extern IntPtr PYXValueTile_getTypeCompatibleValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_serialize")]
  public static extern void PYXValueTile_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_deserialize")]
  public static extern void PYXValueTile_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getHeapBytes")]
  public static extern int PYXValueTile_getHeapBytes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getCacheStatus")]
  public static extern IntPtr PYXValueTile_getCacheStatus(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getNumberOfDataChannels")]
  public static extern int PYXValueTile_getNumberOfDataChannels(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getNumberOfCells")]
  public static extern int PYXValueTile_getNumberOfCells(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getDataChannelType")]
  public static extern int PYXValueTile_getDataChannelType(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getDataChannelCount")]
  public static extern int PYXValueTile_getDataChannelCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_0")]
  public static extern IntPtr PYXValueTile_getValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_1")]
  public static extern IntPtr PYXValueTile_getValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_2")]
  public static extern bool PYXValueTile_getValue__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_3")]
  public static extern IntPtr PYXValueTile_getValue__SWIG_3(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_4")]
  public static extern IntPtr PYXValueTile_getValue__SWIG_4(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getValue__SWIG_5")]
  public static extern bool PYXValueTile_getValue__SWIG_5(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_setValue__SWIG_0")]
  public static extern void PYXValueTile_setValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_setValue__SWIG_1")]
  public static extern void PYXValueTile_setValue__SWIG_1(HandleRef jarg1, int jarg2, int jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_isDirty")]
  public static extern bool PYXValueTile_isDirty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_isComplete")]
  public static extern bool PYXValueTile_isComplete(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_setIsComplete")]
  public static extern void PYXValueTile_setIsComplete(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getTile")]
  public static extern IntPtr PYXValueTile_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_setTile")]
  public static extern void PYXValueTile_setTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_getIterator")]
  public static extern IntPtr PYXValueTile_getIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_cloneFieldTile")]
  public static extern IntPtr PYXValueTile_cloneFieldTile(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_clone")]
  public static extern IntPtr PYXValueTile_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_zoomIn")]
  public static extern IntPtr PYXValueTile_zoomIn(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_calcStatistics")]
  public static extern IntPtr PYXValueTile_calcStatistics(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_isTileFileComplete")]
  public static extern bool PYXValueTile_isTileFileComplete(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_createFromFile")]
  public static extern IntPtr PYXValueTile_createFromFile(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_createFromBase64String")]
  public static extern IntPtr PYXValueTile_createFromBase64String(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTile_toBase64String")]
  public static extern IntPtr PYXValueTile_toBase64String(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BooleanAggregator_value_set")]
  public static extern void BooleanAggregator_value_set(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_BooleanAggregator_value_get")]
  public static extern bool BooleanAggregator_value_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BooleanAggregator__SWIG_0")]
  public static extern IntPtr new_BooleanAggregator__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_BooleanAggregator__SWIG_1")]
  public static extern IntPtr new_BooleanAggregator__SWIG_1(bool jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_BooleanAggregator")]
  public static extern void delete_BooleanAggregator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXValueTransform")]
  public static extern IntPtr new_PYXValueTransform(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTransform_transform")]
  public static extern IntPtr PYXValueTransform_transform(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTransform_countFeatures")]
  public static extern IntPtr PYXValueTransform_countFeatures(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTransform_getTransformValues")]
  public static extern IntPtr PYXValueTransform_getTransformValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXValueTransform")]
  public static extern void delete_PYXValueTransform(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_TileFeaturesVisitor")]
  public static extern void delete_TileFeaturesVisitor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileFeaturesVisitor_useTasks")]
  public static extern void TileFeaturesVisitor_useTasks(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileFeaturesVisitor_visit")]
  public static extern void TileFeaturesVisitor_visit(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_TileGeometryAggregator")]
  public static extern IntPtr new_TileGeometryAggregator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_TileGeometryAggregator")]
  public static extern void delete_TileGeometryAggregator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_add")]
  public static extern IntPtr TileGeometryAggregator_add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_intersect__SWIG_0")]
  public static extern IntPtr TileGeometryAggregator_intersect__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_intersect__SWIG_1")]
  public static extern IntPtr TileGeometryAggregator_intersect__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_intersect__SWIG_2")]
  public static extern IntPtr TileGeometryAggregator_intersect__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_substract__SWIG_0")]
  public static extern IntPtr TileGeometryAggregator_substract__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_substract__SWIG_1")]
  public static extern IntPtr TileGeometryAggregator_substract__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_substract__SWIG_2")]
  public static extern IntPtr TileGeometryAggregator_substract__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_getFoundCellCount")]
  public static extern int TileGeometryAggregator_getFoundCellCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_TileGeometryAggregator_asTileCollection")]
  public static extern IntPtr TileGeometryAggregator_asTileCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_clsid_get")]
  public static extern IntPtr PYXFeature_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_aiid_get")]
  public static extern IntPtr PYXFeature_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_niid_get")]
  public static extern int PYXFeature_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_AddRef")]
  public static extern uint PYXFeature_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_Release")]
  public static extern uint PYXFeature_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_8")]
  public static extern void intrusive_ptr_add_ref__SWIG_8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_8")]
  public static extern void intrusive_ptr_release__SWIG_8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_isWritable")]
  public static extern bool PYXFeature_isWritable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getID")]
  public static extern IntPtr PYXFeature_getID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getGeometry_const")]
  public static extern IntPtr PYXFeature_getGeometry_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getGeometry")]
  public static extern IntPtr PYXFeature_getGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getStyle__SWIG_0")]
  public static extern IntPtr PYXFeature_getStyle__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getStyle__SWIG_1")]
  public static extern IntPtr PYXFeature_getStyle__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getDefinition__SWIG_0")]
  public static extern IntPtr PYXFeature_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getFieldValue")]
  public static extern IntPtr PYXFeature_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setFieldValue")]
  public static extern void PYXFeature_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getFieldValueByName")]
  public static extern IntPtr PYXFeature_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setFieldValueByName")]
  public static extern void PYXFeature_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_getFieldValues")]
  public static extern IntPtr PYXFeature_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setFieldValues")]
  public static extern void PYXFeature_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_addField__SWIG_0")]
  public static extern void PYXFeature_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_addField__SWIG_1")]
  public static extern void PYXFeature_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_addField__SWIG_2")]
  public static extern void PYXFeature_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setID")]
  public static extern void PYXFeature_setID(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setGeometryName")]
  public static extern void PYXFeature_setGeometryName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setGeometry")]
  public static extern void PYXFeature_setGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setIsWritAble")]
  public static extern void PYXFeature_setIsWritAble(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setStyle")]
  public static extern void PYXFeature_setStyle(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeature_setMetaDataDefinition")]
  public static extern void PYXFeature_setMetaDataDefinition(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature__SWIG_0")]
  public static extern IntPtr new_PYXFeature__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature__SWIG_1")]
  public static extern IntPtr new_PYXFeature__SWIG_1(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, HandleRef jarg5, IntPtr jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXFeature__SWIG_2")]
  public static extern IntPtr new_PYXFeature__SWIG_2(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, HandleRef jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFeature")]
  public static extern void delete_PYXFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBin_range_set")]
  public static extern void PYXHistogramBin_range_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBin_range_get")]
  public static extern IntPtr PYXHistogramBin_range_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBin_count_set")]
  public static extern void PYXHistogramBin_count_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogramBin_count_get")]
  public static extern IntPtr PYXHistogramBin_count_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXHistogramBin")]
  public static extern IntPtr new_PYXHistogramBin();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHistogramBin")]
  public static extern void delete_PYXHistogramBin(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBin_area_set")]
  public static extern void PYXCellHistogramBin_area_set(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBin_area_get")]
  public static extern IntPtr PYXCellHistogramBin_area_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCellHistogramBin")]
  public static extern IntPtr new_PYXCellHistogramBin();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCellHistogramBin")]
  public static extern void delete_PYXCellHistogramBin(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_createFromFeatures")]
  public static extern IntPtr PYXHistogram_createFromFeatures(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getFeatureCount__SWIG_0")]
  public static extern IntPtr PYXHistogram_getFeatureCount__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getFeatureCount__SWIG_1")]
  public static extern IntPtr PYXHistogram_getFeatureCount__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getSum")]
  public static extern IntPtr PYXHistogram_getSum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getAverage")]
  public static extern IntPtr PYXHistogram_getAverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getSumSquare")]
  public static extern IntPtr PYXHistogram_getSumSquare(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getBoundaries")]
  public static extern IntPtr PYXHistogram_getBoundaries(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getBins")]
  public static extern IntPtr PYXHistogram_getBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_getNormalizedBins")]
  public static extern IntPtr PYXHistogram_getNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_add__SWIG_0")]
  public static extern void PYXHistogram_add__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHistogram_add__SWIG_1")]
  public static extern void PYXHistogram_add__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXHistogram")]
  public static extern void delete_PYXHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_getCellResolution")]
  public static extern int PYXCellHistogram_getCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_getArea__SWIG_0")]
  public static extern IntPtr PYXCellHistogram_getArea__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_getArea__SWIG_1")]
  public static extern IntPtr PYXCellHistogram_getArea__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_getCellBins")]
  public static extern IntPtr PYXCellHistogram_getCellBins(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogram_getCellNormalizedBins")]
  public static extern IntPtr PYXCellHistogram_getCellNormalizedBins(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCellHistogram")]
  public static extern void delete_PYXCellHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisDimensionTime_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisDimensionTime_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisDimensionHeight_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisDimensionHeight_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisDimensionGRIBModel_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisDimensionGRIBModel_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisLongName_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisLongName_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisShortName_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisShortName_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisUnits_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisUnits_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisFeatureCount_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisFeatureCount_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_s_strPyxisPixelCount_get")]
  public static extern IntPtr PYXDataSet_s_strPyxisPixelCount_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_AddRef")]
  public static extern uint PYXDataSet_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_Release")]
  public static extern uint PYXDataSet_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getDefinition__SWIG_0")]
  public static extern IntPtr PYXDataSet_getDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getFieldValue")]
  public static extern IntPtr PYXDataSet_getFieldValue(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setFieldValue")]
  public static extern void PYXDataSet_setFieldValue(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getFieldValueByName")]
  public static extern IntPtr PYXDataSet_getFieldValueByName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setFieldValueByName")]
  public static extern void PYXDataSet_setFieldValueByName(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getFieldValues")]
  public static extern IntPtr PYXDataSet_getFieldValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setFieldValues")]
  public static extern void PYXDataSet_setFieldValues(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_addField__SWIG_0")]
  public static extern void PYXDataSet_addField__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5, HandleRef jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_addField__SWIG_1")]
  public static extern void PYXDataSet_addField__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_addField__SWIG_2")]
  public static extern void PYXDataSet_addField__SWIG_2(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_test")]
  public static extern void PYXDataSet_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_create__SWIG_0")]
  public static extern IntPtr PYXDataSet_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_create__SWIG_1")]
  public static extern IntPtr PYXDataSet_create__SWIG_1(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_create__SWIG_2")]
  public static extern IntPtr PYXDataSet_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_clone")]
  public static extern IntPtr PYXDataSet_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXDataSet")]
  public static extern void delete_PYXDataSet(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_isLoadable")]
  public static extern bool PYXDataSet_isLoadable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getUri")]
  public static extern IntPtr PYXDataSet_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setUri")]
  public static extern void PYXDataSet_setUri(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getName")]
  public static extern IntPtr PYXDataSet_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setName")]
  public static extern void PYXDataSet_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setLayer")]
  public static extern void PYXDataSet_setLayer(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getLayer")]
  public static extern IntPtr PYXDataSet_getLayer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getContentDefinition_const")]
  public static extern IntPtr PYXDataSet_getContentDefinition_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getContentDefinition")]
  public static extern IntPtr PYXDataSet_getContentDefinition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getMissingRequiredFilesAllOf")]
  public static extern IntPtr PYXDataSet_getMissingRequiredFilesAllOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setMissingRequiredFilesAllOf")]
  public static extern void PYXDataSet_setMissingRequiredFilesAllOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getMissingRequiredFilesOneOf")]
  public static extern IntPtr PYXDataSet_getMissingRequiredFilesOneOf(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setMissingRequiredFilesOneOf")]
  public static extern void PYXDataSet_setMissingRequiredFilesOneOf(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getMissingOptionalFiles")]
  public static extern IntPtr PYXDataSet_getMissingOptionalFiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setMissingOptionalFiles")]
  public static extern void PYXDataSet_setMissingOptionalFiles(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_getBoundingBox")]
  public static extern void PYXDataSet_getBoundingBox(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSet_setBoundingBox")]
  public static extern void PYXDataSet_setBoundingBox(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_test")]
  public static extern void PYXCatalog_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_create__SWIG_0")]
  public static extern IntPtr PYXCatalog_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_create__SWIG_1")]
  public static extern IntPtr PYXCatalog_create__SWIG_1(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_create__SWIG_2")]
  public static extern IntPtr PYXCatalog_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_clone")]
  public static extern IntPtr PYXCatalog_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCatalog")]
  public static extern void delete_PYXCatalog(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getUri")]
  public static extern IntPtr PYXCatalog_getUri(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_setUri")]
  public static extern void PYXCatalog_setUri(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getName")]
  public static extern IntPtr PYXCatalog_getName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_setName")]
  public static extern void PYXCatalog_setName(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_addDataSet")]
  public static extern int PYXCatalog_addDataSet(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getDataSetCount")]
  public static extern int PYXCatalog_getDataSetCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getDataSet")]
  public static extern IntPtr PYXCatalog_getDataSet(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_addSubCatalog")]
  public static extern int PYXCatalog_addSubCatalog(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getSubCatalogCount")]
  public static extern int PYXCatalog_getSubCatalogCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_getSubCatalog")]
  public static extern IntPtr PYXCatalog_getSubCatalog(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_release")]
  public static extern int PYXCatalog_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCatalog_addRef")]
  public static extern int PYXCatalog_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_match__SWIG_0")]
  public static extern bool PYXWhereCondition_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_match__SWIG_1")]
  public static extern IntPtr PYXWhereCondition_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_coverageHasValues")]
  public static extern IntPtr PYXWhereCondition_coverageHasValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_featuresHasValues")]
  public static extern IntPtr PYXWhereCondition_featuresHasValues(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhereCondition_geometry")]
  public static extern IntPtr PYXWhereCondition_geometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXWhereCondition")]
  public static extern void delete_PYXWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_match__SWIG_0")]
  public static extern bool PYXCoverageWhereCondition_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_match__SWIG_1")]
  public static extern IntPtr PYXCoverageWhereCondition_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_create")]
  public static extern IntPtr PYXCoverageWhereCondition_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereCondition_range")]
  public static extern IntPtr PYXCoverageWhereCondition_range(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoverageWhereCondition")]
  public static extern void delete_PYXCoverageWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_match__SWIG_0")]
  public static extern bool PYXFeaturesWhereCondition_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_match__SWIG_1")]
  public static extern IntPtr PYXFeaturesWhereCondition_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_create")]
  public static extern IntPtr PYXFeaturesWhereCondition_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_field")]
  public static extern IntPtr PYXFeaturesWhereCondition_field(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereCondition_range")]
  public static extern IntPtr PYXFeaturesWhereCondition_range(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXFeaturesWhereCondition")]
  public static extern void delete_PYXFeaturesWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_match__SWIG_0")]
  public static extern bool PYXGeometryWhereCondition_match__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_match__SWIG_1")]
  public static extern IntPtr PYXGeometryWhereCondition_match__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereCondition_create")]
  public static extern IntPtr PYXGeometryWhereCondition_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXGeometryWhereCondition")]
  public static extern void delete_PYXGeometryWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_create__SWIG_0")]
  public static extern IntPtr PYXWhere_create__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_create__SWIG_1")]
  public static extern IntPtr PYXWhere_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_intersect__SWIG_0")]
  public static extern IntPtr PYXWhere_intersect__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_intersect__SWIG_1")]
  public static extern IntPtr PYXWhere_intersect__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_subtract__SWIG_0")]
  public static extern IntPtr PYXWhere_subtract__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_subtract__SWIG_1")]
  public static extern IntPtr PYXWhere_subtract__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_disjunct__SWIG_0")]
  public static extern IntPtr PYXWhere_disjunct__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_disjunct__SWIG_1")]
  public static extern IntPtr PYXWhere_disjunct__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_on__SWIG_0")]
  public static extern IntPtr PYXWhere_on__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_on__SWIG_1")]
  public static extern IntPtr PYXWhere_on__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_on__SWIG_2")]
  public static extern IntPtr PYXWhere_on__SWIG_2(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_intersect__SWIG_2")]
  public static extern IntPtr PYXWhere_intersect__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_intersect__SWIG_3")]
  public static extern IntPtr PYXWhere_intersect__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_intersect__SWIG_4")]
  public static extern IntPtr PYXWhere_intersect__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_subtract__SWIG_2")]
  public static extern IntPtr PYXWhere_subtract__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_subtract__SWIG_3")]
  public static extern IntPtr PYXWhere_subtract__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_subtract__SWIG_4")]
  public static extern IntPtr PYXWhere_subtract__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_disjunct__SWIG_2")]
  public static extern IntPtr PYXWhere_disjunct__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_disjunct__SWIG_3")]
  public static extern IntPtr PYXWhere_disjunct__SWIG_3(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXWhere_disjunct__SWIG_4")]
  public static extern IntPtr PYXWhere_disjunct__SWIG_4(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXWhere")]
  public static extern void delete_PYXWhere(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_iid_get")]
  public static extern IntPtr ICache_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_initCacheDir")]
  public static extern void ICache_initCacheDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setCacheDir")]
  public static extern void ICache_setCacheDir(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_getCacheDir")]
  public static extern IntPtr ICache_getCacheDir(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setCacheTileDepth")]
  public static extern void ICache_setCacheTileDepth(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_getCacheTileDepth")]
  public static extern int ICache_getCacheTileDepth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setCacheCellResolution")]
  public static extern void ICache_setCacheCellResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_getCacheCellResolution")]
  public static extern int ICache_getCacheCellResolution(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setCachePersistence")]
  public static extern void ICache_setCachePersistence(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_openReadOnly")]
  public static extern bool ICache_openReadOnly(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_openReadWrite__SWIG_0")]
  public static extern bool ICache_openReadWrite__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setCacheMaxTileCount")]
  public static extern void ICache_setCacheMaxTileCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_openReadWrite__SWIG_1")]
  public static extern bool ICache_openReadWrite__SWIG_1(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6, int jarg7);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_openReadWrite__SWIG_2")]
  public static extern bool ICache_openReadWrite__SWIG_2(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, HandleRef jarg4, HandleRef jarg5, int jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_close")]
  public static extern void ICache_close(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_persistAllTiles")]
  public static extern void ICache_persistAllTiles(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_toFileName")]
  public static extern IntPtr ICache_toFileName(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_setGreedyCache")]
  public static extern void ICache_setGreedyCache(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_addTileFile")]
  public static extern void ICache_addTileFile(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_forceCoverageTile")]
  public static extern bool ICache_forceCoverageTile(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_getNeedATileNotifier")]
  public static extern IntPtr ICache_getNeedATileNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICache_getCacheChangedNotifier")]
  public static extern IntPtr ICache_getCacheChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICache")]
  public static extern void delete_ICache(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheManager_getCacheCreatedNotifier")]
  public static extern IntPtr CacheManager_getCacheCreatedNotifier();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_CacheManager")]
  public static extern IntPtr new_CacheManager();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheManager")]
  public static extern void delete_CacheManager(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheEvent_getCache")]
  public static extern IntPtr CacheEvent_getCache(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheEvent")]
  public static extern void delete_CacheEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_create")]
  public static extern IntPtr CacheNeedsTileEvent_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_getTile")]
  public static extern IntPtr CacheNeedsTileEvent_getTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_getDownloadFailed")]
  public static extern bool CacheNeedsTileEvent_getDownloadFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_setDownloadFailed")]
  public static extern void CacheNeedsTileEvent_setDownloadFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEvent_dynamic_cast")]
  public static extern IntPtr CacheNeedsTileEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheNeedsTileEvent")]
  public static extern void delete_CacheNeedsTileEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_create")]
  public static extern IntPtr CacheWithProcessEvent_create(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_getProcess")]
  public static extern IntPtr CacheWithProcessEvent_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_getHandled")]
  public static extern bool CacheWithProcessEvent_getHandled(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_setHandled")]
  public static extern void CacheWithProcessEvent_setHandled(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEvent_dynamic_cast")]
  public static extern IntPtr CacheWithProcessEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_CacheWithProcessEvent")]
  public static extern void delete_CacheWithProcessEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_clsid_get")]
  public static extern IntPtr ConstCoverage_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_aiid_get")]
  public static extern IntPtr ConstCoverage_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_niid_get")]
  public static extern int ConstCoverage_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ConstCoverage")]
  public static extern IntPtr new_ConstCoverage();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ConstCoverage")]
  public static extern void delete_ConstCoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_test")]
  public static extern void ConstCoverage_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_asIUnknown")]
  public static extern IntPtr ConstCoverage_asIUnknown(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_QueryInterface")]
  public static extern int ConstCoverage_QueryInterface(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_AddRef")]
  public static extern uint ConstCoverage_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_Release")]
  public static extern uint ConstCoverage_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_9")]
  public static extern void intrusive_ptr_add_ref__SWIG_9(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_9")]
  public static extern void intrusive_ptr_release__SWIG_9(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getSpecStatic")]
  public static extern IntPtr ConstCoverage_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getSpec")]
  public static extern IntPtr ConstCoverage_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getOutput__SWIG_0")]
  public static extern IntPtr ConstCoverage_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getAttributes")]
  public static extern IntPtr ConstCoverage_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getAttributeSchema")]
  public static extern IntPtr ConstCoverage_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_setAttributes")]
  public static extern void ConstCoverage_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getFieldTile__SWIG_0")]
  public static extern IntPtr ConstCoverage_getFieldTile__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getFieldTile__SWIG_1")]
  public static extern IntPtr ConstCoverage_getFieldTile__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getCoverageValue__SWIG_0")]
  public static extern IntPtr ConstCoverage_getCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_getCoverageValue__SWIG_1")]
  public static extern IntPtr ConstCoverage_getCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_setGeometryResolution")]
  public static extern void ConstCoverage_setGeometryResolution(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_setReturnValue__SWIG_0")]
  public static extern void ConstCoverage_setReturnValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_setReturnValue__SWIG_1")]
  public static extern void ConstCoverage_setReturnValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ConstCoverage_setFieldCount")]
  public static extern void ConstCoverage_setFieldCount(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_iid_get")]
  public static extern IntPtr IDataProcessor_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessor_processData")]
  public static extern void IDataProcessor_processData(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IDataProcessor")]
  public static extern void delete_IDataProcessor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_iid_get")]
  public static extern IntPtr IPath_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_getPath__SWIG_0")]
  public static extern IntPtr IPath_getPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_getPath__SWIG_1")]
  public static extern IntPtr IPath_getPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_getLocallyResolvedPath__SWIG_0")]
  public static extern IntPtr IPath_getLocallyResolvedPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_getLocallyResolvedPath__SWIG_1")]
  public static extern IntPtr IPath_getLocallyResolvedPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_setPath__SWIG_0")]
  public static extern bool IPath_setPath__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_setPath__SWIG_1")]
  public static extern bool IPath_setPath__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_addPath")]
  public static extern bool IPath_addPath(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPath_getLength")]
  public static extern int IPath_getLength(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IPath")]
  public static extern void delete_IPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_clsid_get")]
  public static extern IntPtr PathInitError_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_aiid_get")]
  public static extern IntPtr PathInitError_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_niid_get")]
  public static extern int PathInitError_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_AddRef")]
  public static extern uint PathInitError_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_Release")]
  public static extern uint PathInitError_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitError_getErrorID")]
  public static extern IntPtr PathInitError_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathInitError")]
  public static extern IntPtr new_PathInitError();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PathInitError")]
  public static extern void delete_PathInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_clsid_get")]
  public static extern IntPtr PathProcess_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_aiid_get")]
  public static extern IntPtr PathProcess_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_niid_get")]
  public static extern int PathProcess_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_test")]
  public static extern void PathProcess_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PathProcess")]
  public static extern IntPtr new_PathProcess();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_AddRef")]
  public static extern uint PathProcess_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_Release")]
  public static extern uint PathProcess_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_10")]
  public static extern void intrusive_ptr_add_ref__SWIG_10(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_10")]
  public static extern void intrusive_ptr_release__SWIG_10(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getSpecStatic")]
  public static extern IntPtr PathProcess_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getSpec")]
  public static extern IntPtr PathProcess_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getOutput__SWIG_0")]
  public static extern IntPtr PathProcess_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getAttributeSchema")]
  public static extern IntPtr PathProcess_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getAttributes")]
  public static extern IntPtr PathProcess_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_setAttributes")]
  public static extern void PathProcess_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getPath__SWIG_0")]
  public static extern IntPtr PathProcess_getPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getPath__SWIG_1")]
  public static extern IntPtr PathProcess_getPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getLocallyResolvedPath__SWIG_0")]
  public static extern IntPtr PathProcess_getLocallyResolvedPath__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getLocallyResolvedPath__SWIG_1")]
  public static extern IntPtr PathProcess_getLocallyResolvedPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_setPath__SWIG_0")]
  public static extern bool PathProcess_setPath__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_setPath__SWIG_1")]
  public static extern bool PathProcess_setPath__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_addPath")]
  public static extern bool PathProcess_addPath(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getLength")]
  public static extern int PathProcess_getLength(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getUrl")]
  public static extern IntPtr PathProcess_getUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_setUrl")]
  public static extern bool PathProcess_setUrl(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_getManifest")]
  public static extern IntPtr PathProcess_getManifest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcess_isLocalFile")]
  public static extern bool PathProcess_isLocalFile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PathProcess")]
  public static extern void delete_PathProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileNotificationManager_getFileNeededNotifier")]
  public static extern IntPtr FileNotificationManager_getFileNeededNotifier();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileNotificationManager_getPipelineFilesDownloadNeededNotifier")]
  public static extern IntPtr FileNotificationManager_getPipelineFilesDownloadNeededNotifier();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_FileNotificationManager")]
  public static extern IntPtr new_FileNotificationManager();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_FileNotificationManager")]
  public static extern void delete_FileNotificationManager(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_create__SWIG_0")]
  public static extern IntPtr FileEvent_create__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_create__SWIG_1")]
  public static extern IntPtr FileEvent_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_getIndex")]
  public static extern int FileEvent_getIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_getPath")]
  public static extern IntPtr FileEvent_getPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_getFailed")]
  public static extern bool FileEvent_getFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_setFailed")]
  public static extern void FileEvent_setFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_getLocalPath")]
  public static extern IntPtr FileEvent_getLocalPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_setLocalPath")]
  public static extern void FileEvent_setLocalPath(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEvent_dynamic_cast")]
  public static extern IntPtr FileEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_FileEvent")]
  public static extern void delete_FileEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_create")]
  public static extern IntPtr PipelineFilesEvent_create(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_getProcess")]
  public static extern IntPtr PipelineFilesEvent_getProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_getFailed")]
  public static extern bool PipelineFilesEvent_getFailed(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_setFailed")]
  public static extern void PipelineFilesEvent_setFailed(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEvent_dynamic_cast")]
  public static extern IntPtr PipelineFilesEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PipelineFilesEvent")]
  public static extern void delete_PipelineFilesEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_createFromDefinition")]
  public static extern IntPtr PYXBitmap_createFromDefinition(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_createFromPath")]
  public static extern IntPtr PYXBitmap_createFromPath(IntPtr jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_create")]
  public static extern IntPtr PYXBitmap_create(uint jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXBitmap")]
  public static extern IntPtr new_PYXBitmap(uint jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXBitmap")]
  public static extern void delete_PYXBitmap(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_getWidth")]
  public static extern uint PYXBitmap_getWidth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_getHeight")]
  public static extern uint PYXBitmap_getHeight(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBitmap_getData__SWIG_0")]
  public static extern IntPtr PYXBitmap_getData__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_iid_get")]
  public static extern IntPtr IBitmap_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getBitmapCount")]
  public static extern int IBitmap_getBitmapCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getWidth__SWIG_0")]
  public static extern int IBitmap_getWidth__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getWidth__SWIG_1")]
  public static extern int IBitmap_getWidth__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getHeight__SWIG_0")]
  public static extern int IBitmap_getHeight__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getHeight__SWIG_1")]
  public static extern int IBitmap_getHeight__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getRawBitmap__SWIG_0")]
  public static extern IntPtr IBitmap_getRawBitmap__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getRawBitmap__SWIG_1")]
  public static extern IntPtr IBitmap_getRawBitmap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getBitmapDefinition__SWIG_0")]
  public static extern IntPtr IBitmap_getBitmapDefinition__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmap_getBitmapDefinition__SWIG_1")]
  public static extern IntPtr IBitmap_getBitmapDefinition__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IBitmap")]
  public static extern void delete_IBitmap(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_iid_get")]
  public static extern IntPtr IEmbeddedResourceHolder_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_getEmbeddedResourceCount")]
  public static extern int IEmbeddedResourceHolder_getEmbeddedResourceCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolder_getEmbeddedResource")]
  public static extern IntPtr IEmbeddedResourceHolder_getEmbeddedResource(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IEmbeddedResourceHolder")]
  public static extern void delete_IEmbeddedResourceHolder(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_iid_get")]
  public static extern IntPtr IProcessCollection_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_getProcessList")]
  public static extern IntPtr IProcessCollection_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollection_setProcessList")]
  public static extern void IProcessCollection_setProcessList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IProcessCollection")]
  public static extern void delete_IProcessCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_clsid_get")]
  public static extern IntPtr ProcessCollectionProc_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_aiid_get")]
  public static extern IntPtr ProcessCollectionProc_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_niid_get")]
  public static extern int ProcessCollectionProc_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_AddRef")]
  public static extern uint ProcessCollectionProc_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_Release")]
  public static extern uint ProcessCollectionProc_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_getSpecStatic")]
  public static extern IntPtr ProcessCollectionProc_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_getSpec")]
  public static extern IntPtr ProcessCollectionProc_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_getOutput__SWIG_0")]
  public static extern IntPtr ProcessCollectionProc_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_getProcessList")]
  public static extern IntPtr ProcessCollectionProc_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProc_setProcessList")]
  public static extern void ProcessCollectionProc_setProcessList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ProcessCollectionProc")]
  public static extern IntPtr new_ProcessCollectionProc();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ProcessCollectionProc")]
  public static extern void delete_ProcessCollectionProc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_iid_get")]
  public static extern IntPtr IString_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_str__SWIG_0")]
  public static extern IntPtr IString_str__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IString_str__SWIG_1")]
  public static extern void IString_str__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IString")]
  public static extern void delete_IString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_clsid_get")]
  public static extern IntPtr StringProc_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_aiid_get")]
  public static extern IntPtr StringProc_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_niid_get")]
  public static extern int StringProc_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_AddRef")]
  public static extern uint StringProc_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_Release")]
  public static extern uint StringProc_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_getSpecStatic")]
  public static extern IntPtr StringProc_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_getSpec")]
  public static extern IntPtr StringProc_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_getOutput__SWIG_0")]
  public static extern IntPtr StringProc_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_str__SWIG_0")]
  public static extern void StringProc_str__SWIG_0(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProc_str__SWIG_1")]
  public static extern IntPtr StringProc_str__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_StringProc")]
  public static extern IntPtr new_StringProc();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_StringProc")]
  public static extern void delete_StringProc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_iid_get")]
  public static extern IntPtr IUrl_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_getUrl")]
  public static extern IntPtr IUrl_getUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_setUrl")]
  public static extern bool IUrl_setUrl(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_getManifest")]
  public static extern IntPtr IUrl_getManifest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrl_isLocalFile")]
  public static extern bool IUrl_isLocalFile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUrl")]
  public static extern void delete_IUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_clsid_get")]
  public static extern IntPtr UrlProcess_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_aiid_get")]
  public static extern IntPtr UrlProcess_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_niid_get")]
  public static extern int UrlProcess_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_kStrUrlKey_get")]
  public static extern IntPtr UrlProcess_kStrUrlKey_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_test")]
  public static extern void UrlProcess_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UrlProcess")]
  public static extern IntPtr new_UrlProcess();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UrlProcess")]
  public static extern void delete_UrlProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_AddRef")]
  public static extern uint UrlProcess_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_Release")]
  public static extern uint UrlProcess_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_11")]
  public static extern void intrusive_ptr_add_ref__SWIG_11(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_11")]
  public static extern void intrusive_ptr_release__SWIG_11(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getSpecStatic")]
  public static extern IntPtr UrlProcess_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getSpec")]
  public static extern IntPtr UrlProcess_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getOutput__SWIG_0")]
  public static extern IntPtr UrlProcess_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getAttributeSchema")]
  public static extern IntPtr UrlProcess_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getAttributes")]
  public static extern IntPtr UrlProcess_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_setAttributes")]
  public static extern void UrlProcess_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getUrl")]
  public static extern IntPtr UrlProcess_getUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_setUrl")]
  public static extern bool UrlProcess_setUrl(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_getManifest")]
  public static extern IntPtr UrlProcess_getManifest(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcess_isLocalFile")]
  public static extern bool UrlProcess_isLocalFile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitError_clsid_get")]
  public static extern IntPtr URLInitError_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitError_aiid_get")]
  public static extern IntPtr URLInitError_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitError_niid_get")]
  public static extern int URLInitError_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitError_AddRef")]
  public static extern uint URLInitError_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitError_Release")]
  public static extern uint URLInitError_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_URLInitError")]
  public static extern IntPtr new_URLInitError();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_URLInitError")]
  public static extern void delete_URLInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_iid_get")]
  public static extern IntPtr IUserCredentials_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_getCredentialsType")]
  public static extern IntPtr IUserCredentials_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_getCredentialsCount")]
  public static extern int IUserCredentials_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_getCredentials__SWIG_0")]
  public static extern IntPtr IUserCredentials_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_getCredentials__SWIG_1")]
  public static extern IntPtr IUserCredentials_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentials_findFirstCredentialOfType")]
  public static extern IntPtr IUserCredentials_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentials")]
  public static extern void delete_IUserCredentials(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_iid_get")]
  public static extern IntPtr IUserCredentialsError_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_getNeededCredentialsType")]
  public static extern IntPtr IUserCredentialsError_getNeededCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsError_getCredentialsTarget")]
  public static extern IntPtr IUserCredentialsError_getCredentialsTarget(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentialsError")]
  public static extern void delete_IUserCredentialsError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_clsid_get")]
  public static extern IntPtr UserCredentialsInitError_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_aiid_get")]
  public static extern IntPtr UserCredentialsInitError_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_niid_get")]
  public static extern int UserCredentialsInitError_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_AddRef")]
  public static extern uint UserCredentialsInitError_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_Release")]
  public static extern uint UserCredentialsInitError_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_getErrorID")]
  public static extern IntPtr UserCredentialsInitError_getErrorID(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError__SWIG_0")]
  public static extern IntPtr new_UserCredentialsInitError__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsInitError__SWIG_1")]
  public static extern IntPtr new_UserCredentialsInitError__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_getError")]
  public static extern IntPtr UserCredentialsInitError_getError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_setError")]
  public static extern void UserCredentialsInitError_setError(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_getNeededCredentialsType")]
  public static extern IntPtr UserCredentialsInitError_getNeededCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_getCredentialsTarget")]
  public static extern IntPtr UserCredentialsInitError_getCredentialsTarget(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitError_setCredentialsDetials")]
  public static extern void UserCredentialsInitError_setCredentialsDetials(HandleRef jarg1, HandleRef jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsInitError")]
  public static extern void delete_UserCredentialsInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_clsid_get")]
  public static extern IntPtr UserCredentialsList_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_aiid_get")]
  public static extern IntPtr UserCredentialsList_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_niid_get")]
  public static extern int UserCredentialsList_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_AddRef")]
  public static extern uint UserCredentialsList_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_Release")]
  public static extern uint UserCredentialsList_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_getCredentialsType")]
  public static extern IntPtr UserCredentialsList_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_getCredentialsCount")]
  public static extern int UserCredentialsList_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_getCredentials__SWIG_0")]
  public static extern IntPtr UserCredentialsList_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_getCredentials__SWIG_1")]
  public static extern IntPtr UserCredentialsList_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_findFirstCredentialOfType")]
  public static extern IntPtr UserCredentialsList_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsList_addCredential")]
  public static extern void UserCredentialsList_addCredential(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsList")]
  public static extern IntPtr new_UserCredentialsList();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsList")]
  public static extern void delete_UserCredentialsList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_iid_get")]
  public static extern IntPtr IUsernameAndPasswordCredentials_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_getUsername")]
  public static extern IntPtr IUsernameAndPasswordCredentials_getUsername(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentials_getPassword")]
  public static extern IntPtr IUsernameAndPasswordCredentials_getPassword(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUsernameAndPasswordCredentials")]
  public static extern void delete_IUsernameAndPasswordCredentials(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_clsid_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_aiid_get")]
  public static extern IntPtr UsernameAndPasswordCredentials_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_niid_get")]
  public static extern int UsernameAndPasswordCredentials_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_AddRef")]
  public static extern uint UsernameAndPasswordCredentials_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_Release")]
  public static extern uint UsernameAndPasswordCredentials_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getCredentialsType")]
  public static extern IntPtr UsernameAndPasswordCredentials_getCredentialsType(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getCredentialsCount")]
  public static extern int UsernameAndPasswordCredentials_getCredentialsCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getCredentials__SWIG_0")]
  public static extern IntPtr UsernameAndPasswordCredentials_getCredentials__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getCredentials__SWIG_1")]
  public static extern IntPtr UsernameAndPasswordCredentials_getCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_findFirstCredentialOfType")]
  public static extern IntPtr UsernameAndPasswordCredentials_findFirstCredentialOfType(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getUsername")]
  public static extern IntPtr UsernameAndPasswordCredentials_getUsername(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_getPassword")]
  public static extern IntPtr UsernameAndPasswordCredentials_getPassword(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_create")]
  public static extern IntPtr UsernameAndPasswordCredentials_create(IntPtr jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentials_setUsernameAndPassword")]
  public static extern void UsernameAndPasswordCredentials_setUsernameAndPassword(HandleRef jarg1, IntPtr jarg2, IntPtr jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UsernameAndPasswordCredentials")]
  public static extern IntPtr new_UsernameAndPasswordCredentials();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UsernameAndPasswordCredentials")]
  public static extern void delete_UsernameAndPasswordCredentials(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_iid_get")]
  public static extern IntPtr IUserCredentialsProvider_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_getCredentials")]
  public static extern IntPtr IUserCredentialsProvider_getCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProvider_confirmCredentials")]
  public static extern void IUserCredentialsProvider_confirmCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IUserCredentialsProvider")]
  public static extern void delete_IUserCredentialsProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_clsid_get")]
  public static extern IntPtr UserCredentialsProviderProcess_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_aiid_get")]
  public static extern IntPtr UserCredentialsProviderProcess_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_niid_get")]
  public static extern int UserCredentialsProviderProcess_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_test")]
  public static extern void UserCredentialsProviderProcess_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_AddRef")]
  public static extern uint UserCredentialsProviderProcess_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_Release")]
  public static extern uint UserCredentialsProviderProcess_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_add_ref__SWIG_12")]
  public static extern void intrusive_ptr_add_ref__SWIG_12(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_intrusive_ptr_release__SWIG_12")]
  public static extern void intrusive_ptr_release__SWIG_12(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getSpecStatic")]
  public static extern IntPtr UserCredentialsProviderProcess_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getSpec")]
  public static extern IntPtr UserCredentialsProviderProcess_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getOutput__SWIG_0")]
  public static extern IntPtr UserCredentialsProviderProcess_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getAttributeSchema")]
  public static extern IntPtr UserCredentialsProviderProcess_getAttributeSchema(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getAttributes")]
  public static extern IntPtr UserCredentialsProviderProcess_getAttributes(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_setAttributes")]
  public static extern void UserCredentialsProviderProcess_setAttributes(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_getCredentials")]
  public static extern IntPtr UserCredentialsProviderProcess_getCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcess_confirmCredentials")]
  public static extern void UserCredentialsProviderProcess_confirmCredentials(HandleRef jarg1, IntPtr jarg2, HandleRef jarg3, bool jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_UserCredentialsProviderProcess")]
  public static extern IntPtr new_UserCredentialsProviderProcess();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_UserCredentialsProviderProcess")]
  public static extern void delete_UserCredentialsProviderProcess(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_iid_get")]
  public static extern IntPtr IViewPoint_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_getCoveragePipelines")]
  public static extern IntPtr IViewPoint_getCoveragePipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_getFeatureCollectionPipelines")]
  public static extern IntPtr IViewPoint_getFeatureCollectionPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_getElevationPipelines")]
  public static extern IntPtr IViewPoint_getElevationPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_getAllPipelines")]
  public static extern IntPtr IViewPoint_getAllPipelines(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPoint_getViewPointChangedNotifier")]
  public static extern IntPtr IViewPoint_getViewPointChangedNotifier(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IViewPoint")]
  public static extern void delete_IViewPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_create")]
  public static extern IntPtr ViewPointChangedEvent_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ViewPointChangedEvent")]
  public static extern void delete_ViewPointChangedEvent(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEvent_dynamic_cast")]
  public static extern IntPtr ViewPointChangedEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProvider_iid_get")]
  public static extern IntPtr IToolBoxProvider_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IToolBoxProvider")]
  public static extern void delete_IToolBoxProvider(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_clsid_get")]
  public static extern IntPtr ToolBoxProviderProc_clsid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_aiid_get")]
  public static extern IntPtr ToolBoxProviderProc_aiid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_niid_get")]
  public static extern int ToolBoxProviderProc_niid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_AddRef")]
  public static extern uint ToolBoxProviderProc_AddRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_Release")]
  public static extern uint ToolBoxProviderProc_Release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_getSpecStatic")]
  public static extern IntPtr ToolBoxProviderProc_getSpecStatic();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_getSpec")]
  public static extern IntPtr ToolBoxProviderProc_getSpec(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_getOutput__SWIG_0")]
  public static extern IntPtr ToolBoxProviderProc_getOutput__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_getProcessList")]
  public static extern IntPtr ToolBoxProviderProc_getProcessList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProc_setProcessList")]
  public static extern void ToolBoxProviderProc_setProcessList(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_ToolBoxProviderProc")]
  public static extern IntPtr new_ToolBoxProviderProc();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ToolBoxProviderProc")]
  public static extern void delete_ToolBoxProviderProc(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_iid_get")]
  public static extern IntPtr ICoverageHistogramCalculator_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculator_getHistogram")]
  public static extern IntPtr ICoverageHistogramCalculator_getHistogram(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_ICoverageHistogramCalculator")]
  public static extern void delete_ICoverageHistogramCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IGeoPacketSource_iid_get")]
  public static extern IntPtr IGeoPacketSource_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IGeoPacketSource")]
  public static extern void delete_IGeoPacketSource(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_clone")]
  public static extern IntPtr PYXSpatialReferenceSystem_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_knMaxZone_get")]
  public static extern int PYXSpatialReferenceSystem_knMaxZone_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_create")]
  public static extern IntPtr PYXSpatialReferenceSystem_create();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXSpatialReferenceSystem")]
  public static extern IntPtr new_PYXSpatialReferenceSystem();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXSpatialReferenceSystem")]
  public static extern void delete_PYXSpatialReferenceSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_kstrScope_get")]
  public static extern IntPtr PYXSpatialReferenceSystem_kstrScope_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getScope")]
  public static extern IntPtr PYXSpatialReferenceSystem_getScope(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setSystem")]
  public static extern void PYXSpatialReferenceSystem_setSystem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getSystem")]
  public static extern int PYXSpatialReferenceSystem_getSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setDatum")]
  public static extern void PYXSpatialReferenceSystem_setDatum(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getDatum")]
  public static extern int PYXSpatialReferenceSystem_getDatum(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setProjection")]
  public static extern void PYXSpatialReferenceSystem_setProjection(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getProjection")]
  public static extern int PYXSpatialReferenceSystem_getProjection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setIsUTMNorth")]
  public static extern void PYXSpatialReferenceSystem_setIsUTMNorth(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getIsUTMNorth")]
  public static extern bool PYXSpatialReferenceSystem_getIsUTMNorth(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setZone")]
  public static extern void PYXSpatialReferenceSystem_setZone(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getZone")]
  public static extern int PYXSpatialReferenceSystem_getZone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_setWKT")]
  public static extern void PYXSpatialReferenceSystem_setWKT(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSpatialReferenceSystem_getWKT")]
  public static extern IntPtr PYXSpatialReferenceSystem_getWKT(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_knMinimumGeometryCount_get")]
  public static extern int PYXXYBoundsGeometry_knMinimumGeometryCount_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_test")]
  public static extern void PYXXYBoundsGeometry_test();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_create__SWIG_0")]
  public static extern IntPtr PYXXYBoundsGeometry_create__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_create__SWIG_1")]
  public static extern IntPtr PYXXYBoundsGeometry_create__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_create__SWIG_2")]
  public static extern IntPtr PYXXYBoundsGeometry_create__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry__SWIG_0")]
  public static extern IntPtr new_PYXXYBoundsGeometry__SWIG_0(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_expand")]
  public static extern void PYXXYBoundsGeometry_expand(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXXYBoundsGeometry__SWIG_1")]
  public static extern IntPtr new_PYXXYBoundsGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_clone")]
  public static extern IntPtr PYXXYBoundsGeometry_clone(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_serialize")]
  public static extern void PYXXYBoundsGeometry_serialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_deserialize")]
  public static extern void PYXXYBoundsGeometry_deserialize(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_isCollection")]
  public static extern bool PYXXYBoundsGeometry_isCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_isEmpty")]
  public static extern bool PYXXYBoundsGeometry_isEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_getBounds")]
  public static extern IntPtr PYXXYBoundsGeometry_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_getCoordConverter")]
  public static extern IntPtr PYXXYBoundsGeometry_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometry_getBoundingRects")]
  public static extern void PYXXYBoundsGeometry_getBoundingRects(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXXYBoundsGeometry")]
  public static extern void delete_PYXXYBoundsGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageValueGetter_getCoverageValue")]
  public static extern bool XYCoverageValueGetter_getCoverageValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_XYCoverageValueGetter")]
  public static extern IntPtr new_XYCoverageValueGetter();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_XYCoverageValueGetter")]
  public static extern void delete_XYCoverageValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYAsyncValueGetter_addAsyncRequests")]
  public static extern void XYAsyncValueGetter_addAsyncRequests(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYAsyncValueGetter_addAsyncRequest")]
  public static extern void XYAsyncValueGetter_addAsyncRequest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYAsyncValueGetter_join")]
  public static extern bool XYAsyncValueGetter_join(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_XYAsyncValueGetter")]
  public static extern void delete_XYAsyncValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_iid_get")]
  public static extern IntPtr IXYCoverage_iid_get();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr IXYCoverage_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_getCoverageValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getAsyncCoverageValueGetter")]
  public static extern IntPtr IXYCoverage_getAsyncCoverageValueGetter(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getCoverageValue")]
  public static extern bool IXYCoverage_getCoverageValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getMatrixOfValues")]
  public static extern void IXYCoverage_getMatrixOfValues(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_hasSpatialReferenceSystem")]
  public static extern bool IXYCoverage_hasSpatialReferenceSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_setSpatialReferenceSystem")]
  public static extern void IXYCoverage_setSpatialReferenceSystem(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getCoordConverter")]
  public static extern IntPtr IXYCoverage_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getSpatialPrecision")]
  public static extern double IXYCoverage_getSpatialPrecision(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getBounds")]
  public static extern IntPtr IXYCoverage_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_getStepSize")]
  public static extern IntPtr IXYCoverage_getStepSize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_nativeToRasterSubPixel")]
  public static extern IntPtr IXYCoverage_nativeToRasterSubPixel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_tileLoadHint")]
  public static extern void IXYCoverage_tileLoadHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverage_tileLoadDoneHint")]
  public static extern void IXYCoverage_tileLoadDoneHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IXYCoverage")]
  public static extern void delete_IXYCoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageValueGetterDefault_setXYCoverageValue")]
  public static extern void XYCoverageValueGetterDefault_setXYCoverageValue(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageValueGetterDefault_getCoverageValue")]
  public static extern bool XYCoverageValueGetterDefault_getCoverageValue(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_XYCoverageValueGetterDefault")]
  public static extern IntPtr new_XYCoverageValueGetterDefault();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_XYCoverageValueGetterDefault")]
  public static extern void delete_XYCoverageValueGetterDefault(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DefaultXYAsyncValueGetter_create")]
  public static extern IntPtr DefaultXYAsyncValueGetter_create(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_DefaultXYAsyncValueGetter")]
  public static extern IntPtr new_DefaultXYAsyncValueGetter(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DefaultXYAsyncValueGetter_addAsyncRequests")]
  public static extern void DefaultXYAsyncValueGetter_addAsyncRequests(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DefaultXYAsyncValueGetter_addAsyncRequest")]
  public static extern void DefaultXYAsyncValueGetter_addAsyncRequest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DefaultXYAsyncValueGetter_join")]
  public static extern bool DefaultXYAsyncValueGetter_join(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_DefaultXYAsyncValueGetter")]
  public static extern void delete_DefaultXYAsyncValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getCoverageDefinition__SWIG_0")]
  public static extern IntPtr XYCoverageBase_getCoverageDefinition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getCoverageValueGetter")]
  public static extern IntPtr XYCoverageBase_getCoverageValueGetter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getAsyncCoverageValueGetter")]
  public static extern IntPtr XYCoverageBase_getAsyncCoverageValueGetter(HandleRef jarg1, HandleRef jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getCoverageValue__SWIG_0")]
  public static extern bool XYCoverageBase_getCoverageValue__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getCoverageValue__SWIG_1")]
  public static extern bool XYCoverageBase_getCoverageValue__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getMatrixOfValues__SWIG_0")]
  public static extern void XYCoverageBase_getMatrixOfValues__SWIG_0(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5, int jarg6, int jarg7);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getMatrixOfValues__SWIG_1")]
  public static extern void XYCoverageBase_getMatrixOfValues__SWIG_1(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, int jarg4, int jarg5, int jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_hasSpatialReferenceSystem")]
  public static extern bool XYCoverageBase_hasSpatialReferenceSystem(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_setSpatialReferenceSystem")]
  public static extern void XYCoverageBase_setSpatialReferenceSystem(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getCoordConverter")]
  public static extern IntPtr XYCoverageBase_getCoordConverter(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getSpatialPrecision")]
  public static extern double XYCoverageBase_getSpatialPrecision(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getBounds")]
  public static extern IntPtr XYCoverageBase_getBounds(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_getStepSize")]
  public static extern IntPtr XYCoverageBase_getStepSize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_nativeToRasterSubPixel")]
  public static extern IntPtr XYCoverageBase_nativeToRasterSubPixel(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_tileLoadHint")]
  public static extern void XYCoverageBase_tileLoadHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBase_tileLoadDoneHint")]
  public static extern void XYCoverageBase_tileLoadDoneHint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_XYCoverageBase")]
  public static extern void delete_XYCoverageBase(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DInt__SWIG_0")]
  public static extern IntPtr new_PYXCoord2DInt__SWIG_0(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DInt__SWIG_1")]
  public static extern IntPtr new_PYXCoord2DInt__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DInt__SWIG_2")]
  public static extern IntPtr new_PYXCoord2DInt__SWIG_2();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DInt__SWIG_3")]
  public static extern IntPtr new_PYXCoord2DInt__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_equal__SWIG_0")]
  public static extern bool PYXCoord2DInt_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_equal__SWIG_1")]
  public static extern bool PYXCoord2DInt_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_x")]
  public static extern int PYXCoord2DInt_x(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_setX")]
  public static extern void PYXCoord2DInt_setX(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_y")]
  public static extern int PYXCoord2DInt_y(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_setY")]
  public static extern void PYXCoord2DInt_setY(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_distance")]
  public static extern double PYXCoord2DInt_distance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_midpoint")]
  public static extern IntPtr PYXCoord2DInt_midpoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_scale")]
  public static extern void PYXCoord2DInt_scale(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_normalize")]
  public static extern void PYXCoord2DInt_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DInt_dot")]
  public static extern double PYXCoord2DInt_dot(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoord2DInt")]
  public static extern void delete_PYXCoord2DInt(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DInt__SWIG_0")]
  public static extern IntPtr new_PYXCoord3DInt__SWIG_0(int jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DInt__SWIG_1")]
  public static extern IntPtr new_PYXCoord3DInt__SWIG_1(int jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DInt__SWIG_2")]
  public static extern IntPtr new_PYXCoord3DInt__SWIG_2(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DInt__SWIG_3")]
  public static extern IntPtr new_PYXCoord3DInt__SWIG_3();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DInt__SWIG_4")]
  public static extern IntPtr new_PYXCoord3DInt__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_set")]
  public static extern void PYXCoord3DInt_set(HandleRef jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_equal__SWIG_0")]
  public static extern bool PYXCoord3DInt_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_equal__SWIG_1")]
  public static extern bool PYXCoord3DInt_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_x")]
  public static extern int PYXCoord3DInt_x(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_setX")]
  public static extern void PYXCoord3DInt_setX(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_y")]
  public static extern int PYXCoord3DInt_y(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_setY")]
  public static extern void PYXCoord3DInt_setY(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_z")]
  public static extern int PYXCoord3DInt_z(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_setZ")]
  public static extern void PYXCoord3DInt_setZ(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_distance")]
  public static extern double PYXCoord3DInt_distance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_scale")]
  public static extern void PYXCoord3DInt_scale(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_length")]
  public static extern double PYXCoord3DInt_length(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_squareLength")]
  public static extern double PYXCoord3DInt_squareLength(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_normalize")]
  public static extern void PYXCoord3DInt_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_negate")]
  public static extern void PYXCoord3DInt_negate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_dot")]
  public static extern double PYXCoord3DInt_dot(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_translate")]
  public static extern void PYXCoord3DInt_translate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_subtract")]
  public static extern void PYXCoord3DInt_subtract(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_cross")]
  public static extern IntPtr PYXCoord3DInt_cross(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_pointAlongLine")]
  public static extern IntPtr PYXCoord3DInt_pointAlongLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DInt_reset")]
  public static extern void PYXCoord3DInt_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoord3DInt")]
  public static extern void delete_PYXCoord3DInt(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DDouble__SWIG_0")]
  public static extern IntPtr new_PYXCoord2DDouble__SWIG_0(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DDouble__SWIG_1")]
  public static extern IntPtr new_PYXCoord2DDouble__SWIG_1(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DDouble__SWIG_2")]
  public static extern IntPtr new_PYXCoord2DDouble__SWIG_2();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord2DDouble__SWIG_3")]
  public static extern IntPtr new_PYXCoord2DDouble__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_equal__SWIG_0")]
  public static extern bool PYXCoord2DDouble_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_equal__SWIG_1")]
  public static extern bool PYXCoord2DDouble_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_x")]
  public static extern double PYXCoord2DDouble_x(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_setX")]
  public static extern void PYXCoord2DDouble_setX(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_y")]
  public static extern double PYXCoord2DDouble_y(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_setY")]
  public static extern void PYXCoord2DDouble_setY(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_distance")]
  public static extern double PYXCoord2DDouble_distance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_midpoint")]
  public static extern IntPtr PYXCoord2DDouble_midpoint(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_scale")]
  public static extern void PYXCoord2DDouble_scale(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_normalize")]
  public static extern void PYXCoord2DDouble_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord2DDouble_dot")]
  public static extern double PYXCoord2DDouble_dot(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoord2DDouble")]
  public static extern void delete_PYXCoord2DDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DDouble__SWIG_0")]
  public static extern IntPtr new_PYXCoord3DDouble__SWIG_0(double jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DDouble__SWIG_1")]
  public static extern IntPtr new_PYXCoord3DDouble__SWIG_1(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DDouble__SWIG_2")]
  public static extern IntPtr new_PYXCoord3DDouble__SWIG_2(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DDouble__SWIG_3")]
  public static extern IntPtr new_PYXCoord3DDouble__SWIG_3();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXCoord3DDouble__SWIG_4")]
  public static extern IntPtr new_PYXCoord3DDouble__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_set")]
  public static extern void PYXCoord3DDouble_set(HandleRef jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_equal__SWIG_0")]
  public static extern bool PYXCoord3DDouble_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_equal__SWIG_1")]
  public static extern bool PYXCoord3DDouble_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_x")]
  public static extern double PYXCoord3DDouble_x(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_setX")]
  public static extern void PYXCoord3DDouble_setX(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_y")]
  public static extern double PYXCoord3DDouble_y(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_setY")]
  public static extern void PYXCoord3DDouble_setY(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_z")]
  public static extern double PYXCoord3DDouble_z(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_setZ")]
  public static extern void PYXCoord3DDouble_setZ(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_distance")]
  public static extern double PYXCoord3DDouble_distance(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_scale")]
  public static extern void PYXCoord3DDouble_scale(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_length")]
  public static extern double PYXCoord3DDouble_length(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_squareLength")]
  public static extern double PYXCoord3DDouble_squareLength(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_normalize")]
  public static extern void PYXCoord3DDouble_normalize(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_negate")]
  public static extern void PYXCoord3DDouble_negate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_dot")]
  public static extern double PYXCoord3DDouble_dot(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_translate")]
  public static extern void PYXCoord3DDouble_translate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_subtract")]
  public static extern void PYXCoord3DDouble_subtract(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_cross")]
  public static extern IntPtr PYXCoord3DDouble_cross(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_pointAlongLine")]
  public static extern IntPtr PYXCoord3DDouble_pointAlongLine(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoord3DDouble_reset")]
  public static extern void PYXCoord3DDouble_reset(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXCoord3DDouble")]
  public static extern void delete_PYXCoord3DDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_0")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_0(double jarg1, double jarg2, double jarg3, double jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_1")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_1(double jarg1, double jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_2")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_2(double jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_3")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_3(double jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_4")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_4();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_PYXRect2DDouble__SWIG_5")]
  public static extern IntPtr new_PYXRect2DDouble__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_equal__SWIG_0")]
  public static extern bool PYXRect2DDouble_equal__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_equal__SWIG_1")]
  public static extern bool PYXRect2DDouble_equal__SWIG_1(HandleRef jarg1, HandleRef jarg2, double jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_contains")]
  public static extern bool PYXRect2DDouble_contains(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_touch")]
  public static extern bool PYXRect2DDouble_touch(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_xMin")]
  public static extern double PYXRect2DDouble_xMin(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_setXMin")]
  public static extern void PYXRect2DDouble_setXMin(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_yMin")]
  public static extern double PYXRect2DDouble_yMin(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_setYMin")]
  public static extern void PYXRect2DDouble_setYMin(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_xMax")]
  public static extern double PYXRect2DDouble_xMax(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_setXMax")]
  public static extern void PYXRect2DDouble_setXMax(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_yMax")]
  public static extern double PYXRect2DDouble_yMax(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_setYMax")]
  public static extern void PYXRect2DDouble_setYMax(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_width")]
  public static extern double PYXRect2DDouble_width(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_height")]
  public static extern double PYXRect2DDouble_height(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_degenerate")]
  public static extern bool PYXRect2DDouble_degenerate(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_empty")]
  public static extern bool PYXRect2DDouble_empty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_setEmpty")]
  public static extern void PYXRect2DDouble_setEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_inside")]
  public static extern bool PYXRect2DDouble_inside(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_expandX")]
  public static extern void PYXRect2DDouble_expandX(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_expandY")]
  public static extern void PYXRect2DDouble_expandY(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_expand__SWIG_0")]
  public static extern void PYXRect2DDouble_expand__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_expand__SWIG_1")]
  public static extern void PYXRect2DDouble_expand__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_clip")]
  public static extern void PYXRect2DDouble_clip(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_center")]
  public static extern IntPtr PYXRect2DDouble_center(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_scale")]
  public static extern void PYXRect2DDouble_scale(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_scaleInPlace")]
  public static extern void PYXRect2DDouble_scaleInPlace(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_flip")]
  public static extern void PYXRect2DDouble_flip(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_translate")]
  public static extern void PYXRect2DDouble_translate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_intersects")]
  public static extern bool PYXRect2DDouble_intersects(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_pin")]
  public static extern IntPtr PYXRect2DDouble_pin(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRect2DDouble_fixAspect")]
  public static extern void PYXRect2DDouble_fixAspect(HandleRef jarg1, double jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_PYXRect2DDouble")]
  public static extern void delete_PYXRect2DDouble(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Clear")]
  public static extern void GdalInfoDataSourceNodeList_Clear(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Add")]
  public static extern void GdalInfoDataSourceNodeList_Add(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_size")]
  public static extern uint GdalInfoDataSourceNodeList_size(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_capacity")]
  public static extern uint GdalInfoDataSourceNodeList_capacity(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_reserve")]
  public static extern void GdalInfoDataSourceNodeList_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GdalInfoDataSourceNodeList__SWIG_0")]
  public static extern IntPtr new_GdalInfoDataSourceNodeList__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_GdalInfoDataSourceNodeList__SWIG_1")]
  public static extern IntPtr new_GdalInfoDataSourceNodeList__SWIG_1(int jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_getitemcopy")]
  public static extern IntPtr GdalInfoDataSourceNodeList_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_getitem")]
  public static extern IntPtr GdalInfoDataSourceNodeList_getitem(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_setitem")]
  public static extern void GdalInfoDataSourceNodeList_setitem(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_AddRange")]
  public static extern void GdalInfoDataSourceNodeList_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_GetRange")]
  public static extern IntPtr GdalInfoDataSourceNodeList_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Insert")]
  public static extern void GdalInfoDataSourceNodeList_Insert(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_InsertRange")]
  public static extern void GdalInfoDataSourceNodeList_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_RemoveAt")]
  public static extern void GdalInfoDataSourceNodeList_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_RemoveRange")]
  public static extern void GdalInfoDataSourceNodeList_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Repeat")]
  public static extern IntPtr GdalInfoDataSourceNodeList_Repeat(HandleRef jarg1, int jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Reverse__SWIG_0")]
  public static extern void GdalInfoDataSourceNodeList_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_Reverse__SWIG_1")]
  public static extern void GdalInfoDataSourceNodeList_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GdalInfoDataSourceNodeList_SetRange")]
  public static extern void GdalInfoDataSourceNodeList_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_GdalInfoDataSourceNodeList")]
  public static extern void delete_GdalInfoDataSourceNodeList(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXIcosIterator")]
  public static extern IntPtr DynamicPointerCast_PYXIcosIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXIterator")]
  public static extern IntPtr DynamicPointerCast_PYXIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXIcosIterator")]
  public static extern IntPtr DynamicPointerCast_const_PYXIcosIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXIterator")]
  public static extern IntPtr DynamicPointerCast_const_PYXIterator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCell")]
  public static extern IntPtr DynamicPointerCast_PYXCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCell")]
  public static extern IntPtr DynamicPointerCast_const_PYXCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXTile")]
  public static extern IntPtr DynamicPointerCast_PYXTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXTile")]
  public static extern IntPtr DynamicPointerCast_const_PYXTile(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXMultiCell")]
  public static extern IntPtr DynamicPointerCast_PYXMultiCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXMultiCell")]
  public static extern IntPtr DynamicPointerCast_const_PYXMultiCell(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXTileCollection__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_PYXTileCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXTileCollection__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_PYXTileCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IFeature__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_IFeature__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRecord")]
  public static extern IntPtr DynamicPointerCast_IRecord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IFeature__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_IFeature__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRecord")]
  public static extern IntPtr DynamicPointerCast_const_IRecord(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IWritableFeature")]
  public static extern IntPtr DynamicPointerCast_IWritableFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IFeature__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_IFeature__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IWritableFeature")]
  public static extern IntPtr DynamicPointerCast_const_IWritableFeature(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IFeature__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_IFeature__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometryCollection__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_PYXGeometryCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometryCollection__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometryCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGlobalGeometry")]
  public static extern IntPtr DynamicPointerCast_PYXGlobalGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGlobalGeometry")]
  public static extern IntPtr DynamicPointerCast_const_PYXGlobalGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_6")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXXYBoundsGeometry")]
  public static extern IntPtr DynamicPointerCast_PYXXYBoundsGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_6")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXXYBoundsGeometry")]
  public static extern IntPtr DynamicPointerCast_const_PYXXYBoundsGeometry(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_ICoverage")]
  public static extern IntPtr DynamicPointerCast_ICoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_ICoverage")]
  public static extern IntPtr DynamicPointerCast_const_ICoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IDataProcessor")]
  public static extern IntPtr DynamicPointerCast_IDataProcessor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IDataProcessor")]
  public static extern IntPtr DynamicPointerCast_const_IDataProcessor(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IProcess__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_IProcess__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IProcess__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_IProcess__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometryCollection__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_PYXGeometryCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXTileCollection__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_PYXTileCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometryCollection__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometryCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXTileCollection__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_PYXTileCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IViewPoint")]
  public static extern IntPtr DynamicPointerCast_IViewPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IViewPoint")]
  public static extern IntPtr DynamicPointerCast_const_IViewPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IPath")]
  public static extern IntPtr DynamicPointerCast_IPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IUrl")]
  public static extern IntPtr DynamicPointerCast_IUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IPath")]
  public static extern IntPtr DynamicPointerCast_const_IPath(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IUrl")]
  public static extern IntPtr DynamicPointerCast_const_IUrl(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IBitmap__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_IBitmap__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IBitmap__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_IBitmap__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IBitmap__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_IBitmap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IProcess__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_IProcess__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IBitmap__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_IBitmap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IProcess__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_IProcess__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IEmbeddedResourceHolder__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_IEmbeddedResourceHolder__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCOM_IUnknown__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_PYXCOM_IUnknown__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IEmbeddedResourceHolder__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_IEmbeddedResourceHolder__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_const_PYXCOM_IUnknown__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IEmbeddedResourceHolder__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_IEmbeddedResourceHolder__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IProcess__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_IProcess__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IEmbeddedResourceHolder__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_IEmbeddedResourceHolder__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IProcess__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_const_IProcess__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCellHistogram")]
  public static extern IntPtr DynamicPointerCast_PYXCellHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXHistogram")]
  public static extern IntPtr DynamicPointerCast_PYXHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCellHistogram")]
  public static extern IntPtr DynamicPointerCast_const_PYXCellHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXHistogram")]
  public static extern IntPtr DynamicPointerCast_const_PYXHistogram(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXVectorGeometry2")]
  public static extern IntPtr DynamicPointerCast_PYXVectorGeometry2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometry__SWIG_7")]
  public static extern IntPtr DynamicPointerCast_PYXGeometry__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXVectorGeometry2")]
  public static extern IntPtr DynamicPointerCast_const_PYXVectorGeometry2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometry__SWIG_7")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometry__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXVectorRegion")]
  public static extern IntPtr DynamicPointerCast_PYXVectorRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXVectorRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXVectorRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXVectorPointRegion")]
  public static extern IntPtr DynamicPointerCast_PYXVectorPointRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXVectorPointRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXVectorPointRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCircleRegion")]
  public static extern IntPtr DynamicPointerCast_PYXCircleRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCircleRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXCircleRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCurveRegion")]
  public static extern IntPtr DynamicPointerCast_PYXCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCurveRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_3")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXMultiCurveRegion")]
  public static extern IntPtr DynamicPointerCast_PYXMultiCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXMultiCurveRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXMultiCurveRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_4")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXMultiPolygonRegion")]
  public static extern IntPtr DynamicPointerCast_PYXMultiPolygonRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_IRegion__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_IRegion__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXMultiPolygonRegion")]
  public static extern IntPtr DynamicPointerCast_const_PYXMultiPolygonRegion(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_IRegion__SWIG_5")]
  public static extern IntPtr DynamicPointerCast_const_IRegion__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXCoverageWhereCondition")]
  public static extern IntPtr DynamicPointerCast_PYXCoverageWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXWhereCondition__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_PYXWhereCondition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXCoverageWhereCondition")]
  public static extern IntPtr DynamicPointerCast_const_PYXCoverageWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXWhereCondition__SWIG_0")]
  public static extern IntPtr DynamicPointerCast_const_PYXWhereCondition__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXFeaturesWhereCondition")]
  public static extern IntPtr DynamicPointerCast_PYXFeaturesWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXWhereCondition__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_PYXWhereCondition__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXFeaturesWhereCondition")]
  public static extern IntPtr DynamicPointerCast_const_PYXFeaturesWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXWhereCondition__SWIG_1")]
  public static extern IntPtr DynamicPointerCast_const_PYXWhereCondition__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXGeometryWhereCondition")]
  public static extern IntPtr DynamicPointerCast_PYXGeometryWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_PYXWhereCondition__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_PYXWhereCondition__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXGeometryWhereCondition")]
  public static extern IntPtr DynamicPointerCast_const_PYXGeometryWhereCondition(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DynamicPointerCast_const_PYXWhereCondition__SWIG_2")]
  public static extern IntPtr DynamicPointerCast_const_PYXWhereCondition__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_0")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_0")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_0")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_1")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_1")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_2")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IWritableFeature__SWIG_0")]
  public static extern IntPtr QueryInterface_IWritableFeature__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_2")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IWritableFeature_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IWritableFeature_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_3")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecordCollection__SWIG_0")]
  public static extern IntPtr QueryInterface_IRecordCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_3")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecordCollection_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IRecordCollection_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_4")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeatureCollection__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_4")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeatureCollection_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_5")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollectionIndex")]
  public static extern IntPtr QueryInterface_IFeatureCollectionIndex(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_5")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollectionIndex_const")]
  public static extern IntPtr QueryInterface_IFeatureCollectionIndex_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_6")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeatureGroup__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_6")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IFeatureGroup_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_7")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverageHistogramCalculator")]
  public static extern IntPtr QueryInterface_ICoverageHistogramCalculator(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_7")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverageHistogramCalculator_const")]
  public static extern IntPtr QueryInterface_ICoverageHistogramCalculator_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_8")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverage__SWIG_0")]
  public static extern IntPtr QueryInterface_ICoverage__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_8")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_8(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverage_const__SWIG_0")]
  public static extern IntPtr QueryInterface_ICoverage_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_9")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_9(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoordConverterFromSrsFactory")]
  public static extern IntPtr QueryInterface_ICoordConverterFromSrsFactory(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_9")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_9(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoordConverterFromSrsFactory_const")]
  public static extern IntPtr QueryInterface_ICoordConverterFromSrsFactory_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_10")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_10(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICache")]
  public static extern IntPtr QueryInterface_ICache(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_10")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_10(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICache_const")]
  public static extern IntPtr QueryInterface_ICache_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_11")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_11(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IString")]
  public static extern IntPtr QueryInterface_IString(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_11")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_11(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IString_const")]
  public static extern IntPtr QueryInterface_IString_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_12")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_12(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcessCollection")]
  public static extern IntPtr QueryInterface_IProcessCollection(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_12")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_12(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcessCollection_const")]
  public static extern IntPtr QueryInterface_IProcessCollection_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_13")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_13(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IXYCoverage")]
  public static extern IntPtr QueryInterface_IXYCoverage(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_13")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_13(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IXYCoverage_const")]
  public static extern IntPtr QueryInterface_IXYCoverage_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_14")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_14(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPipeBuilder")]
  public static extern IntPtr QueryInterface_IPipeBuilder(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_14")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_14(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPipeBuilder_const")]
  public static extern IntPtr QueryInterface_IPipeBuilder_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_15")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_15(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPipeFormater")]
  public static extern IntPtr QueryInterface_IPipeFormater(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_15")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_15(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPipeFormater_const")]
  public static extern IntPtr QueryInterface_IPipeFormater_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_16")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_16(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IDataProcessor__SWIG_0")]
  public static extern IntPtr QueryInterface_IDataProcessor__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_16")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_16(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IDataProcessor_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IDataProcessor_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_17")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_17(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPath__SWIG_0")]
  public static extern IntPtr QueryInterface_IPath__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_17")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_17(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPath_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IPath_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_18")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_18(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUrl__SWIG_0")]
  public static extern IntPtr QueryInterface_IUrl__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_18")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_18(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUrl_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IUrl_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_19")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_19(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentials__SWIG_0")]
  public static extern IntPtr QueryInterface_IUserCredentials__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_19")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_19(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentials_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IUserCredentials_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_20")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_20(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUsernameAndPasswordCredentials__SWIG_0")]
  public static extern IntPtr QueryInterface_IUsernameAndPasswordCredentials__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_20")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_20(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUsernameAndPasswordCredentials_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IUsernameAndPasswordCredentials_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_21")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_21(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsProvider__SWIG_0")]
  public static extern IntPtr QueryInterface_IUserCredentialsProvider__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_21")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_21(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsProvider_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IUserCredentialsProvider_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_22")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_22(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IBitmap__SWIG_0")]
  public static extern IntPtr QueryInterface_IBitmap__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_22")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_22(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IBitmap_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IBitmap_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_23")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_23(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IEmbeddedResourceHolder__SWIG_0")]
  public static extern IntPtr QueryInterface_IEmbeddedResourceHolder__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_23")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_23(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IEmbeddedResourceHolder_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IEmbeddedResourceHolder_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_24")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_24(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IViewPoint")]
  public static extern IntPtr QueryInterface_IViewPoint(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_24")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_24(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IViewPoint_const")]
  public static extern IntPtr QueryInterface_IViewPoint_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown__SWIG_25")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown__SWIG_25(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IToolBoxProvider__SWIG_0")]
  public static extern IntPtr QueryInterface_IToolBoxProvider__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_PYXCOM_IUnknown_const__SWIG_25")]
  public static extern IntPtr QueryInterface_PYXCOM_IUnknown_const__SWIG_25(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IToolBoxProvider_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IToolBoxProvider_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_1")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IDataProcessor__SWIG_1")]
  public static extern IntPtr QueryInterface_IDataProcessor__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IDataProcessor_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IDataProcessor_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_2")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPath__SWIG_1")]
  public static extern IntPtr QueryInterface_IPath__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_2")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IPath_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IPath_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_3")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUrl__SWIG_1")]
  public static extern IntPtr QueryInterface_IUrl__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_3")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUrl_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IUrl_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_4")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsProvider__SWIG_1")]
  public static extern IntPtr QueryInterface_IUserCredentialsProvider__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_4")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsProvider_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IUserCredentialsProvider_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_5")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IBitmap__SWIG_1")]
  public static extern IntPtr QueryInterface_IBitmap__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_5")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IBitmap_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IBitmap_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_6")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IEmbeddedResourceHolder__SWIG_1")]
  public static extern IntPtr QueryInterface_IEmbeddedResourceHolder__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_6")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_6(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IEmbeddedResourceHolder_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IEmbeddedResourceHolder_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess__SWIG_7")]
  public static extern IntPtr QueryInterface_IProcess__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IToolBoxProvider__SWIG_1")]
  public static extern IntPtr QueryInterface_IToolBoxProvider__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcess_const__SWIG_7")]
  public static extern IntPtr QueryInterface_IProcess_const__SWIG_7(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IToolBoxProvider_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IToolBoxProvider_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord__SWIG_0")]
  public static extern IntPtr QueryInterface_IRecord__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeatureCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord_const__SWIG_0")]
  public static extern IntPtr QueryInterface_IRecord_const__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeatureCollection_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord__SWIG_1")]
  public static extern IntPtr QueryInterface_IRecord__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecordCollection__SWIG_1")]
  public static extern IntPtr QueryInterface_IRecordCollection__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IRecord_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecordCollection_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IRecordCollection_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverage__SWIG_1")]
  public static extern IntPtr QueryInterface_ICoverage__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_ICoverage_const__SWIG_1")]
  public static extern IntPtr QueryInterface_ICoverage_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord__SWIG_2")]
  public static extern IntPtr QueryInterface_IRecord__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IRecord_const__SWIG_2")]
  public static extern IntPtr QueryInterface_IRecord_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_3")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeatureCollection__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_3")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection_const__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeatureCollection_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_4")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeatureGroup__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_4")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_4(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IFeatureGroup_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IWritableFeature__SWIG_1")]
  public static extern IntPtr QueryInterface_IWritableFeature__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature__SWIG_5")]
  public static extern IntPtr QueryInterface_IFeature__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IWritableFeature_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IWritableFeature_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeature_const__SWIG_5")]
  public static extern IntPtr QueryInterface_IFeature_const__SWIG_5(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection__SWIG_3")]
  public static extern IntPtr QueryInterface_IFeatureCollection__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeatureGroup__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureCollection_const__SWIG_3")]
  public static extern IntPtr QueryInterface_IFeatureCollection_const__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IFeatureGroup_const__SWIG_2")]
  public static extern IntPtr QueryInterface_IFeatureGroup_const__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentials__SWIG_1")]
  public static extern IntPtr QueryInterface_IUserCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUsernameAndPasswordCredentials__SWIG_1")]
  public static extern IntPtr QueryInterface_IUsernameAndPasswordCredentials__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentials_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IUserCredentials_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUsernameAndPasswordCredentials_const__SWIG_1")]
  public static extern IntPtr QueryInterface_IUsernameAndPasswordCredentials_const__SWIG_1(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcessInitError")]
  public static extern IntPtr QueryInterface_IProcessInitError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsError")]
  public static extern IntPtr QueryInterface_IUserCredentialsError(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IProcessInitError_const")]
  public static extern IntPtr QueryInterface_IProcessInitError_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_QueryInterface_IUserCredentialsError_const")]
  public static extern IntPtr QueryInterface_IUserCredentialsError_const(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookViewPointer__SWIG_0")]
  public static extern IntPtr new_IWorkbookViewPointer__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookViewPointer__SWIG_1")]
  public static extern IntPtr new_IWorkbookViewPointer__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookViewPointer__SWIG_2")]
  public static extern IntPtr new_IWorkbookViewPointer__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookViewPointer__SWIG_3")]
  public static extern IntPtr new_IWorkbookViewPointer__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbookViewPointer")]
  public static extern void delete_IWorkbookViewPointer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_reset__SWIG_0")]
  public static extern void IWorkbookViewPointer_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_reset__SWIG_1")]
  public static extern void IWorkbookViewPointer_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_get")]
  public static extern IntPtr IWorkbookViewPointer_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer___ref__")]
  public static extern IntPtr IWorkbookViewPointer___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer___deref__")]
  public static extern IntPtr IWorkbookViewPointer___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_swap")]
  public static extern void IWorkbookViewPointer_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_isNull")]
  public static extern bool IWorkbookViewPointer_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_isNotNull")]
  public static extern bool IWorkbookViewPointer_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_IsEmpty")]
  public static extern bool IWorkbookViewPointer_IsEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetColumnCount")]
  public static extern uint IWorkbookViewPointer_GetColumnCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetColumnName")]
  public static extern void IWorkbookViewPointer_GetColumnName(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetHeadingRow")]
  public static extern bool IWorkbookViewPointer_GetHeadingRow(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetHeadingCell")]
  public static extern bool IWorkbookViewPointer_GetHeadingCell(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetDataRowCount")]
  public static extern uint IWorkbookViewPointer_GetDataRowCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_IsDataRowEmpty")]
  public static extern bool IWorkbookViewPointer_IsDataRowEmpty(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetDataRow")]
  public static extern bool IWorkbookViewPointer_GetDataRow(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_GetDataCell")]
  public static extern bool IWorkbookViewPointer_GetDataCell(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_release")]
  public static extern int IWorkbookViewPointer_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookViewPointer_addRef")]
  public static extern int IWorkbookViewPointer_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookTablePointer__SWIG_0")]
  public static extern IntPtr new_IWorkbookTablePointer__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookTablePointer__SWIG_1")]
  public static extern IntPtr new_IWorkbookTablePointer__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookTablePointer__SWIG_2")]
  public static extern IntPtr new_IWorkbookTablePointer__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookTablePointer__SWIG_3")]
  public static extern IntPtr new_IWorkbookTablePointer__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbookTablePointer")]
  public static extern void delete_IWorkbookTablePointer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_reset__SWIG_0")]
  public static extern void IWorkbookTablePointer_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_reset__SWIG_1")]
  public static extern void IWorkbookTablePointer_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_get")]
  public static extern IntPtr IWorkbookTablePointer_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer___ref__")]
  public static extern IntPtr IWorkbookTablePointer___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer___deref__")]
  public static extern IntPtr IWorkbookTablePointer___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_swap")]
  public static extern void IWorkbookTablePointer_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_isNull")]
  public static extern bool IWorkbookTablePointer_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_isNotNull")]
  public static extern bool IWorkbookTablePointer_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_IsEmpty")]
  public static extern bool IWorkbookTablePointer_IsEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_CreateView")]
  public static extern IntPtr IWorkbookTablePointer_CreateView(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, uint jarg5, uint jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_CreateDefaultView")]
  public static extern IntPtr IWorkbookTablePointer_CreateDefaultView(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_GetColumnCount")]
  public static extern uint IWorkbookTablePointer_GetColumnCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_GetRowCount")]
  public static extern uint IWorkbookTablePointer_GetRowCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_GetCell")]
  public static extern bool IWorkbookTablePointer_GetCell(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_IsRowEmpty")]
  public static extern bool IWorkbookTablePointer_IsRowEmpty(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_release")]
  public static extern int IWorkbookTablePointer_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTablePointer_addRef")]
  public static extern int IWorkbookTablePointer_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookPointer__SWIG_0")]
  public static extern IntPtr new_IWorkbookPointer__SWIG_0();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookPointer__SWIG_1")]
  public static extern IntPtr new_IWorkbookPointer__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookPointer__SWIG_2")]
  public static extern IntPtr new_IWorkbookPointer__SWIG_2(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookPointer__SWIG_3")]
  public static extern IntPtr new_IWorkbookPointer__SWIG_3(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbookPointer")]
  public static extern void delete_IWorkbookPointer(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_reset__SWIG_0")]
  public static extern void IWorkbookPointer_reset__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_reset__SWIG_1")]
  public static extern void IWorkbookPointer_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_get")]
  public static extern IntPtr IWorkbookPointer_get(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer___ref__")]
  public static extern IntPtr IWorkbookPointer___ref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer___deref__")]
  public static extern IntPtr IWorkbookPointer___deref__(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_swap")]
  public static extern void IWorkbookPointer_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_isNull")]
  public static extern bool IWorkbookPointer_isNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_isNotNull")]
  public static extern bool IWorkbookPointer_isNotNull(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_GetName")]
  public static extern IntPtr IWorkbookPointer_GetName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_GetTableNames")]
  public static extern void IWorkbookPointer_GetTableNames(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_CreateTable")]
  public static extern IntPtr IWorkbookPointer_CreateTable(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_addRef")]
  public static extern int IWorkbookPointer_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookPointer_release")]
  public static extern int IWorkbookPointer_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbookView")]
  public static extern void delete_IWorkbookView(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_IsEmpty")]
  public static extern bool IWorkbookView_IsEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetColumnCount")]
  public static extern uint IWorkbookView_GetColumnCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetColumnName")]
  public static extern void IWorkbookView_GetColumnName(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetHeadingRow")]
  public static extern bool IWorkbookView_GetHeadingRow(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetHeadingCell")]
  public static extern bool IWorkbookView_GetHeadingCell(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetDataRowCount")]
  public static extern uint IWorkbookView_GetDataRowCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_IsDataRowEmpty")]
  public static extern bool IWorkbookView_IsDataRowEmpty(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetDataRow")]
  public static extern bool IWorkbookView_GetDataRow(HandleRef jarg1, uint jarg2, HandleRef jarg3);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_GetDataCell")]
  public static extern bool IWorkbookView_GetDataCell(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_release")]
  public static extern int IWorkbookView_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_releaseSwigExplicitIWorkbookView")]
  public static extern int IWorkbookView_releaseSwigExplicitIWorkbookView(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_addRef")]
  public static extern int IWorkbookView_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_addRefSwigExplicitIWorkbookView")]
  public static extern int IWorkbookView_addRefSwigExplicitIWorkbookView(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookView")]
  public static extern IntPtr new_IWorkbookView();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookView_director_connect")]
  public static extern void IWorkbookView_director_connect(HandleRef jarg1, IWorkbookView.SwigDelegateIWorkbookView_0 delegate0, IWorkbookView.SwigDelegateIWorkbookView_1 delegate1, IWorkbookView.SwigDelegateIWorkbookView_2 delegate2, IWorkbookView.SwigDelegateIWorkbookView_3 delegate3, IWorkbookView.SwigDelegateIWorkbookView_4 delegate4, IWorkbookView.SwigDelegateIWorkbookView_5 delegate5, IWorkbookView.SwigDelegateIWorkbookView_6 delegate6, IWorkbookView.SwigDelegateIWorkbookView_7 delegate7, IWorkbookView.SwigDelegateIWorkbookView_8 delegate8, IWorkbookView.SwigDelegateIWorkbookView_9 delegate9, IWorkbookView.SwigDelegateIWorkbookView_10 delegate10);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbookTable")]
  public static extern void delete_IWorkbookTable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_IsEmpty")]
  public static extern bool IWorkbookTable_IsEmpty(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_CreateView")]
  public static extern IntPtr IWorkbookTable_CreateView(HandleRef jarg1, uint jarg2, uint jarg3, uint jarg4, uint jarg5, uint jarg6);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_CreateDefaultView")]
  public static extern IntPtr IWorkbookTable_CreateDefaultView(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_GetColumnCount")]
  public static extern uint IWorkbookTable_GetColumnCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_GetRowCount")]
  public static extern uint IWorkbookTable_GetRowCount(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_GetCell")]
  public static extern bool IWorkbookTable_GetCell(HandleRef jarg1, uint jarg2, uint jarg3, HandleRef jarg4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_IsRowEmpty")]
  public static extern bool IWorkbookTable_IsRowEmpty(HandleRef jarg1, uint jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_release")]
  public static extern int IWorkbookTable_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_releaseSwigExplicitIWorkbookTable")]
  public static extern int IWorkbookTable_releaseSwigExplicitIWorkbookTable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_addRef")]
  public static extern int IWorkbookTable_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_addRefSwigExplicitIWorkbookTable")]
  public static extern int IWorkbookTable_addRefSwigExplicitIWorkbookTable(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbookTable")]
  public static extern IntPtr new_IWorkbookTable();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbookTable_director_connect")]
  public static extern void IWorkbookTable_director_connect(HandleRef jarg1, IWorkbookTable.SwigDelegateIWorkbookTable_0 delegate0, IWorkbookTable.SwigDelegateIWorkbookTable_1 delegate1, IWorkbookTable.SwigDelegateIWorkbookTable_2 delegate2, IWorkbookTable.SwigDelegateIWorkbookTable_3 delegate3, IWorkbookTable.SwigDelegateIWorkbookTable_4 delegate4, IWorkbookTable.SwigDelegateIWorkbookTable_5 delegate5, IWorkbookTable.SwigDelegateIWorkbookTable_6 delegate6, IWorkbookTable.SwigDelegateIWorkbookTable_7 delegate7, IWorkbookTable.SwigDelegateIWorkbookTable_8 delegate8);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IWorkbook")]
  public static extern void delete_IWorkbook(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_GetName")]
  public static extern IntPtr IWorkbook_GetName(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_GetTableNames")]
  public static extern void IWorkbook_GetTableNames(HandleRef jarg1, HandleRef jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_CreateTable")]
  public static extern IntPtr IWorkbook_CreateTable(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_addRef")]
  public static extern int IWorkbook_addRef(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_addRefSwigExplicitIWorkbook")]
  public static extern int IWorkbook_addRefSwigExplicitIWorkbook(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_release")]
  public static extern int IWorkbook_release(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_releaseSwigExplicitIWorkbook")]
  public static extern int IWorkbook_releaseSwigExplicitIWorkbook(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IWorkbook")]
  public static extern IntPtr new_IWorkbook();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWorkbook_director_connect")]
  public static extern void IWorkbook_director_connect(HandleRef jarg1, IWorkbook.SwigDelegateIWorkbook_0 delegate0, IWorkbook.SwigDelegateIWorkbook_1 delegate1, IWorkbook.SwigDelegateIWorkbook_2 delegate2, IWorkbook.SwigDelegateIWorkbook_3 delegate3, IWorkbook.SwigDelegateIWorkbook_4 delegate4);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IExcel_Implementation__SWIG_0")]
  public static extern IntPtr IExcel_Implementation__SWIG_0(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IExcel_Implementation__SWIG_1")]
  public static extern IntPtr IExcel_Implementation__SWIG_1();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_delete_IExcel")]
  public static extern void delete_IExcel(HandleRef jarg1);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IExcel_CreateWorkbook")]
  public static extern IntPtr IExcel_CreateWorkbook(HandleRef jarg1, IntPtr jarg2);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_new_IExcel")]
  public static extern IntPtr new_IExcel();

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IExcel_director_connect")]
  public static extern void IExcel_director_connect(HandleRef jarg1, IExcel.SwigDelegateIExcel_0 delegate0);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingGreatCircleArcUpcast")]
  public static extern IntPtr PYXBoundingGreatCircleArcUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXBoundingCircleUpcast")]
  public static extern IntPtr PYXBoundingCircleUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandExceptionUpcast")]
  public static extern IntPtr PYXCommandExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandExecuteExceptionUpcast")]
  public static extern IntPtr PYXCommandExecuteExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandUndoExceptionUpcast")]
  public static extern IntPtr PYXCommandUndoExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCommandRedoExceptionUpcast")]
  public static extern IntPtr PYXCommandRedoExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXHttpExceptionUpcast")]
  public static extern IntPtr PYXHttpExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXThreadExceptionUpcast")]
  public static extern IntPtr PYXThreadExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDirExceptionUpcast")]
  public static extern IntPtr PYXDirExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFileExceptionUpcast")]
  public static extern IntPtr PYXFileExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXLockExceptionUpcast")]
  public static extern IntPtr PYXLockExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSerializableExceptionUpcast")]
  public static extern IntPtr PYXSerializableExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueColumnExceptionUpcast")]
  public static extern IntPtr PYXValueColumnExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXValueTableExceptionUpcast")]
  public static extern IntPtr PYXValueTableExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UnitTests_NotifierDerivedUpcast")]
  public static extern IntPtr UnitTests_NotifierDerivedUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCOM_IClassFactoryUpcast")]
  public static extern IntPtr PYXCOM_IClassFactoryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IClassInfoUpcast")]
  public static extern IntPtr IClassInfoUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEnumClassObjectUpcast")]
  public static extern IntPtr IEnumClassObjectUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXModelExceptionUpcast")]
  public static extern IntPtr PYXModelExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordConversionExceptionUpcast")]
  public static extern IntPtr PYXCoordConversionExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIndexExceptionUpcast")]
  public static extern IntPtr PYXIndexExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMathExceptionUpcast")]
  public static extern IntPtr PYXMathExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSnyderExceptionUpcast")]
  public static extern IntPtr PYXSnyderExceptionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterUpcast")]
  public static extern IntPtr ICoordConverterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoordConverterUpcast")]
  public static extern IntPtr PYXCoordConverterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoordConverterFromSrsFactoryUpcast")]
  public static extern IntPtr ICoordConverterFromSrsFactoryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXAxisFlipCoordConverterUpcast")]
  public static extern IntPtr PYXAxisFlipCoordConverterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProjectionMethodUpcast")]
  public static extern IntPtr ProjectionMethodUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_SnyderProjectionUpcast")]
  public static extern IntPtr SnyderProjectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_WGS84CoordConverterUpcast")]
  public static extern IntPtr WGS84CoordConverterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIteratorUpcast")]
  public static extern IntPtr PYXIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyIteratorUpcast")]
  public static extern IntPtr PYXEmptyIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXSingleIteratorUpcast")]
  public static extern IntPtr PYXSingleIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXChildIteratorUpcast")]
  public static extern IntPtr PYXChildIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerChildIteratorUpcast")]
  public static extern IntPtr PYXInnerChildIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXNeighbourIteratorUpcast")]
  public static extern IntPtr PYXNeighbourIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVertexIteratorUpcast")]
  public static extern IntPtr PYXVertexIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEdgeIteratorUpcast")]
  public static extern IntPtr PYXEdgeIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosVertexIteratorUpcast")]
  public static extern IntPtr PYXIcosVertexIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosFaceIteratorUpcast")]
  public static extern IntPtr PYXIcosFaceIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosIteratorUpcast")]
  public static extern IntPtr PYXIcosIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXExhaustiveIteratorUpcast")]
  public static extern IntPtr PYXExhaustiveIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRhombusCursorUpcast")]
  public static extern IntPtr PYXRhombusCursorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCompletelyInsideVisitorUpcast")]
  public static extern IntPtr PYXCompletelyInsideVisitorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXRegionUpcast")]
  public static extern IntPtr PYXRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionUpcast")]
  public static extern IntPtr PYXVectorRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorRegionVisitorUpcast")]
  public static extern IntPtr PYXVectorRegionVisitorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorBufferRegionUpcast")]
  public static extern IntPtr PYXVectorBufferRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCollectionVectorRegionUpcast")]
  public static extern IntPtr PYXCollectionVectorRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorPointRegionUpcast")]
  public static extern IntPtr PYXVectorPointRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleRegionUpcast")]
  public static extern IntPtr PYXCircleRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCurveRegionUpcast")]
  public static extern IntPtr PYXCurveRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCurveRegionUpcast")]
  public static extern IntPtr PYXMultiCurveRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiPolygonRegionUpcast")]
  public static extern IntPtr PYXMultiPolygonRegionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXEmptyGeometryUpcast")]
  public static extern IntPtr PYXEmptyGeometryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGlobalGeometryUpcast")]
  public static extern IntPtr PYXGlobalGeometryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellUpcast")]
  public static extern IntPtr PYXCellUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileUpcast")]
  public static extern IntPtr PYXTileUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileUpcast")]
  public static extern IntPtr PYXInnerTileUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXPrimeInnerTileIteratorUpcast")]
  public static extern IntPtr PYXPrimeInnerTileIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXInnerTileIntersectionIteratorUpcast")]
  public static extern IntPtr PYXInnerTileIntersectionIteratorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryCollectionUpcast")]
  public static extern IntPtr PYXGeometryCollectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXTileCollectionUpcast")]
  public static extern IntPtr PYXTileCollectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXIcosTestTraverserUpcast")]
  public static extern IntPtr PYXIcosTestTraverserUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXMultiCellUpcast")]
  public static extern IntPtr PYXMultiCellUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCircleGeometryUpcast")]
  public static extern IntPtr PYXCircleGeometryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometryUpcast")]
  public static extern IntPtr PYXVectorGeometryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXVectorGeometry2Upcast")]
  public static extern IntPtr PYXVectorGeometry2Upcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessEventUpcast")]
  public static extern IntPtr ProcessEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessProcessingEventUpcast")]
  public static extern IntPtr ProcessProcessingEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessVersionEventUpcast")]
  public static extern IntPtr ProcessVersionEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessUpcast")]
  public static extern IntPtr IProcessUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessDataChangedEventUpcast")]
  public static extern IntPtr ProcessDataChangedEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessInitErrorUpcast")]
  public static extern IntPtr IProcessInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcInitErrorBaseUpcast")]
  public static extern IntPtr ProcInitErrorBaseUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_GenericProcInitErrorUpcast")]
  public static extern IntPtr GenericProcInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_InputInitErrorUpcast")]
  public static extern IntPtr InputInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcSpecFailureUpcast")]
  public static extern IntPtr ProcSpecFailureUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessListEventUpcast")]
  public static extern IntPtr ProcessListEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ParameterEventUpcast")]
  public static extern IntPtr ParameterEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeBuilderUpcast")]
  public static extern IntPtr IPipeBuilderUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipeBuilderBaseUpcast")]
  public static extern IntPtr PipeBuilderBaseUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPipeFormaterUpcast")]
  public static extern IntPtr IPipeFormaterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordUpcast")]
  public static extern IntPtr IRecordUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IRecordCollectionUpcast")]
  public static extern IntPtr IRecordCollectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureUpcast")]
  public static extern IntPtr IFeatureUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IWritableFeatureUpcast")]
  public static extern IntPtr IWritableFeatureUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionUpcast")]
  public static extern IntPtr IFeatureCollectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureCollectionIndexUpcast")]
  public static extern IntPtr IFeatureCollectionIndexUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IFeatureGroupUpcast")]
  public static extern IntPtr IFeatureGroupUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageUpcast")]
  public static extern IntPtr ICoverageUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeatureUpcast")]
  public static extern IntPtr PYXFeatureUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramBinUpcast")]
  public static extern IntPtr PYXCellHistogramBinUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCellHistogramUpcast")]
  public static extern IntPtr PYXCellHistogramUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXDataSetUpcast")]
  public static extern IntPtr PYXDataSetUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXCoverageWhereConditionUpcast")]
  public static extern IntPtr PYXCoverageWhereConditionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXFeaturesWhereConditionUpcast")]
  public static extern IntPtr PYXFeaturesWhereConditionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXGeometryWhereConditionUpcast")]
  public static extern IntPtr PYXGeometryWhereConditionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICacheUpcast")]
  public static extern IntPtr ICacheUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheEventUpcast")]
  public static extern IntPtr CacheEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheNeedsTileEventUpcast")]
  public static extern IntPtr CacheNeedsTileEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_CacheWithProcessEventUpcast")]
  public static extern IntPtr CacheWithProcessEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IDataProcessorUpcast")]
  public static extern IntPtr IDataProcessorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IPathUpcast")]
  public static extern IntPtr IPathUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathInitErrorUpcast")]
  public static extern IntPtr PathInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PathProcessUpcast")]
  public static extern IntPtr PathProcessUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_FileEventUpcast")]
  public static extern IntPtr FileEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PipelineFilesEventUpcast")]
  public static extern IntPtr PipelineFilesEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IBitmapUpcast")]
  public static extern IntPtr IBitmapUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IEmbeddedResourceHolderUpcast")]
  public static extern IntPtr IEmbeddedResourceHolderUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IProcessCollectionUpcast")]
  public static extern IntPtr IProcessCollectionUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ProcessCollectionProcUpcast")]
  public static extern IntPtr ProcessCollectionProcUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IStringUpcast")]
  public static extern IntPtr IStringUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_StringProcUpcast")]
  public static extern IntPtr StringProcUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUrlUpcast")]
  public static extern IntPtr IUrlUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UrlProcessUpcast")]
  public static extern IntPtr UrlProcessUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_URLInitErrorUpcast")]
  public static extern IntPtr URLInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsUpcast")]
  public static extern IntPtr IUserCredentialsUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsErrorUpcast")]
  public static extern IntPtr IUserCredentialsErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsInitErrorUpcast")]
  public static extern IntPtr UserCredentialsInitErrorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsListUpcast")]
  public static extern IntPtr UserCredentialsListUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUsernameAndPasswordCredentialsUpcast")]
  public static extern IntPtr IUsernameAndPasswordCredentialsUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UsernameAndPasswordCredentialsUpcast")]
  public static extern IntPtr UsernameAndPasswordCredentialsUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IUserCredentialsProviderUpcast")]
  public static extern IntPtr IUserCredentialsProviderUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_UserCredentialsProviderProcessUpcast")]
  public static extern IntPtr UserCredentialsProviderProcessUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IViewPointUpcast")]
  public static extern IntPtr IViewPointUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ViewPointChangedEventUpcast")]
  public static extern IntPtr ViewPointChangedEventUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IToolBoxProviderUpcast")]
  public static extern IntPtr IToolBoxProviderUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ToolBoxProviderProcUpcast")]
  public static extern IntPtr ToolBoxProviderProcUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_ICoverageHistogramCalculatorUpcast")]
  public static extern IntPtr ICoverageHistogramCalculatorUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IGeoPacketSourceUpcast")]
  public static extern IntPtr IGeoPacketSourceUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_PYXXYBoundsGeometryUpcast")]
  public static extern IntPtr PYXXYBoundsGeometryUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_IXYCoverageUpcast")]
  public static extern IntPtr IXYCoverageUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageValueGetterDefaultUpcast")]
  public static extern IntPtr XYCoverageValueGetterDefaultUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_DefaultXYAsyncValueGetterUpcast")]
  public static extern IntPtr DefaultXYAsyncValueGetterUpcast(IntPtr objectRef);

  [DllImport("pyxlib_swig", EntryPoint="CSharp_XYCoverageBaseUpcast")]
  public static extern IntPtr XYCoverageBaseUpcast(IntPtr objectRef);
}
