/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ChecksumCalculator_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ChecksumCalculator_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ChecksumCalculator_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ChecksumCalculator_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ChecksumCalculator_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ChecksumCalculator_SPtr() : this(pyxlibPINVOKE.new_ChecksumCalculator_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChecksumCalculator_SPtr(ChecksumCalculator p, bool add_ref) : this(pyxlibPINVOKE.new_ChecksumCalculator_SPtr__SWIG_1(ChecksumCalculator.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChecksumCalculator_SPtr(ChecksumCalculator p) : this(pyxlibPINVOKE.new_ChecksumCalculator_SPtr__SWIG_2(ChecksumCalculator.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChecksumCalculator_SPtr(ChecksumCalculator_SPtr rhs) : this(pyxlibPINVOKE.new_ChecksumCalculator_SPtr__SWIG_3(ChecksumCalculator_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ChecksumCalculator_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ChecksumCalculator rhs) {
    pyxlibPINVOKE.ChecksumCalculator_SPtr_reset__SWIG_1(swigCPtr, ChecksumCalculator.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ChecksumCalculator get() {
    IntPtr cPtr = pyxlibPINVOKE.ChecksumCalculator_SPtr_get(swigCPtr);
    ChecksumCalculator ret = (cPtr == IntPtr.Zero) ? null : new ChecksumCalculator(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChecksumCalculator __ref__() {
    ChecksumCalculator ret = new ChecksumCalculator(pyxlibPINVOKE.ChecksumCalculator_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ChecksumCalculator __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ChecksumCalculator_SPtr___deref__(swigCPtr);
    ChecksumCalculator ret = (cPtr == IntPtr.Zero) ? null : new ChecksumCalculator(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ChecksumCalculator_SPtr rhs) {
    pyxlibPINVOKE.ChecksumCalculator_SPtr_swap(swigCPtr, ChecksumCalculator_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ChecksumCalculator_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ChecksumCalculator_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string calculateCheckSum(string str) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ChecksumCalculator_SPtr_calculateCheckSum(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(str)));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string calculateFileCheckSum(string path) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ChecksumCalculator_SPtr_calculateFileCheckSum(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(path)));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string findFileMatchingChecksum(string checksum) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ChecksumCalculator_SPtr_findFileMatchingChecksum(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(checksum)));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public ChecksumCalculator_SPtr getChecksumCalculator() {
    ChecksumCalculator_SPtr ret = new ChecksumCalculator_SPtr(pyxlibPINVOKE.ChecksumCalculator_SPtr_getChecksumCalculator(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setChecksumCalculator(ChecksumCalculator_SPtr spCalculator) {
    pyxlibPINVOKE.ChecksumCalculator_SPtr_setChecksumCalculator(swigCPtr, ChecksumCalculator_SPtr.getCPtr(spCalculator));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int release() {
    int ret = pyxlibPINVOKE.ChecksumCalculator_SPtr_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.ChecksumCalculator_SPtr_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
