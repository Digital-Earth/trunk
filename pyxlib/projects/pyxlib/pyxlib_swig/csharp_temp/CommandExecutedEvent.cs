/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CommandExecutedEvent : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public CommandExecutedEvent(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(CommandExecutedEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CommandExecutedEvent() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_CommandExecutedEvent(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static CommandExecutedEvent_SPtr create(ProcRef procRef) {
    CommandExecutedEvent_SPtr ret = new CommandExecutedEvent_SPtr(pyxlibPINVOKE.CommandExecutedEvent_create(ProcRef.getCPtr(procRef)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcRef getProcRef() {
    ProcRef ret = new ProcRef(pyxlibPINVOKE.CommandExecutedEvent_getProcRef(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static CommandExecutedEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = pyxlibPINVOKE.CommandExecutedEvent_dynamic_cast(NotifierEvent.getCPtr(pSource));
    CommandExecutedEvent ret = (cPtr == IntPtr.Zero) ? null : new CommandExecutedEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
