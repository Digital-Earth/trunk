/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CommandManagerEvent : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public CommandManagerEvent(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(CommandManagerEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CommandManagerEvent() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_CommandManagerEvent(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static CommandManagerEvent_SPtr create(string strErrorMsg) {
    CommandManagerEvent_SPtr ret = new CommandManagerEvent_SPtr(pyxlibPINVOKE.CommandManagerEvent_create(pyxlibPINVOKE.UnmanagedString.Create(strErrorMsg)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getErrorMsg() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.CommandManagerEvent_getErrorMsg(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public static CommandManagerEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = pyxlibPINVOKE.CommandManagerEvent_dynamic_cast(NotifierEvent.getCPtr(pSource));
    CommandManagerEvent ret = (cPtr == IntPtr.Zero) ? null : new CommandManagerEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
