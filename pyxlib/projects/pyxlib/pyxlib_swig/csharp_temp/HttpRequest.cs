/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class HttpRequest : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public HttpRequest(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(HttpRequest obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~HttpRequest() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_HttpRequest(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t create(string url, string method) {
    SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t ret = new SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t(pyxlibPINVOKE.HttpRequest_create__SWIG_0(pyxlibPINVOKE.UnmanagedString.Create(url), pyxlibPINVOKE.UnmanagedString.Create(method)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t create(string url, string method, IUserCredentials_SPtr credentials) {
    SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t ret = new SWIGTYPE_p_boost__intrusive_ptrTHttpRequest_t(pyxlibPINVOKE.HttpRequest_create__SWIG_1(pyxlibPINVOKE.UnmanagedString.Create(url), pyxlibPINVOKE.UnmanagedString.Create(method), IUserCredentials_SPtr.getCPtr(credentials)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addRequestBody(string body) {
    pyxlibPINVOKE.HttpRequest_addRequestBody(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(body));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addRequestHeader(string headerName, string headerValue) {
    pyxlibPINVOKE.HttpRequest_addRequestHeader(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(headerName), pyxlibPINVOKE.UnmanagedString.Create(headerValue));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getResponse() {
    bool ret = pyxlibPINVOKE.HttpRequest_getResponse(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getResponseBody() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.HttpRequest_getResponseBody(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public bool downloadResponse(string filename) {
    bool ret = pyxlibPINVOKE.HttpRequest_downloadResponse(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(filename));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void test() {
    pyxlibPINVOKE.HttpRequest_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
