/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IBitmap : PYXCOM_IUnknown {
  private HandleRef swigCPtr;

  public IBitmap(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.IBitmapUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IBitmap obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IBitmap() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IBitmap(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.IBitmap_iid_get();
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public virtual int getBitmapCount() {
    int ret = pyxlibPINVOKE.IBitmap_getBitmapCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int getWidth(int index) {
    int ret = pyxlibPINVOKE.IBitmap_getWidth__SWIG_0(swigCPtr, index);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int getWidth() {
    int ret = pyxlibPINVOKE.IBitmap_getWidth__SWIG_1(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int getHeight(int index) {
    int ret = pyxlibPINVOKE.IBitmap_getHeight__SWIG_0(swigCPtr, index);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int getHeight() {
    int ret = pyxlibPINVOKE.IBitmap_getHeight__SWIG_1(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t getRawBitmap(int index) {
    SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t ret = new SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t(pyxlibPINVOKE.IBitmap_getRawBitmap__SWIG_0(swigCPtr, index), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t getRawBitmap() {
    SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t ret = new SWIGTYPE_p_boost__intrusive_ptrTPYXBitmap_t(pyxlibPINVOKE.IBitmap_getRawBitmap__SWIG_1(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string getBitmapDefinition(int index) {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IBitmap_getBitmapDefinition__SWIG_0(swigCPtr, index));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public virtual string getBitmapDefinition() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.IBitmap_getBitmapDefinition__SWIG_1(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

}
