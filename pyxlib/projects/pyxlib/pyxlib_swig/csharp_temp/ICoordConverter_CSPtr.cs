/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ICoordConverter_CSPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ICoordConverter_CSPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ICoordConverter_CSPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ICoordConverter_CSPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ICoordConverter_CSPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ICoordConverter_CSPtr() : this(pyxlibPINVOKE.new_ICoordConverter_CSPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverter_CSPtr(ICoordConverter p, bool add_ref) : this(pyxlibPINVOKE.new_ICoordConverter_CSPtr__SWIG_1(ICoordConverter.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverter_CSPtr(ICoordConverter p) : this(pyxlibPINVOKE.new_ICoordConverter_CSPtr__SWIG_2(ICoordConverter.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverter_CSPtr(ICoordConverter_CSPtr rhs) : this(pyxlibPINVOKE.new_ICoordConverter_CSPtr__SWIG_3(ICoordConverter_CSPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ICoordConverter_CSPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ICoordConverter rhs) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_reset__SWIG_1(swigCPtr, ICoordConverter.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ICoordConverter get() {
    IntPtr cPtr = pyxlibPINVOKE.ICoordConverter_CSPtr_get(swigCPtr);
    ICoordConverter ret = (cPtr == IntPtr.Zero) ? null : new ICoordConverter(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverter __ref__() {
    ICoordConverter ret = new ICoordConverter(pyxlibPINVOKE.ICoordConverter_CSPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ICoordConverter __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ICoordConverter_CSPtr___deref__(swigCPtr);
    ICoordConverter ret = (cPtr == IntPtr.Zero) ? null : new ICoordConverter(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ICoordConverter_CSPtr rhs) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_swap(swigCPtr, ICoordConverter_CSPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ICoordConverter_CSPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ICoordConverter_CSPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.ICoordConverter_CSPtr_iid_get(swigCPtr);
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public ICoordConverter_SPtr clone() {
    ICoordConverter_SPtr ret = new ICoordConverter_SPtr(pyxlibPINVOKE.ICoordConverter_CSPtr_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void nativeToPYXIS(PYXCoord2DDouble native, PYXIcosIndex pIndex, int nResolution) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_nativeToPYXIS(swigCPtr, PYXCoord2DDouble.getCPtr(native), PYXIcosIndex.getCPtr(pIndex), nResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void pyxisToNative(PYXIcosIndex index, PYXCoord2DDouble pNative) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_pyxisToNative(swigCPtr, PYXIcosIndex.getCPtr(index), PYXCoord2DDouble.getCPtr(pNative));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool tryPyxisToNative(PYXIcosIndex index, PYXCoord2DDouble pNative) {
    bool ret = pyxlibPINVOKE.ICoordConverter_CSPtr_tryPyxisToNative(swigCPtr, PYXIcosIndex.getCPtr(index), PYXCoord2DDouble.getCPtr(pNative));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void nativeToLatLon(PYXCoord2DDouble native, CoordLatLon pLatLon) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_nativeToLatLon(swigCPtr, PYXCoord2DDouble.getCPtr(native), CoordLatLon.getCPtr(pLatLon));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void latLonToNative(CoordLatLon latLon, PYXCoord2DDouble pNative) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_latLonToNative(swigCPtr, CoordLatLon.getCPtr(latLon), PYXCoord2DDouble.getCPtr(pNative));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isProjected() {
    bool ret = pyxlibPINVOKE.ICoordConverter_CSPtr_isProjected(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_std__basic_ostreamTchar_t serialize(SWIGTYPE_p_std__basic_ostreamTchar_t arg0) {
    SWIGTYPE_p_std__basic_ostreamTchar_t ret = new SWIGTYPE_p_std__basic_ostreamTchar_t(pyxlibPINVOKE.ICoordConverter_CSPtr_serialize(swigCPtr, SWIGTYPE_p_std__basic_ostreamTchar_t.getCPtr(arg0)), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void serializeCOM(SWIGTYPE_p_std__basic_ostreamTchar_t arg0) {
    pyxlibPINVOKE.ICoordConverter_CSPtr_serializeCOM(swigCPtr, SWIGTYPE_p_std__basic_ostreamTchar_t.getCPtr(arg0));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
