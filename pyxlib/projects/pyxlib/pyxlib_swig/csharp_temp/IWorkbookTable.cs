/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IWorkbookTable : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IWorkbookTable(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IWorkbookTable obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IWorkbookTable() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IWorkbookTable(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public virtual bool IsEmpty() {
    bool ret = pyxlibPINVOKE.IWorkbookTable_IsEmpty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IWorkbookViewPointer CreateView(uint firstColumnOffset, uint lastColumnOffset, uint headingRowOffset, uint firstDataRowOffset, uint lastDataRowOffset) {
    IWorkbookViewPointer ret = new IWorkbookViewPointer(pyxlibPINVOKE.IWorkbookTable_CreateView(swigCPtr, firstColumnOffset, lastColumnOffset, headingRowOffset, firstDataRowOffset, lastDataRowOffset), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IWorkbookViewPointer CreateDefaultView() {
    IWorkbookViewPointer ret = new IWorkbookViewPointer(pyxlibPINVOKE.IWorkbookTable_CreateDefaultView(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual uint GetColumnCount() {
    uint ret = pyxlibPINVOKE.IWorkbookTable_GetColumnCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual uint GetRowCount() {
    uint ret = pyxlibPINVOKE.IWorkbookTable_GetRowCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool GetCell(uint rowOffset, uint columnOffset, PYXValue value) {
    bool ret = pyxlibPINVOKE.IWorkbookTable_GetCell(swigCPtr, rowOffset, columnOffset, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool IsRowEmpty(uint rowOffset) {
    bool ret = pyxlibPINVOKE.IWorkbookTable_IsRowEmpty(swigCPtr, rowOffset);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int release() {
    int ret = ((this.GetType() == typeof(IWorkbookTable)) ? pyxlibPINVOKE.IWorkbookTable_release(swigCPtr) : pyxlibPINVOKE.IWorkbookTable_releaseSwigExplicitIWorkbookTable(swigCPtr));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int addRef() {
    int ret = ((this.GetType() == typeof(IWorkbookTable)) ? pyxlibPINVOKE.IWorkbookTable_addRef(swigCPtr) : pyxlibPINVOKE.IWorkbookTable_addRefSwigExplicitIWorkbookTable(swigCPtr));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  protected IWorkbookTable() : this(pyxlibPINVOKE.new_IWorkbookTable(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("IsEmpty", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateIWorkbookTable_0(SwigDirectorIsEmpty);
    if (SwigDerivedClassHasMethod("CreateView", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateIWorkbookTable_1(SwigDirectorCreateView);
    if (SwigDerivedClassHasMethod("CreateDefaultView", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateIWorkbookTable_2(SwigDirectorCreateDefaultView);
    if (SwigDerivedClassHasMethod("GetColumnCount", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateIWorkbookTable_3(SwigDirectorGetColumnCount);
    if (SwigDerivedClassHasMethod("GetRowCount", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateIWorkbookTable_4(SwigDirectorGetRowCount);
    if (SwigDerivedClassHasMethod("GetCell", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateIWorkbookTable_5(SwigDirectorGetCell);
    if (SwigDerivedClassHasMethod("IsRowEmpty", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateIWorkbookTable_6(SwigDirectorIsRowEmpty);
    if (SwigDerivedClassHasMethod("release", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateIWorkbookTable_7(SwigDirectorrelease);
    if (SwigDerivedClassHasMethod("addRef", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateIWorkbookTable_8(SwigDirectoraddRef);
    pyxlibPINVOKE.IWorkbookTable_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8);
  }

  private bool SwigDerivedClassHasMethod(string methodName, Type[] methodTypes) {
    System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic | System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(IWorkbookTable));
    return hasDerivedMethod;
  }

  private bool SwigDirectorIsEmpty() {
    return IsEmpty();
  }

  private IntPtr SwigDirectorCreateView(uint firstColumnOffset, uint lastColumnOffset, uint headingRowOffset, uint firstDataRowOffset, uint lastDataRowOffset) {
    return IWorkbookViewPointer.getCPtr(CreateView(firstColumnOffset, lastColumnOffset, headingRowOffset, firstDataRowOffset, lastDataRowOffset)).Handle;
  }

  private IntPtr SwigDirectorCreateDefaultView() {
    return IWorkbookViewPointer.getCPtr(CreateDefaultView()).Handle;
  }

  private uint SwigDirectorGetColumnCount() {
    return GetColumnCount();
  }

  private uint SwigDirectorGetRowCount() {
    return GetRowCount();
  }

  private bool SwigDirectorGetCell(uint rowOffset, uint columnOffset, IntPtr value) {
    return GetCell(rowOffset, columnOffset, new PYXValue(value, false));
  }

  private bool SwigDirectorIsRowEmpty(uint rowOffset) {
    return IsRowEmpty(rowOffset);
  }

  private int SwigDirectorrelease() {
    return release();
  }

  private int SwigDirectoraddRef() {
    return addRef();
  }

  public delegate bool SwigDelegateIWorkbookTable_0();
  public delegate IntPtr SwigDelegateIWorkbookTable_1(uint firstColumnOffset, uint lastColumnOffset, uint headingRowOffset, uint firstDataRowOffset, uint lastDataRowOffset);
  public delegate IntPtr SwigDelegateIWorkbookTable_2();
  public delegate uint SwigDelegateIWorkbookTable_3();
  public delegate uint SwigDelegateIWorkbookTable_4();
  public delegate bool SwigDelegateIWorkbookTable_5(uint rowOffset, uint columnOffset, IntPtr value);
  public delegate bool SwigDelegateIWorkbookTable_6(uint rowOffset);
  public delegate int SwigDelegateIWorkbookTable_7();
  public delegate int SwigDelegateIWorkbookTable_8();

  private SwigDelegateIWorkbookTable_0 swigDelegate0;
  private SwigDelegateIWorkbookTable_1 swigDelegate1;
  private SwigDelegateIWorkbookTable_2 swigDelegate2;
  private SwigDelegateIWorkbookTable_3 swigDelegate3;
  private SwigDelegateIWorkbookTable_4 swigDelegate4;
  private SwigDelegateIWorkbookTable_5 swigDelegate5;
  private SwigDelegateIWorkbookTable_6 swigDelegate6;
  private SwigDelegateIWorkbookTable_7 swigDelegate7;
  private SwigDelegateIWorkbookTable_8 swigDelegate8;

  private static Type[] swigMethodTypes0 = new Type[] {  };
  private static Type[] swigMethodTypes1 = new Type[] { typeof(uint), typeof(uint), typeof(uint), typeof(uint), typeof(uint) };
  private static Type[] swigMethodTypes2 = new Type[] {  };
  private static Type[] swigMethodTypes3 = new Type[] {  };
  private static Type[] swigMethodTypes4 = new Type[] {  };
  private static Type[] swigMethodTypes5 = new Type[] { typeof(uint), typeof(uint), typeof(PYXValue) };
  private static Type[] swigMethodTypes6 = new Type[] { typeof(uint) };
  private static Type[] swigMethodTypes7 = new Type[] {  };
  private static Type[] swigMethodTypes8 = new Type[] {  };
}
