/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IWorkbookViewPointer : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IWorkbookViewPointer(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IWorkbookViewPointer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IWorkbookViewPointer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IWorkbookViewPointer(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public IWorkbookViewPointer() : this(pyxlibPINVOKE.new_IWorkbookViewPointer__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookViewPointer(IWorkbookView p, bool add_ref) : this(pyxlibPINVOKE.new_IWorkbookViewPointer__SWIG_1(IWorkbookView.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookViewPointer(IWorkbookView p) : this(pyxlibPINVOKE.new_IWorkbookViewPointer__SWIG_2(IWorkbookView.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookViewPointer(IWorkbookViewPointer rhs) : this(pyxlibPINVOKE.new_IWorkbookViewPointer__SWIG_3(IWorkbookViewPointer.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.IWorkbookViewPointer_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(IWorkbookView rhs) {
    pyxlibPINVOKE.IWorkbookViewPointer_reset__SWIG_1(swigCPtr, IWorkbookView.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public IWorkbookView get() {
    IntPtr cPtr = pyxlibPINVOKE.IWorkbookViewPointer_get(swigCPtr);
    IWorkbookView ret = (cPtr == IntPtr.Zero) ? null : new IWorkbookView(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookView __ref__() {
    IWorkbookView ret = new IWorkbookView(pyxlibPINVOKE.IWorkbookViewPointer___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IWorkbookView __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.IWorkbookViewPointer___deref__(swigCPtr);
    IWorkbookView ret = (cPtr == IntPtr.Zero) ? null : new IWorkbookView(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(IWorkbookViewPointer rhs) {
    pyxlibPINVOKE.IWorkbookViewPointer_swap(swigCPtr, IWorkbookViewPointer.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsEmpty() {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_IsEmpty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetColumnCount() {
    uint ret = pyxlibPINVOKE.IWorkbookViewPointer_GetColumnCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void GetColumnName(uint columnOffset, PYXValue value) {
    pyxlibPINVOKE.IWorkbookViewPointer_GetColumnName(swigCPtr, columnOffset, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool GetHeadingRow(Vector_Value columns) {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_GetHeadingRow(swigCPtr, Vector_Value.getCPtr(columns));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetHeadingCell(uint columnOffset, PYXValue value) {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_GetHeadingCell(swigCPtr, columnOffset, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint GetDataRowCount() {
    uint ret = pyxlibPINVOKE.IWorkbookViewPointer_GetDataRowCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsDataRowEmpty(uint dataRowOffset) {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_IsDataRowEmpty(swigCPtr, dataRowOffset);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetDataRow(uint dataRowOffset, Vector_Value columns) {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_GetDataRow(swigCPtr, dataRowOffset, Vector_Value.getCPtr(columns));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool GetDataCell(uint dataRowOffset, uint columnOffset, PYXValue value) {
    bool ret = pyxlibPINVOKE.IWorkbookViewPointer_GetDataCell(swigCPtr, dataRowOffset, columnOffset, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int release() {
    int ret = pyxlibPINVOKE.IWorkbookViewPointer_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.IWorkbookViewPointer_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
