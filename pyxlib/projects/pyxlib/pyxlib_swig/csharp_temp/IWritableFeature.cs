/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IWritableFeature : IFeature {
  private HandleRef swigCPtr;

  public IWritableFeature(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.IWritableFeatureUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IWritableFeature obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IWritableFeature() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_IWritableFeature(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.IWritableFeature_iid_get();
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public virtual void setID(string strID) {
    pyxlibPINVOKE.IWritableFeature_setID(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strID));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setGeometryName(string strName) {
    pyxlibPINVOKE.IWritableFeature_setGeometryName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setGeometry(PYXGeometry_SPtr spGeom) {
    pyxlibPINVOKE.IWritableFeature_setGeometry(swigCPtr, PYXGeometry_SPtr.getCPtr(spGeom));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setIsWritAble(bool bWritable) {
    pyxlibPINVOKE.IWritableFeature_setIsWritAble(swigCPtr, bWritable);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setStyle(string style) {
    pyxlibPINVOKE.IWritableFeature_setStyle(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(style));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void setMetaDataDefinition(PYXTableDefinition_SPtr spDef) {
    pyxlibPINVOKE.IWritableFeature_setMetaDataDefinition(swigCPtr, PYXTableDefinition_SPtr.getCPtr(spDef));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
