/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYCatalog_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYCatalog_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYCatalog_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYCatalog_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYCatalog_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

	public System.Collections.Generic.IEnumerable<PYXDataSet_CSPtr> DataSets
	{
		get
		{
			int count = getDataSetCount();
			for(int i = 0; i < count; ++i)
			{
				yield return getDataSet(i);
			}			
		}
	}

	public System.Collections.Generic.IEnumerable<PYXCatalog_CSPtr> SubCatalogs
	{
		get
		{
			int count = getSubCatalogCount();
			for(int i = 0; i < count; ++i)
			{
				yield return getSubCatalog(i);
			}			
		}
	}

  public PYCatalog_SPtr() : this(pyxlibPINVOKE.new_PYCatalog_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYCatalog_SPtr(PYXCatalog p, bool add_ref) : this(pyxlibPINVOKE.new_PYCatalog_SPtr__SWIG_1(PYXCatalog.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYCatalog_SPtr(PYXCatalog p) : this(pyxlibPINVOKE.new_PYCatalog_SPtr__SWIG_2(PYXCatalog.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYCatalog_SPtr(PYCatalog_SPtr rhs) : this(pyxlibPINVOKE.new_PYCatalog_SPtr__SWIG_3(PYCatalog_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYCatalog_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(PYXCatalog rhs) {
    pyxlibPINVOKE.PYCatalog_SPtr_reset__SWIG_1(swigCPtr, PYXCatalog.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCatalog get() {
    IntPtr cPtr = pyxlibPINVOKE.PYCatalog_SPtr_get(swigCPtr);
    PYXCatalog ret = (cPtr == IntPtr.Zero) ? null : new PYXCatalog(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCatalog __ref__() {
    PYXCatalog ret = new PYXCatalog(pyxlibPINVOKE.PYCatalog_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCatalog __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.PYCatalog_SPtr___deref__(swigCPtr);
    PYXCatalog ret = (cPtr == IntPtr.Zero) ? null : new PYXCatalog(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(PYCatalog_SPtr rhs) {
    pyxlibPINVOKE.PYCatalog_SPtr_swap(swigCPtr, PYCatalog_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.PYCatalog_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.PYCatalog_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void test() {
    pyxlibPINVOKE.PYCatalog_SPtr_test(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYCatalog_SPtr create() {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYCatalog_SPtr_create__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYCatalog_SPtr create(string strUri, string strName) {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYCatalog_SPtr_create__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strUri), pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYCatalog_SPtr create(PYXCatalog rhs) {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYCatalog_SPtr_create__SWIG_2(swigCPtr, PYXCatalog.getCPtr(rhs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYCatalog_SPtr clone() {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYCatalog_SPtr_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getUri() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYCatalog_SPtr_getUri(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setUri(string strUri) {
    pyxlibPINVOKE.PYCatalog_SPtr_setUri(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strUri));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYCatalog_SPtr_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setName(string strName) {
    pyxlibPINVOKE.PYCatalog_SPtr_setName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int addDataSet(PYXDataSet_SPtr pDataSet) {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_addDataSet(swigCPtr, PYXDataSet_SPtr.getCPtr(pDataSet));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getDataSetCount() {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_getDataSetCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet_CSPtr getDataSet(int nDataSetIndex) {
    PYXDataSet_CSPtr ret = new PYXDataSet_CSPtr(pyxlibPINVOKE.PYCatalog_SPtr_getDataSet(swigCPtr, nDataSetIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addSubCatalog(PYCatalog_SPtr pCatalog) {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_addSubCatalog(swigCPtr, PYCatalog_SPtr.getCPtr(pCatalog));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getSubCatalogCount() {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_getSubCatalogCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCatalog_CSPtr getSubCatalog(int nSubCatalogIndex) {
    PYXCatalog_CSPtr ret = new PYXCatalog_CSPtr(pyxlibPINVOKE.PYCatalog_SPtr_getSubCatalog(swigCPtr, nSubCatalogIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int release() {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.PYCatalog_SPtr_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
