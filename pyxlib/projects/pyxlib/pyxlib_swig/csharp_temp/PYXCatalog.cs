/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXCatalog : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXCatalog(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXCatalog obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXCatalog() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXCatalog(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXCatalog_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYCatalog_SPtr create() {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYXCatalog_create__SWIG_0(), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYCatalog_SPtr create(string strUri, string strName) {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYXCatalog_create__SWIG_1(pyxlibPINVOKE.UnmanagedString.Create(strUri), pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYCatalog_SPtr create(PYXCatalog rhs) {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYXCatalog_create__SWIG_2(PYXCatalog.getCPtr(rhs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYCatalog_SPtr clone() {
    PYCatalog_SPtr ret = new PYCatalog_SPtr(pyxlibPINVOKE.PYXCatalog_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getUri() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXCatalog_getUri(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setUri(string strUri) {
    pyxlibPINVOKE.PYXCatalog_setUri(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strUri));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXCatalog_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setName(string strName) {
    pyxlibPINVOKE.PYXCatalog_setName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int addDataSet(PYXDataSet_SPtr pDataSet) {
    int ret = pyxlibPINVOKE.PYXCatalog_addDataSet(swigCPtr, PYXDataSet_SPtr.getCPtr(pDataSet));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getDataSetCount() {
    int ret = pyxlibPINVOKE.PYXCatalog_getDataSetCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet_CSPtr getDataSet(int nDataSetIndex) {
    PYXDataSet_CSPtr ret = new PYXDataSet_CSPtr(pyxlibPINVOKE.PYXCatalog_getDataSet(swigCPtr, nDataSetIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addSubCatalog(PYCatalog_SPtr pCatalog) {
    int ret = pyxlibPINVOKE.PYXCatalog_addSubCatalog(swigCPtr, PYCatalog_SPtr.getCPtr(pCatalog));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getSubCatalogCount() {
    int ret = pyxlibPINVOKE.PYXCatalog_getSubCatalogCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCatalog_CSPtr getSubCatalog(int nSubCatalogIndex) {
    PYXCatalog_CSPtr ret = new PYXCatalog_CSPtr(pyxlibPINVOKE.PYXCatalog_getSubCatalog(swigCPtr, nSubCatalogIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int release() {
    int ret = pyxlibPINVOKE.PYXCatalog_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int addRef() {
    int ret = pyxlibPINVOKE.PYXCatalog_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
