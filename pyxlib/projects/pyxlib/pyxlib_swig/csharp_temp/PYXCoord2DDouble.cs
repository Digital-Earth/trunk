/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXCoord2DDouble : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXCoord2DDouble(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXCoord2DDouble obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXCoord2DDouble() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXCoord2DDouble(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

	public override string ToString()
	{
		return String.Format("({0},{1})",this.x(),this.y());
	}

  public PYXCoord2DDouble(double x, double y) : this(pyxlibPINVOKE.new_PYXCoord2DDouble__SWIG_0(x, y), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord2DDouble(double x) : this(pyxlibPINVOKE.new_PYXCoord2DDouble__SWIG_1(x), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord2DDouble() : this(pyxlibPINVOKE.new_PYXCoord2DDouble__SWIG_2(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord2DDouble(PYXCoord2DDouble pt) : this(pyxlibPINVOKE.new_PYXCoord2DDouble__SWIG_3(PYXCoord2DDouble.getCPtr(pt)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool equal(PYXCoord2DDouble pt) {
    bool ret = pyxlibPINVOKE.PYXCoord2DDouble_equal__SWIG_0(swigCPtr, PYXCoord2DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool equal(PYXCoord2DDouble pt, double precision) {
    bool ret = pyxlibPINVOKE.PYXCoord2DDouble_equal__SWIG_1(swigCPtr, PYXCoord2DDouble.getCPtr(pt), precision);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double x() {
    double ret = pyxlibPINVOKE.PYXCoord2DDouble_x(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setX(double x) {
    pyxlibPINVOKE.PYXCoord2DDouble_setX(swigCPtr, x);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double y() {
    double ret = pyxlibPINVOKE.PYXCoord2DDouble_y(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setY(double y) {
    pyxlibPINVOKE.PYXCoord2DDouble_setY(swigCPtr, y);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double distance(PYXCoord2DDouble pt) {
    double ret = pyxlibPINVOKE.PYXCoord2DDouble_distance(swigCPtr, PYXCoord2DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord2DDouble midpoint(PYXCoord2DDouble pt) {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(pyxlibPINVOKE.PYXCoord2DDouble_midpoint(swigCPtr, PYXCoord2DDouble.getCPtr(pt)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void scale(double value) {
    pyxlibPINVOKE.PYXCoord2DDouble_scale(swigCPtr, value);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void normalize() {
    pyxlibPINVOKE.PYXCoord2DDouble_normalize(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double dot(PYXCoord2DDouble v) {
    double ret = pyxlibPINVOKE.PYXCoord2DDouble_dot(swigCPtr, PYXCoord2DDouble.getCPtr(v));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
