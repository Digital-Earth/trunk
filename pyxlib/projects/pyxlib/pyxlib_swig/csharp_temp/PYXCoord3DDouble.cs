/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXCoord3DDouble : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXCoord3DDouble(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXCoord3DDouble obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXCoord3DDouble() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXCoord3DDouble(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXCoord3DDouble(double x, double y, double z) : this(pyxlibPINVOKE.new_PYXCoord3DDouble__SWIG_0(x, y, z), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble(double x, double y) : this(pyxlibPINVOKE.new_PYXCoord3DDouble__SWIG_1(x, y), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble(double x) : this(pyxlibPINVOKE.new_PYXCoord3DDouble__SWIG_2(x), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble() : this(pyxlibPINVOKE.new_PYXCoord3DDouble__SWIG_3(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble(PYXCoord3DDouble pt) : this(pyxlibPINVOKE.new_PYXCoord3DDouble__SWIG_4(PYXCoord3DDouble.getCPtr(pt)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set(double x, double y, double z) {
    pyxlibPINVOKE.PYXCoord3DDouble_set(swigCPtr, x, y, z);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool equal(PYXCoord3DDouble pt) {
    bool ret = pyxlibPINVOKE.PYXCoord3DDouble_equal__SWIG_0(swigCPtr, PYXCoord3DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool equal(PYXCoord3DDouble pt, double precision) {
    bool ret = pyxlibPINVOKE.PYXCoord3DDouble_equal__SWIG_1(swigCPtr, PYXCoord3DDouble.getCPtr(pt), precision);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double x() {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_x(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setX(double x) {
    pyxlibPINVOKE.PYXCoord3DDouble_setX(swigCPtr, x);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double y() {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_y(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setY(double y) {
    pyxlibPINVOKE.PYXCoord3DDouble_setY(swigCPtr, y);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double z() {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_z(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setZ(double z) {
    pyxlibPINVOKE.PYXCoord3DDouble_setZ(swigCPtr, z);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double distance(PYXCoord3DDouble pt) {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_distance(swigCPtr, PYXCoord3DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void scale(double value) {
    pyxlibPINVOKE.PYXCoord3DDouble_scale(swigCPtr, value);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double length() {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_length(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double squareLength() {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_squareLength(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void normalize() {
    pyxlibPINVOKE.PYXCoord3DDouble_normalize(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void negate() {
    pyxlibPINVOKE.PYXCoord3DDouble_negate(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double dot(PYXCoord3DDouble v) {
    double ret = pyxlibPINVOKE.PYXCoord3DDouble_dot(swigCPtr, PYXCoord3DDouble.getCPtr(v));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void translate(PYXCoord3DDouble value) {
    pyxlibPINVOKE.PYXCoord3DDouble_translate(swigCPtr, PYXCoord3DDouble.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void subtract(PYXCoord3DDouble value) {
    pyxlibPINVOKE.PYXCoord3DDouble_subtract(swigCPtr, PYXCoord3DDouble.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble cross(PYXCoord3DDouble v) {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(pyxlibPINVOKE.PYXCoord3DDouble_cross(swigCPtr, PYXCoord3DDouble.getCPtr(v)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble pointAlongLine(PYXCoord3DDouble pt1, PYXCoord3DDouble pt2, double fDistance) {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(pyxlibPINVOKE.PYXCoord3DDouble_pointAlongLine(swigCPtr, PYXCoord3DDouble.getCPtr(pt1), PYXCoord3DDouble.getCPtr(pt2), fDistance), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void reset() {
    pyxlibPINVOKE.PYXCoord3DDouble_reset(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
