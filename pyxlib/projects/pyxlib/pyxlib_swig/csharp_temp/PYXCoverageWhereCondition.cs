/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXCoverageWhereCondition : PYXWhereCondition {
  private HandleRef swigCPtr;

  public PYXCoverageWhereCondition(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.PYXCoverageWhereConditionUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXCoverageWhereCondition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXCoverageWhereCondition() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXCoverageWhereCondition(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public override bool match(PYXIcosIndex index) {
    bool ret = pyxlibPINVOKE.PYXCoverageWhereCondition_match__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override PYXTileCollection_SPtr match(PYXTile tile) {
    PYXTileCollection_SPtr ret = new PYXTileCollection_SPtr(pyxlibPINVOKE.PYXCoverageWhereCondition_match__SWIG_1(swigCPtr, PYXTile.getCPtr(tile)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXCoverageWhereCondition_SPtr create(ICoverage_SPtr coverage) {
    PYXCoverageWhereCondition_SPtr ret = new PYXCoverageWhereCondition_SPtr(pyxlibPINVOKE.PYXCoverageWhereCondition_create(ICoverage_SPtr.getCPtr(coverage)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoverageWhereCondition_SPtr range(PYXValue min, PYXValue max) {
    PYXCoverageWhereCondition_SPtr ret = new PYXCoverageWhereCondition_SPtr(pyxlibPINVOKE.PYXCoverageWhereCondition_range(swigCPtr, PYXValue.getCPtr(min), PYXValue.getCPtr(max)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
