/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXDataSet_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXDataSet_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXDataSet_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXDataSet_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXDataSet_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXDataSet_SPtr() : this(pyxlibPINVOKE.new_PYXDataSet_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXDataSet_SPtr(PYXDataSet p, bool add_ref) : this(pyxlibPINVOKE.new_PYXDataSet_SPtr__SWIG_1(PYXDataSet.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXDataSet_SPtr(PYXDataSet p) : this(pyxlibPINVOKE.new_PYXDataSet_SPtr__SWIG_2(PYXDataSet.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXDataSet_SPtr(PYXDataSet_SPtr rhs) : this(pyxlibPINVOKE.new_PYXDataSet_SPtr__SWIG_3(PYXDataSet_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYXDataSet_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(PYXDataSet rhs) {
    pyxlibPINVOKE.PYXDataSet_SPtr_reset__SWIG_1(swigCPtr, PYXDataSet.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXDataSet get() {
    IntPtr cPtr = pyxlibPINVOKE.PYXDataSet_SPtr_get(swigCPtr);
    PYXDataSet ret = (cPtr == IntPtr.Zero) ? null : new PYXDataSet(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet __ref__() {
    PYXDataSet ret = new PYXDataSet(pyxlibPINVOKE.PYXDataSet_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.PYXDataSet_SPtr___deref__(swigCPtr);
    PYXDataSet ret = (cPtr == IntPtr.Zero) ? null : new PYXDataSet(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(PYXDataSet_SPtr rhs) {
    pyxlibPINVOKE.PYXDataSet_SPtr_swap(swigCPtr, PYXDataSet_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.PYXDataSet_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.PYXDataSet_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string s_strPyxisDimensionTime {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisDimensionTime_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisDimensionHeight {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisDimensionHeight_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisDimensionGRIBModel {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisDimensionGRIBModel_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisLongName {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisLongName_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisShortName {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisShortName_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisUnits {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisUnits_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisFeatureCount {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisFeatureCount_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string s_strPyxisPixelCount {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_s_strPyxisPixelCount_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public uint AddRef() {
    uint ret = pyxlibPINVOKE.PYXDataSet_SPtr_AddRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint Release() {
    uint ret = pyxlibPINVOKE.PYXDataSet_SPtr_Release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXTableDefinition_CSPtr getDefinition() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.PYXDataSet_SPtr_getDefinition__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue getFieldValue(int nFieldIndex) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.PYXDataSet_SPtr_getFieldValue(swigCPtr, nFieldIndex), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValue(PYXValue value, int nFieldIndex) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setFieldValue(swigCPtr, PYXValue.getCPtr(value), nFieldIndex);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXValue getFieldValueByName(string strName) {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.PYXDataSet_SPtr_getFieldValueByName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValueByName(PYXValue value, string strName) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setFieldValueByName(swigCPtr, PYXValue.getCPtr(value), pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector_Value getFieldValues() {
    Vector_Value ret = new Vector_Value(pyxlibPINVOKE.PYXDataSet_SPtr_getFieldValues(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setFieldValues(Vector_Value vecValues) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setFieldValues(swigCPtr, Vector_Value.getCPtr(vecValues));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount, PYXValue value) {
    pyxlibPINVOKE.PYXDataSet_SPtr_addField__SWIG_0(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount) {
    pyxlibPINVOKE.PYXDataSet_SPtr_addField__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void addField(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType) {
    pyxlibPINVOKE.PYXDataSet_SPtr_addField__SWIG_2(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void test() {
    pyxlibPINVOKE.PYXDataSet_SPtr_test(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXDataSet_SPtr create() {
    PYXDataSet_SPtr ret = new PYXDataSet_SPtr(pyxlibPINVOKE.PYXDataSet_SPtr_create__SWIG_0(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet_SPtr create(string strUri, string strName) {
    PYXDataSet_SPtr ret = new PYXDataSet_SPtr(pyxlibPINVOKE.PYXDataSet_SPtr_create__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strUri), pyxlibPINVOKE.UnmanagedString.Create(strName)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet_SPtr create(PYXDataSet rhs) {
    PYXDataSet_SPtr ret = new PYXDataSet_SPtr(pyxlibPINVOKE.PYXDataSet_SPtr_create__SWIG_2(swigCPtr, PYXDataSet.getCPtr(rhs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXDataSet_SPtr clone() {
    PYXDataSet_SPtr ret = new PYXDataSet_SPtr(pyxlibPINVOKE.PYXDataSet_SPtr_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isLoadable() {
    bool ret = pyxlibPINVOKE.PYXDataSet_SPtr_isLoadable(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getUri() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_getUri(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setUri(string strUri) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setUri(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strUri));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setName(string strName) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setName(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setLayer(string strLayer) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setLayer(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strLayer));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getLayer() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXDataSet_SPtr_getLayer(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXTableDefinition_CSPtr getContentDefinition_const() {
    PYXTableDefinition_CSPtr ret = new PYXTableDefinition_CSPtr(pyxlibPINVOKE.PYXDataSet_SPtr_getContentDefinition_const(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXTableDefinition_SPtr getContentDefinition() {
    PYXTableDefinition_SPtr ret = new PYXTableDefinition_SPtr(pyxlibPINVOKE.PYXDataSet_SPtr_getContentDefinition(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vector_String getMissingRequiredFilesAllOf() {
    Vector_String ret = new Vector_String(pyxlibPINVOKE.PYXDataSet_SPtr_getMissingRequiredFilesAllOf(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setMissingRequiredFilesAllOf(Vector_String vecMissingFiles) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setMissingRequiredFilesAllOf(swigCPtr, Vector_String.getCPtr(vecMissingFiles));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector_String getMissingRequiredFilesOneOf() {
    Vector_String ret = new Vector_String(pyxlibPINVOKE.PYXDataSet_SPtr_getMissingRequiredFilesOneOf(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setMissingRequiredFilesOneOf(Vector_String vecMissingFiles) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setMissingRequiredFilesOneOf(swigCPtr, Vector_String.getCPtr(vecMissingFiles));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector_String getMissingOptionalFiles() {
    Vector_String ret = new Vector_String(pyxlibPINVOKE.PYXDataSet_SPtr_getMissingOptionalFiles(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setMissingOptionalFiles(Vector_String vecMissingFiles) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setMissingOptionalFiles(swigCPtr, Vector_String.getCPtr(vecMissingFiles));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getBoundingBox(PYXRect2DDouble bbox1, PYXRect2DDouble bbox2) {
    pyxlibPINVOKE.PYXDataSet_SPtr_getBoundingBox(swigCPtr, PYXRect2DDouble.getCPtr(bbox1), PYXRect2DDouble.getCPtr(bbox2));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setBoundingBox(PYXGeometry geometry) {
    pyxlibPINVOKE.PYXDataSet_SPtr_setBoundingBox(swigCPtr, PYXGeometry.getCPtr(geometry));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public GUID iid {
    get {
      IntPtr cPtr = pyxlibPINVOKE.PYXDataSet_SPtr_iid_get(swigCPtr);
      GUID ret = (cPtr == IntPtr.Zero) ? null : new GUID(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
