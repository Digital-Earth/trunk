/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXEdgeIterator : PYXIterator {
  private HandleRef swigCPtr;

  public PYXEdgeIterator(IntPtr cPtr, bool cMemoryOwn) : base(pyxlibPINVOKE.PYXEdgeIteratorUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXEdgeIterator obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXEdgeIterator() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXEdgeIterator(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXEdgeIterator_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYXEdgeIterator_SPtr create(PYXIcosIndex rootIndex, int nDataResolution) {
    PYXEdgeIterator_SPtr ret = new PYXEdgeIterator_SPtr(pyxlibPINVOKE.PYXEdgeIterator_create(PYXIcosIndex.getCPtr(rootIndex), nDataResolution), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXEdgeIterator(PYXIcosIndex rootIndex, int nDataResolution) : this(pyxlibPINVOKE.new_PYXEdgeIterator(PYXIcosIndex.getCPtr(rootIndex), nDataResolution), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void restartIterator() {
    pyxlibPINVOKE.PYXEdgeIterator_restartIterator(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool setIteratorIndex(PYXIcosIndex pyxIndex) {
    bool ret = pyxlibPINVOKE.PYXEdgeIterator_setIteratorIndex(swigCPtr, PYXIcosIndex.getCPtr(pyxIndex));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override void next() {
    pyxlibPINVOKE.PYXEdgeIterator_next(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public override bool end() {
    bool ret = pyxlibPINVOKE.PYXEdgeIterator_end(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public override PYXIcosIndex getIndex() {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXEdgeIterator_getIndex(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int calcCurrentOffset() {
    int ret = pyxlibPINVOKE.PYXEdgeIterator_calcCurrentOffset(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int calcCellCount(PYXIcosIndex rootIndex, int nDataResolution) {
    int ret = pyxlibPINVOKE.PYXEdgeIterator_calcCellCount(PYXIcosIndex.getCPtr(rootIndex), nDataResolution);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXIcosIndex getRoot() {
    PYXIcosIndex ret = new PYXIcosIndex(pyxlibPINVOKE.PYXEdgeIterator_getRoot(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
