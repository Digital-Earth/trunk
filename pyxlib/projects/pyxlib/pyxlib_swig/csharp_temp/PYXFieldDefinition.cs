/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXFieldDefinition : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXFieldDefinition(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXFieldDefinition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXFieldDefinition() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXFieldDefinition(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXFieldDefinition_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXFieldDefinition() : this(pyxlibPINVOKE.new_PYXFieldDefinition__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXFieldDefinition(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount) : this(pyxlibPINVOKE.new_PYXFieldDefinition__SWIG_1(pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXFieldDefinition(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType) : this(pyxlibPINVOKE.new_PYXFieldDefinition__SWIG_2(pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXFieldDefinition(PYXFieldDefinition defn) : this(pyxlibPINVOKE.new_PYXFieldDefinition__SWIG_3(PYXFieldDefinition.getCPtr(defn)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getName() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXFieldDefinition_getName(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public PYXFieldDefinition.eContextType getContext() {
    PYXFieldDefinition.eContextType ret = (PYXFieldDefinition.eContextType)pyxlibPINVOKE.PYXFieldDefinition_getContext(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue.eType getType() {
    PYXValue.eType ret = (PYXValue.eType)pyxlibPINVOKE.PYXFieldDefinition_getType(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNumeric() {
    bool ret = pyxlibPINVOKE.PYXFieldDefinition_isNumeric(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getCount() {
    int ret = pyxlibPINVOKE.PYXFieldDefinition_getCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXValue getTypeCompatibleValue() {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.PYXFieldDefinition_getTypeCompatibleValue(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public enum eContextType {
    knContextNone = 0x0000,
    knContextRGB = 0x1001,
    knContextGreyScale = 0x2001,
    knContextElevation = 0x4001,
    knContextNormal = 0x5001,
    knContextDistance = 0x6001,
    knContextArea = 0x7001,
    knContextCLUT = 0x8001,
    knContextClass = 0x1601
  }

}
