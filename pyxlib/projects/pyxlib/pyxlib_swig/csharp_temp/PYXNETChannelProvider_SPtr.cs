/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXNETChannelProvider_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXNETChannelProvider_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXNETChannelProvider_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXNETChannelProvider_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXNETChannelProvider_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXNETChannelProvider_SPtr() : this(pyxlibPINVOKE.new_PYXNETChannelProvider_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXNETChannelProvider_SPtr(PYXNETChannelProvider p, bool add_ref) : this(pyxlibPINVOKE.new_PYXNETChannelProvider_SPtr__SWIG_1(PYXNETChannelProvider.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXNETChannelProvider_SPtr(PYXNETChannelProvider p) : this(pyxlibPINVOKE.new_PYXNETChannelProvider_SPtr__SWIG_2(PYXNETChannelProvider.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXNETChannelProvider_SPtr(PYXNETChannelProvider_SPtr rhs) : this(pyxlibPINVOKE.new_PYXNETChannelProvider_SPtr__SWIG_3(PYXNETChannelProvider_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(PYXNETChannelProvider rhs) {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_reset__SWIG_1(swigCPtr, PYXNETChannelProvider.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXNETChannelProvider get() {
    IntPtr cPtr = pyxlibPINVOKE.PYXNETChannelProvider_SPtr_get(swigCPtr);
    PYXNETChannelProvider ret = (cPtr == IntPtr.Zero) ? null : new PYXNETChannelProvider(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXNETChannelProvider __ref__() {
    PYXNETChannelProvider ret = new PYXNETChannelProvider(pyxlibPINVOKE.PYXNETChannelProvider_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXNETChannelProvider __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.PYXNETChannelProvider_SPtr___deref__(swigCPtr);
    PYXNETChannelProvider ret = (cPtr == IntPtr.Zero) ? null : new PYXNETChannelProvider(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(PYXNETChannelProvider_SPtr rhs) {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_swap(swigCPtr, PYXNETChannelProvider_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.PYXNETChannelProvider_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.PYXNETChannelProvider_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXNETChannel_SPtr getOrCreateChannel(ProcRef processProcRef, string code) {
    PYXNETChannel_SPtr ret = new PYXNETChannel_SPtr(pyxlibPINVOKE.PYXNETChannelProvider_SPtr_getOrCreateChannel(swigCPtr, ProcRef.getCPtr(processProcRef), pyxlibPINVOKE.UnmanagedString.Create(code)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void keyProvidedFailed(int channelId, string key) {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_keyProvidedFailed(swigCPtr, channelId, pyxlibPINVOKE.UnmanagedString.Create(key));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void keyProvided(int channelId, string key, string dataBase64) {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_keyProvided(swigCPtr, channelId, pyxlibPINVOKE.UnmanagedString.Create(key), pyxlibPINVOKE.UnmanagedString.Create(dataBase64));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int release() {
    int ret = pyxlibPINVOKE.PYXNETChannelProvider_SPtr_release(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = pyxlibPINVOKE.PYXNETChannelProvider_SPtr_addRef(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXNETChannelProvider_SPtr getInstance() {
    PYXNETChannelProvider_SPtr ret = new PYXNETChannelProvider_SPtr(pyxlibPINVOKE.PYXNETChannelProvider_SPtr_getInstance(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setInstance(PYXNETChannelProvider_SPtr spProvider) {
    pyxlibPINVOKE.PYXNETChannelProvider_SPtr_setInstance(swigCPtr, PYXNETChannelProvider_SPtr.getCPtr(spProvider));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
