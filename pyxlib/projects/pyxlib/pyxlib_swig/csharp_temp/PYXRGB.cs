/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXRGB : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXRGB(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXRGB obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXRGB() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXRGB(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXRGB() : this(pyxlibPINVOKE.new_PYXRGB__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRGB(int nR, int nG, int nB) : this(pyxlibPINVOKE.new_PYXRGB__SWIG_1(nR, nG, nB), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRGB(int nR, int nG, int nB, int nA) : this(pyxlibPINVOKE.new_PYXRGB__SWIG_2(nR, nG, nB, nA), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int red() {
    int ret = pyxlibPINVOKE.PYXRGB_red(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double redAsDouble() {
    double ret = pyxlibPINVOKE.PYXRGB_redAsDouble(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setRed(int nR) {
    pyxlibPINVOKE.PYXRGB_setRed(swigCPtr, nR);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setRedAsDouble(double fR) {
    pyxlibPINVOKE.PYXRGB_setRedAsDouble(swigCPtr, fR);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int green() {
    int ret = pyxlibPINVOKE.PYXRGB_green(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double greenAsDouble() {
    double ret = pyxlibPINVOKE.PYXRGB_greenAsDouble(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setGreen(int nG) {
    pyxlibPINVOKE.PYXRGB_setGreen(swigCPtr, nG);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setGreenAsDouble(double fG) {
    pyxlibPINVOKE.PYXRGB_setGreenAsDouble(swigCPtr, fG);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int blue() {
    int ret = pyxlibPINVOKE.PYXRGB_blue(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double blueAsDouble() {
    double ret = pyxlibPINVOKE.PYXRGB_blueAsDouble(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setBlue(int nB) {
    pyxlibPINVOKE.PYXRGB_setBlue(swigCPtr, nB);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setBlueAsDouble(double fB) {
    pyxlibPINVOKE.PYXRGB_setBlueAsDouble(swigCPtr, fB);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int alpha() {
    int ret = pyxlibPINVOKE.PYXRGB_alpha(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double alphaAsDouble() {
    double ret = pyxlibPINVOKE.PYXRGB_alphaAsDouble(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setAlpha(int nA) {
    pyxlibPINVOKE.PYXRGB_setAlpha(swigCPtr, nA);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAlphaAsDouble(double fA) {
    pyxlibPINVOKE.PYXRGB_setAlphaAsDouble(swigCPtr, fA);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void invertColor() {
    pyxlibPINVOKE.PYXRGB_invertColor(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYXRGB_reset(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set(int nR, int nG, int nB) {
    pyxlibPINVOKE.PYXRGB_set__SWIG_0(swigCPtr, nR, nG, nB);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set(int nR, int nG, int nB, int nA) {
    pyxlibPINVOKE.PYXRGB_set__SWIG_1(swigCPtr, nR, nG, nB, nA);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAsDouble(double fR, double fG, double fB) {
    pyxlibPINVOKE.PYXRGB_setAsDouble__SWIG_0(swigCPtr, fR, fG, fB);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAsDouble(double fR, double fG, double fB, double fA) {
    pyxlibPINVOKE.PYXRGB_setAsDouble__SWIG_1(swigCPtr, fR, fG, fB, fA);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
