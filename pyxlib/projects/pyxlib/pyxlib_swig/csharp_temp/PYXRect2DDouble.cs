/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXRect2DDouble : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXRect2DDouble(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXRect2DDouble obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXRect2DDouble() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXRect2DDouble(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXRect2DDouble(double xMin, double yMin, double xMax, double yMax) : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_0(xMin, yMin, xMax, yMax), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRect2DDouble(double xMin, double yMin, double xMax) : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_1(xMin, yMin, xMax), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRect2DDouble(double xMin, double yMin) : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_2(xMin, yMin), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRect2DDouble(double xMin) : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_3(xMin), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRect2DDouble() : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_4(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXRect2DDouble(PYXRect2DDouble r) : this(pyxlibPINVOKE.new_PYXRect2DDouble__SWIG_5(PYXRect2DDouble.getCPtr(r)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool equal(PYXRect2DDouble r) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_equal__SWIG_0(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool equal(PYXRect2DDouble r, double precision) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_equal__SWIG_1(swigCPtr, PYXRect2DDouble.getCPtr(r), precision);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool contains(PYXRect2DDouble r) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_contains(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool touch(PYXRect2DDouble r) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_touch(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double xMin() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_xMin(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setXMin(double xMin) {
    pyxlibPINVOKE.PYXRect2DDouble_setXMin(swigCPtr, xMin);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double yMin() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_yMin(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setYMin(double yMin) {
    pyxlibPINVOKE.PYXRect2DDouble_setYMin(swigCPtr, yMin);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double xMax() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_xMax(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setXMax(double xMax) {
    pyxlibPINVOKE.PYXRect2DDouble_setXMax(swigCPtr, xMax);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double yMax() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_yMax(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setYMax(double yMax) {
    pyxlibPINVOKE.PYXRect2DDouble_setYMax(swigCPtr, yMax);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public double width() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_width(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double height() {
    double ret = pyxlibPINVOKE.PYXRect2DDouble_height(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool degenerate() {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_degenerate(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool empty() {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_empty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setEmpty() {
    pyxlibPINVOKE.PYXRect2DDouble_setEmpty(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool inside(PYXCoord2DDouble pt) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_inside(swigCPtr, PYXCoord2DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void expandX(double x) {
    pyxlibPINVOKE.PYXRect2DDouble_expandX(swigCPtr, x);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void expandY(double y) {
    pyxlibPINVOKE.PYXRect2DDouble_expandY(swigCPtr, y);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void expand(PYXCoord2DDouble pt) {
    pyxlibPINVOKE.PYXRect2DDouble_expand__SWIG_0(swigCPtr, PYXCoord2DDouble.getCPtr(pt));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void expand(PYXRect2DDouble r) {
    pyxlibPINVOKE.PYXRect2DDouble_expand__SWIG_1(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void clip(PYXRect2DDouble r) {
    pyxlibPINVOKE.PYXRect2DDouble_clip(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord2DDouble center() {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(pyxlibPINVOKE.PYXRect2DDouble_center(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void scale(double value) {
    pyxlibPINVOKE.PYXRect2DDouble_scale(swigCPtr, value);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void scaleInPlace(double value) {
    pyxlibPINVOKE.PYXRect2DDouble_scaleInPlace(swigCPtr, value);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void flip() {
    pyxlibPINVOKE.PYXRect2DDouble_flip(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void translate(PYXCoord2DDouble displacement) {
    pyxlibPINVOKE.PYXRect2DDouble_translate(swigCPtr, PYXCoord2DDouble.getCPtr(displacement));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool intersects(PYXRect2DDouble r) {
    bool ret = pyxlibPINVOKE.PYXRect2DDouble_intersects(swigCPtr, PYXRect2DDouble.getCPtr(r));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord2DDouble pin(PYXCoord2DDouble pt) {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(pyxlibPINVOKE.PYXRect2DDouble_pin(swigCPtr, PYXCoord2DDouble.getCPtr(pt)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void fixAspect(double fAspect) {
    pyxlibPINVOKE.PYXRect2DDouble_fixAspect(swigCPtr, fAspect);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
