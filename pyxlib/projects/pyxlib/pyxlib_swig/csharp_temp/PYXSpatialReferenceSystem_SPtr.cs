/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXSpatialReferenceSystem_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXSpatialReferenceSystem_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXSpatialReferenceSystem_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXSpatialReferenceSystem_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXSpatialReferenceSystem_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXSpatialReferenceSystem_SPtr() : this(pyxlibPINVOKE.new_PYXSpatialReferenceSystem_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem_SPtr(PYXSpatialReferenceSystem p, bool add_ref) : this(pyxlibPINVOKE.new_PYXSpatialReferenceSystem_SPtr__SWIG_1(PYXSpatialReferenceSystem.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem_SPtr(PYXSpatialReferenceSystem p) : this(pyxlibPINVOKE.new_PYXSpatialReferenceSystem_SPtr__SWIG_2(PYXSpatialReferenceSystem.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem_SPtr(PYXSpatialReferenceSystem_SPtr rhs) : this(pyxlibPINVOKE.new_PYXSpatialReferenceSystem_SPtr__SWIG_3(PYXSpatialReferenceSystem_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(PYXSpatialReferenceSystem rhs) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_reset__SWIG_1(swigCPtr, PYXSpatialReferenceSystem.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem get() {
    IntPtr cPtr = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_get(swigCPtr);
    PYXSpatialReferenceSystem ret = (cPtr == IntPtr.Zero) ? null : new PYXSpatialReferenceSystem(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXSpatialReferenceSystem __ref__() {
    PYXSpatialReferenceSystem ret = new PYXSpatialReferenceSystem(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXSpatialReferenceSystem __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr___deref__(swigCPtr);
    PYXSpatialReferenceSystem ret = (cPtr == IntPtr.Zero) ? null : new PYXSpatialReferenceSystem(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(PYXSpatialReferenceSystem_SPtr rhs) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_swap(swigCPtr, PYXSpatialReferenceSystem_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXSpatialReferenceSystem_SPtr clone() {
    PYXSpatialReferenceSystem_SPtr ret = new PYXSpatialReferenceSystem_SPtr(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int knMaxZone {
    get {
      int ret = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_knMaxZone_get(swigCPtr);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXSpatialReferenceSystem_SPtr create() {
    PYXSpatialReferenceSystem_SPtr ret = new PYXSpatialReferenceSystem_SPtr(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_create(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string kstrScope {
  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_kstrScope_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string getScope() {
  // Generated from %typemap(csout) string
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getScope(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setSystem(PYXSpatialReferenceSystem.eSystem nSystem) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setSystem(swigCPtr, (int)nSystem);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem.eSystem getSystem() {
    PYXSpatialReferenceSystem.eSystem ret = (PYXSpatialReferenceSystem.eSystem)pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getSystem(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setDatum(PYXSpatialReferenceSystem.eDatum nDatum) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setDatum(swigCPtr, (int)nDatum);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem.eDatum getDatum() {
    PYXSpatialReferenceSystem.eDatum ret = (PYXSpatialReferenceSystem.eDatum)pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getDatum(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setProjection(PYXSpatialReferenceSystem.eProjection nProjection) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setProjection(swigCPtr, (int)nProjection);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXSpatialReferenceSystem.eProjection getProjection() {
    PYXSpatialReferenceSystem.eProjection ret = (PYXSpatialReferenceSystem.eProjection)pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getProjection(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setIsUTMNorth(bool bIsUTMNorth) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setIsUTMNorth(swigCPtr, bIsUTMNorth);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getIsUTMNorth() {
    bool ret = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getIsUTMNorth(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setZone(int nZone) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setZone(swigCPtr, nZone);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getZone() {
    int ret = pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getZone(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setWKT(string strWKT) {
    pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_setWKT(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strWKT));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public string getWKT() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.PYXSpatialReferenceSystem_SPtr_getWKT(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

}
