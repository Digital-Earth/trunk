/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXTableDefinition : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXTableDefinition(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXTableDefinition obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        throw new MethodAccessException("C++ destructor does not have public access");
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    pyxlibPINVOKE.PYXTableDefinition_test();
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static PYXTableDefinition_SPtr create() {
    PYXTableDefinition_SPtr ret = new PYXTableDefinition_SPtr(pyxlibPINVOKE.PYXTableDefinition_create__SWIG_0(), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static PYXTableDefinition_SPtr create(PYXTableDefinition rhs) {
    PYXTableDefinition_SPtr ret = new PYXTableDefinition_SPtr(pyxlibPINVOKE.PYXTableDefinition_create__SWIG_1(PYXTableDefinition.getCPtr(rhs)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual PYXTableDefinition_SPtr clone() {
    PYXTableDefinition_SPtr ret = new PYXTableDefinition_SPtr(pyxlibPINVOKE.PYXTableDefinition_clone(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void clear() {
    pyxlibPINVOKE.PYXTableDefinition_clear(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int addFieldDefinition(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType, int nCount) {
    int ret = pyxlibPINVOKE.PYXTableDefinition_addFieldDefinition__SWIG_0(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType, nCount);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addFieldDefinition(string strName, PYXFieldDefinition.eContextType nContext, PYXValue.eType nType) {
    int ret = pyxlibPINVOKE.PYXTableDefinition_addFieldDefinition__SWIG_1(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName), (int)nContext, (int)nType);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addFieldDefinition(PYXFieldDefinition fieldDefn) {
    int ret = pyxlibPINVOKE.PYXTableDefinition_addFieldDefinition__SWIG_2(swigCPtr, PYXFieldDefinition.getCPtr(fieldDefn));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addNullField() {
    pyxlibPINVOKE.PYXTableDefinition_addNullField(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getFieldCount() {
    int ret = pyxlibPINVOKE.PYXTableDefinition_getFieldCount(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXFieldDefinition getFieldDefinition(int nFieldIndex) {
    PYXFieldDefinition ret = new PYXFieldDefinition(pyxlibPINVOKE.PYXTableDefinition_getFieldDefinition(swigCPtr, nFieldIndex), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getFieldIndex(string strName) {
    int ret = pyxlibPINVOKE.PYXTableDefinition_getFieldIndex(swigCPtr, pyxlibPINVOKE.UnmanagedString.Create(strName));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Vector_String getFieldNames() {
    Vector_String ret = new Vector_String(pyxlibPINVOKE.PYXTableDefinition_getFieldNames(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
