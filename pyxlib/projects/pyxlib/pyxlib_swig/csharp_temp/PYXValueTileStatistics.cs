/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class PYXValueTileStatistics : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public PYXValueTileStatistics(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(PYXValueTileStatistics obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~PYXValueTileStatistics() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_PYXValueTileStatistics(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public int nCells {
    set {
      pyxlibPINVOKE.PYXValueTileStatistics_nCells_set(swigCPtr, value);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = pyxlibPINVOKE.PYXValueTileStatistics_nCells_get(swigCPtr);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public int nValues {
    set {
      pyxlibPINVOKE.PYXValueTileStatistics_nValues_set(swigCPtr, value);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      int ret = pyxlibPINVOKE.PYXValueTileStatistics_nValues_get(swigCPtr);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXValue minValue {
    set {
      pyxlibPINVOKE.PYXValueTileStatistics_minValue_set(swigCPtr, PYXValue.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = pyxlibPINVOKE.PYXValueTileStatistics_minValue_get(swigCPtr);
      PYXValue ret = (cPtr == IntPtr.Zero) ? null : new PYXValue(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXValue maxValue {
    set {
      pyxlibPINVOKE.PYXValueTileStatistics_maxValue_set(swigCPtr, PYXValue.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = pyxlibPINVOKE.PYXValueTileStatistics_maxValue_get(swigCPtr);
      PYXValue ret = (cPtr == IntPtr.Zero) ? null : new PYXValue(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXValue avgValue {
    set {
      pyxlibPINVOKE.PYXValueTileStatistics_avgValue_set(swigCPtr, PYXValue.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = pyxlibPINVOKE.PYXValueTileStatistics_avgValue_get(swigCPtr);
      PYXValue ret = (cPtr == IntPtr.Zero) ? null : new PYXValue(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXValueTileStatistics() : this(pyxlibPINVOKE.new_PYXValueTileStatistics(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

}
