/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ProcessProcessingEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ProcessProcessingEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ProcessProcessingEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ProcessProcessingEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ProcessProcessingEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ProcessProcessingEvent_SPtr() : this(pyxlibPINVOKE.new_ProcessProcessingEvent_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessProcessingEvent_SPtr(ProcessProcessingEvent p, bool add_ref) : this(pyxlibPINVOKE.new_ProcessProcessingEvent_SPtr__SWIG_1(ProcessProcessingEvent.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessProcessingEvent_SPtr(ProcessProcessingEvent p) : this(pyxlibPINVOKE.new_ProcessProcessingEvent_SPtr__SWIG_2(ProcessProcessingEvent.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessProcessingEvent_SPtr(ProcessProcessingEvent_SPtr rhs) : this(pyxlibPINVOKE.new_ProcessProcessingEvent_SPtr__SWIG_3(ProcessProcessingEvent_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ProcessProcessingEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ProcessProcessingEvent rhs) {
    pyxlibPINVOKE.ProcessProcessingEvent_SPtr_reset__SWIG_1(swigCPtr, ProcessProcessingEvent.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ProcessProcessingEvent get() {
    IntPtr cPtr = pyxlibPINVOKE.ProcessProcessingEvent_SPtr_get(swigCPtr);
    ProcessProcessingEvent ret = (cPtr == IntPtr.Zero) ? null : new ProcessProcessingEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcessProcessingEvent __ref__() {
    ProcessProcessingEvent ret = new ProcessProcessingEvent(pyxlibPINVOKE.ProcessProcessingEvent_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcessProcessingEvent __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ProcessProcessingEvent_SPtr___deref__(swigCPtr);
    ProcessProcessingEvent ret = (cPtr == IntPtr.Zero) ? null : new ProcessProcessingEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ProcessProcessingEvent_SPtr rhs) {
    pyxlibPINVOKE.ProcessProcessingEvent_SPtr_swap(swigCPtr, ProcessProcessingEvent_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ProcessProcessingEvent_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ProcessProcessingEvent_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string Error {
  // Generated from %typemap(csvarin) const string &
  set {
    throw new NotImplementedException();
  }

  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_Error_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string Processing {
  // Generated from %typemap(csvarin) const string &
  set {
    throw new NotImplementedException();
  }

  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_Processing_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string Fetching {
  // Generated from %typemap(csvarin) const string &
  set {
    throw new NotImplementedException();
  }

  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_Fetching_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string Downloading {
  // Generated from %typemap(csvarin) const string &
  set {
    throw new NotImplementedException();
  }

  // Generated from %typemap(csvarout) const string &
  get {
    string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_Downloading_get(swigCPtr));
    
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  }

  public string getProcessingMessage() {
  // Generated from typemap(csout) const string &
  string ret = pyxlibPINVOKE.UnmanagedString.Consume(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_getProcessingMessage(swigCPtr));
  
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public ProcessProcessingEvent_SPtr create(IProcess_SPtr spProc, string message) {
    ProcessProcessingEvent_SPtr ret = new ProcessProcessingEvent_SPtr(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_create(swigCPtr, IProcess_SPtr.getCPtr(spProc), pyxlibPINVOKE.UnmanagedString.Create(message)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ProcessProcessingEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = pyxlibPINVOKE.ProcessProcessingEvent_SPtr_dynamic_cast(swigCPtr, NotifierEvent.getCPtr(pSource));
    ProcessProcessingEvent ret = (cPtr == IntPtr.Zero) ? null : new ProcessProcessingEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IProcess_SPtr getProcess() {
    IProcess_SPtr ret = new IProcess_SPtr(pyxlibPINVOKE.ProcessProcessingEvent_SPtr_getProcess(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
