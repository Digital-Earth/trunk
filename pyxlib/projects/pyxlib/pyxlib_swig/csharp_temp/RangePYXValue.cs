/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class RangePYXValue : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public RangePYXValue(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(RangePYXValue obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~RangePYXValue() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_RangePYXValue(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public PYXValue min {
    set {
      pyxlibPINVOKE.RangePYXValue_min_set(swigCPtr, PYXValue.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = pyxlibPINVOKE.RangePYXValue_min_get(swigCPtr);
      PYXValue ret = (cPtr == IntPtr.Zero) ? null : new PYXValue(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public PYXValue max {
    set {
      pyxlibPINVOKE.RangePYXValue_max_set(swigCPtr, PYXValue.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = pyxlibPINVOKE.RangePYXValue_max_get(swigCPtr);
      PYXValue ret = (cPtr == IntPtr.Zero) ? null : new PYXValue(cPtr, false);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_RangeBorderType minType {
    set {
      pyxlibPINVOKE.RangePYXValue_minType_set(swigCPtr, SWIGTYPE_p_RangeBorderType.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_RangeBorderType ret = new SWIGTYPE_p_RangeBorderType(pyxlibPINVOKE.RangePYXValue_minType_get(swigCPtr), true);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_RangeBorderType maxType {
    set {
      pyxlibPINVOKE.RangePYXValue_maxType_set(swigCPtr, SWIGTYPE_p_RangeBorderType.getCPtr(value));
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_RangeBorderType ret = new SWIGTYPE_p_RangeBorderType(pyxlibPINVOKE.RangePYXValue_maxType_get(swigCPtr), true);
      if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static RangePYXValue createClosedOpen(PYXValue min, PYXValue max) {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_createClosedOpen(PYXValue.getCPtr(min), PYXValue.getCPtr(max)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static RangePYXValue createClosedClosed(PYXValue min, PYXValue max) {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_createClosedClosed(PYXValue.getCPtr(min), PYXValue.getCPtr(max)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RangePYXValue() : this(pyxlibPINVOKE.new_RangePYXValue__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public RangePYXValue(PYXValue value) : this(pyxlibPINVOKE.new_RangePYXValue__SWIG_1(PYXValue.getCPtr(value)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public RangePYXValue(PYXValue _min, PYXValue _max, SWIGTYPE_p_RangeBorderType _minType, SWIGTYPE_p_RangeBorderType _maxType) : this(pyxlibPINVOKE.new_RangePYXValue__SWIG_2(PYXValue.getCPtr(_min), PYXValue.getCPtr(_max), SWIGTYPE_p_RangeBorderType.getCPtr(_minType), SWIGTYPE_p_RangeBorderType.getCPtr(_maxType)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public RangePYXValue(RangePYXValue other) : this(pyxlibPINVOKE.new_RangePYXValue__SWIG_3(RangePYXValue.getCPtr(other)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXValue middle() {
    PYXValue ret = new PYXValue(pyxlibPINVOKE.RangePYXValue_middle(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool single() {
    bool ret = pyxlibPINVOKE.RangePYXValue_single(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool global() {
    bool ret = pyxlibPINVOKE.RangePYXValue_global(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool infinite() {
    bool ret = pyxlibPINVOKE.RangePYXValue_infinite(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool contains(PYXValue value) {
    bool ret = pyxlibPINVOKE.RangePYXValue_contains__SWIG_0(swigCPtr, PYXValue.getCPtr(value));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool contains(RangePYXValue range) {
    bool ret = pyxlibPINVOKE.RangePYXValue_contains__SWIG_1(swigCPtr, RangePYXValue.getCPtr(range));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool intersects(RangePYXValue range) {
    bool ret = pyxlibPINVOKE.RangePYXValue_intersects(swigCPtr, RangePYXValue.getCPtr(range));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RangePYXValue lowerHalf() {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_lowerHalf(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RangePYXValue higherHalf() {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_higherHalf(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RangePYXValue normalize() {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_normalize(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public RangePYXValue normalizeWith(RangePYXValue other) {
    RangePYXValue ret = new RangePYXValue(pyxlibPINVOKE.RangePYXValue_normalizeWith(swigCPtr, RangePYXValue.getCPtr(other)), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
