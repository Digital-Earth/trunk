/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ViewPointChangedEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public ViewPointChangedEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(ViewPointChangedEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ViewPointChangedEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        pyxlibPINVOKE.delete_ViewPointChangedEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public ViewPointChangedEvent_SPtr() : this(pyxlibPINVOKE.new_ViewPointChangedEvent_SPtr__SWIG_0(), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ViewPointChangedEvent_SPtr(ViewPointChangedEvent p, bool add_ref) : this(pyxlibPINVOKE.new_ViewPointChangedEvent_SPtr__SWIG_1(ViewPointChangedEvent.getCPtr(p), add_ref), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ViewPointChangedEvent_SPtr(ViewPointChangedEvent p) : this(pyxlibPINVOKE.new_ViewPointChangedEvent_SPtr__SWIG_2(ViewPointChangedEvent.getCPtr(p)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ViewPointChangedEvent_SPtr(ViewPointChangedEvent_SPtr rhs) : this(pyxlibPINVOKE.new_ViewPointChangedEvent_SPtr__SWIG_3(ViewPointChangedEvent_SPtr.getCPtr(rhs)), true) {
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    pyxlibPINVOKE.ViewPointChangedEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(ViewPointChangedEvent rhs) {
    pyxlibPINVOKE.ViewPointChangedEvent_SPtr_reset__SWIG_1(swigCPtr, ViewPointChangedEvent.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public ViewPointChangedEvent get() {
    IntPtr cPtr = pyxlibPINVOKE.ViewPointChangedEvent_SPtr_get(swigCPtr);
    ViewPointChangedEvent ret = (cPtr == IntPtr.Zero) ? null : new ViewPointChangedEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ViewPointChangedEvent __ref__() {
    ViewPointChangedEvent ret = new ViewPointChangedEvent(pyxlibPINVOKE.ViewPointChangedEvent_SPtr___ref__(swigCPtr), false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ViewPointChangedEvent __deref__() {
    IntPtr cPtr = pyxlibPINVOKE.ViewPointChangedEvent_SPtr___deref__(swigCPtr);
    ViewPointChangedEvent ret = (cPtr == IntPtr.Zero) ? null : new ViewPointChangedEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(ViewPointChangedEvent_SPtr rhs) {
    pyxlibPINVOKE.ViewPointChangedEvent_SPtr_swap(swigCPtr, ViewPointChangedEvent_SPtr.getCPtr(rhs));
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = pyxlibPINVOKE.ViewPointChangedEvent_SPtr_isNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = pyxlibPINVOKE.ViewPointChangedEvent_SPtr_isNotNull(swigCPtr);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ViewPointChangedEvent_SPtr create() {
    ViewPointChangedEvent_SPtr ret = new ViewPointChangedEvent_SPtr(pyxlibPINVOKE.ViewPointChangedEvent_SPtr_create(swigCPtr), true);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ViewPointChangedEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = pyxlibPINVOKE.ViewPointChangedEvent_SPtr_dynamic_cast(swigCPtr, NotifierEvent.getCPtr(pSource));
    ViewPointChangedEvent ret = (cPtr == IntPtr.Zero) ? null : new ViewPointChangedEvent(cPtr, false);
    if (pyxlibPINVOKE.SWIGPendingException.Pending) throw pyxlibPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
