/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_pyxlib_WRAP_H_
#define SWIG_pyxlib_WRAP_H_

class SwigDirector_TraceCallback : public TraceCallback, public Swig::Director {

public:
    SwigDirector_TraceCallback();
    virtual ~SwigDirector_TraceCallback();
    virtual void message(Trace::eLevel level, std::string const &strMessage);

    typedef void (SWIGSTDCALL* SWIG_Callback0_t)(int, UnmanagedString *);
    void swig_connect_director(SWIG_Callback0_t callbackmessage);

private:
    SWIG_Callback0_t swig_callbackmessage;
    void swig_init_callbacks();
};

class SwigDirector_ChecksumCalculator : public ChecksumCalculator, public Swig::Director {

public:
    SwigDirector_ChecksumCalculator();
    virtual std::string calculateCheckSum(std::string const &str);
    virtual std::string calculateFileCheckSum(std::string const &path);
    virtual std::string findFileMatchingChecksum(std::string const &checksum);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_ChecksumCalculator();

    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback1_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback2_t)(UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback4_t)();
    void swig_connect_director(SWIG_Callback0_t callbackcalculateCheckSum, SWIG_Callback1_t callbackcalculateFileCheckSum, SWIG_Callback2_t callbackfindFileMatchingChecksum, SWIG_Callback3_t callbackrelease, SWIG_Callback4_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackcalculateCheckSum;
    SWIG_Callback1_t swig_callbackcalculateFileCheckSum;
    SWIG_Callback2_t swig_callbackfindFileMatchingChecksum;
    SWIG_Callback3_t swig_callbackrelease;
    SWIG_Callback4_t swig_callbackaddRef;
    void swig_init_callbacks();
};

class SwigDirector_Command : public Command, public Swig::Director {

public:
    SwigDirector_Command();
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_Command();
    virtual std::string getName() const;
    virtual std::string getLongName() const;
    virtual bool execute();
    virtual std::string drag();
    virtual bool undo();
    virtual bool redo();
    virtual std::string getCategory() const;
    virtual void setCategory(std::string const &strCategory);
    virtual int getPriority() const;
    virtual void setPriority(int priority);
    virtual std::vector<boost::intrusive_ptr<Command > > &getSubordinates();
    virtual void addSubordinate(boost::intrusive_ptr<Command > spCommand);
    virtual bool getRecordable() const;
    virtual bool getUndoable() const;
    virtual bool getEnabled() const;
    virtual bool getChecked() const;
    virtual Command::CommandType getType() const;
    virtual std::string getToolTip() const;
    virtual bool hasSubordinates() const;

    typedef long (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback4_t)();
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback5_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback6_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback7_t)();
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback8_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback9_t)(UnmanagedString *);
    typedef int (SWIGSTDCALL* SWIG_Callback10_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)(int);
    typedef void * (SWIGSTDCALL* SWIG_Callback12_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback13_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback14_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback15_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback16_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback17_t)();
    typedef int (SWIGSTDCALL* SWIG_Callback18_t)();
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback19_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback20_t)();
    void swig_connect_director(SWIG_Callback0_t callbackrelease, SWIG_Callback1_t callbackaddRef, SWIG_Callback2_t callbackgetName, SWIG_Callback3_t callbackgetLongName, SWIG_Callback4_t callbackexecute, SWIG_Callback5_t callbackdrag, SWIG_Callback6_t callbackundo, SWIG_Callback7_t callbackredo, SWIG_Callback8_t callbackgetCategory, SWIG_Callback9_t callbacksetCategory, SWIG_Callback10_t callbackgetPriority, SWIG_Callback11_t callbacksetPriority, SWIG_Callback12_t callbackgetSubordinates, SWIG_Callback13_t callbackaddSubordinate, SWIG_Callback14_t callbackgetRecordable, SWIG_Callback15_t callbackgetUndoable, SWIG_Callback16_t callbackgetEnabled, SWIG_Callback17_t callbackgetChecked, SWIG_Callback18_t callbackgetType, SWIG_Callback19_t callbackgetToolTip, SWIG_Callback20_t callbackhasSubordinates);

private:
    SWIG_Callback0_t swig_callbackrelease;
    SWIG_Callback1_t swig_callbackaddRef;
    SWIG_Callback2_t swig_callbackgetName;
    SWIG_Callback3_t swig_callbackgetLongName;
    SWIG_Callback4_t swig_callbackexecute;
    SWIG_Callback5_t swig_callbackdrag;
    SWIG_Callback6_t swig_callbackundo;
    SWIG_Callback7_t swig_callbackredo;
    SWIG_Callback8_t swig_callbackgetCategory;
    SWIG_Callback9_t swig_callbacksetCategory;
    SWIG_Callback10_t swig_callbackgetPriority;
    SWIG_Callback11_t swig_callbacksetPriority;
    SWIG_Callback12_t swig_callbackgetSubordinates;
    SWIG_Callback13_t swig_callbackaddSubordinate;
    SWIG_Callback14_t swig_callbackgetRecordable;
    SWIG_Callback15_t swig_callbackgetUndoable;
    SWIG_Callback16_t swig_callbackgetEnabled;
    SWIG_Callback17_t swig_callbackgetChecked;
    SWIG_Callback18_t swig_callbackgetType;
    SWIG_Callback19_t swig_callbackgetToolTip;
    SWIG_Callback20_t swig_callbackhasSubordinates;
    void swig_init_callbacks();
};

class SwigDirector_Observer : public Observer, public Swig::Director {

public:
    SwigDirector_Observer();
    virtual ~SwigDirector_Observer();
    virtual std::string getObserverDescription() const;
    virtual void updateObserverImpl(boost::intrusive_ptr<NotifierEvent > spEvent);

    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    void swig_connect_director(SWIG_Callback0_t callbackgetObserverDescription, SWIG_Callback1_t callbackupdateObserverImpl);

private:
    SWIG_Callback0_t swig_callbackgetObserverDescription;
    SWIG_Callback1_t swig_callbackupdateObserverImpl;
    void swig_init_callbacks();
};

class SwigDirector_CSharpFunctionProvider : public CSharpFunctionProvider, public Swig::Director {

public:
    SwigDirector_CSharpFunctionProvider();
    virtual std::string applyXsltTransform(std::string transform, std::string inputXml);
    virtual bool doesXPathMatch(std::string xPathExpression, std::string inputXml);
    virtual bool isWellFormedURI(std::string checkUri);
    virtual std::string setDefaultValueForUrlQueryParameter(std::string baseUri, std::string key, std::string value);
    virtual std::string overwriteUrlQueryParameter(std::string baseUri, std::string key, std::string value);
    virtual std::string removeUrlQueryParameter(std::string baseUri, std::string key);
    virtual std::string getUrlQueryParameter(std::string baseUri, std::string key);
    virtual std::string getUrlHost(std::string baseUri);
    virtual std::string XMLSerialize(std::vector<std::string > serializeMe);
    virtual bool XMLDeserialize(std::vector<std::string > &target, std::string source);
    virtual std::string getSerializedManifest(boost::intrusive_ptr<IPath > spPathProc);
    virtual std::string getSerializedManifestForFile(std::string filename);
    virtual std::string getIdentity(std::string strManifest);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_CSharpFunctionProvider();

    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *, UnmanagedString *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback1_t)(UnmanagedString *, UnmanagedString *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback2_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback3_t)(UnmanagedString *, UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback4_t)(UnmanagedString *, UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback5_t)(UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback6_t)(UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback7_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback8_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback9_t)(void *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback10_t)(void *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback11_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback12_t)(UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback13_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback14_t)();
    void swig_connect_director(SWIG_Callback0_t callbackapplyXsltTransform, SWIG_Callback1_t callbackdoesXPathMatch, SWIG_Callback2_t callbackisWellFormedURI, SWIG_Callback3_t callbacksetDefaultValueForUrlQueryParameter, SWIG_Callback4_t callbackoverwriteUrlQueryParameter, SWIG_Callback5_t callbackremoveUrlQueryParameter, SWIG_Callback6_t callbackgetUrlQueryParameter, SWIG_Callback7_t callbackgetUrlHost, SWIG_Callback8_t callbackXMLSerialize, SWIG_Callback9_t callbackXMLDeserialize, SWIG_Callback10_t callbackgetSerializedManifest, SWIG_Callback11_t callbackgetSerializedManifestForFile, SWIG_Callback12_t callbackgetIdentity, SWIG_Callback13_t callbackrelease, SWIG_Callback14_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackapplyXsltTransform;
    SWIG_Callback1_t swig_callbackdoesXPathMatch;
    SWIG_Callback2_t swig_callbackisWellFormedURI;
    SWIG_Callback3_t swig_callbacksetDefaultValueForUrlQueryParameter;
    SWIG_Callback4_t swig_callbackoverwriteUrlQueryParameter;
    SWIG_Callback5_t swig_callbackremoveUrlQueryParameter;
    SWIG_Callback6_t swig_callbackgetUrlQueryParameter;
    SWIG_Callback7_t swig_callbackgetUrlHost;
    SWIG_Callback8_t swig_callbackXMLSerialize;
    SWIG_Callback9_t swig_callbackXMLDeserialize;
    SWIG_Callback10_t swig_callbackgetSerializedManifest;
    SWIG_Callback11_t swig_callbackgetSerializedManifestForFile;
    SWIG_Callback12_t swig_callbackgetIdentity;
    SWIG_Callback13_t swig_callbackrelease;
    SWIG_Callback14_t swig_callbackaddRef;
    void swig_init_callbacks();
};

class SwigDirector_CSharpXMLDocProvider : public CSharpXMLDocProvider, public Swig::Director {

public:
    SwigDirector_CSharpXMLDocProvider();
    virtual int createDocument(std::string const &xmlString, bool removeNamespaces);
    virtual void destroyDocument(int const &docHandle);
    virtual void saveToFile(int const &docHandle, std::string const &path);
    virtual int getNodesCount(int const &docHandle, std::string const &xmlPath);
    virtual bool hasNode(int const &docHandle, std::string const &xmlPath);
    virtual void setNodeText(int const &docHandle, std::string const &xmlPath, std::string const &text);
    virtual std::string getNodeText(int const &docHandle, std::string const &xmlPath);
    virtual std::string getInnerXMLString(int const &docHandle, std::string const &xmlPath);
    virtual void setInnerXMLString(int const &docHandle, std::string const &xmlPath, std::string const &innerXml);
    virtual std::string getOuterXMLString(int const &docHandle, std::string const &xmlPath);
    virtual void removeNode(int const &docHandle, std::string const &xmlPath);
    virtual void addChild(int const &docHandle, std::string const &xmlPath, std::string const &xmlNode);
    virtual void addChildWithInnerText(int const &docHandle, std::string const &xmlPath, std::string const &xmlNode, std::string const &innerText);
    virtual bool hasAttribute(int const &docHandle, std::string const &xmlPath, std::string const &attributeName);
    virtual std::string getAttributeValue(int const &docHandle, std::string const &xmlPath, std::string const &attributeName);
    virtual void setAttributeValue(int const &docHandle, std::string const &xmlPath, std::string const &attributeName, std::string const &attributeValue);
    virtual void addAttribute(int const &docHandle, std::string const &xmlPath, std::string const &attributeName, std::string const &attributeValue);
    virtual void removeAttribute(int const &docHandle, std::string const &xmlPath, std::string const &attributeName);
    virtual void addNamespace(int const &docHandle, std::string const &prefix, std::string const &uri);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_CSharpXMLDocProvider();

    typedef int (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *, unsigned int);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(int);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(int, UnmanagedString *);
    typedef int (SWIGSTDCALL* SWIG_Callback3_t)(int, UnmanagedString *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback4_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(int, UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback6_t)(int, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback7_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback8_t)(int, UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback9_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback10_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback11_t)(int, UnmanagedString *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback12_t)(int, UnmanagedString *, UnmanagedString *, UnmanagedString *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback13_t)(int, UnmanagedString *, UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback14_t)(int, UnmanagedString *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback15_t)(int, UnmanagedString *, UnmanagedString *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback16_t)(int, UnmanagedString *, UnmanagedString *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback17_t)(int, UnmanagedString *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback18_t)(int, UnmanagedString *, UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback19_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback20_t)();
    void swig_connect_director(SWIG_Callback0_t callbackcreateDocument, SWIG_Callback1_t callbackdestroyDocument, SWIG_Callback2_t callbacksaveToFile, SWIG_Callback3_t callbackgetNodesCount, SWIG_Callback4_t callbackhasNode, SWIG_Callback5_t callbacksetNodeText, SWIG_Callback6_t callbackgetNodeText, SWIG_Callback7_t callbackgetInnerXMLString, SWIG_Callback8_t callbacksetInnerXMLString, SWIG_Callback9_t callbackgetOuterXMLString, SWIG_Callback10_t callbackremoveNode, SWIG_Callback11_t callbackaddChild, SWIG_Callback12_t callbackaddChildWithInnerText, SWIG_Callback13_t callbackhasAttribute, SWIG_Callback14_t callbackgetAttributeValue, SWIG_Callback15_t callbacksetAttributeValue, SWIG_Callback16_t callbackaddAttribute, SWIG_Callback17_t callbackremoveAttribute, SWIG_Callback18_t callbackaddNamespace, SWIG_Callback19_t callbackrelease, SWIG_Callback20_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackcreateDocument;
    SWIG_Callback1_t swig_callbackdestroyDocument;
    SWIG_Callback2_t swig_callbacksaveToFile;
    SWIG_Callback3_t swig_callbackgetNodesCount;
    SWIG_Callback4_t swig_callbackhasNode;
    SWIG_Callback5_t swig_callbacksetNodeText;
    SWIG_Callback6_t swig_callbackgetNodeText;
    SWIG_Callback7_t swig_callbackgetInnerXMLString;
    SWIG_Callback8_t swig_callbacksetInnerXMLString;
    SWIG_Callback9_t swig_callbackgetOuterXMLString;
    SWIG_Callback10_t swig_callbackremoveNode;
    SWIG_Callback11_t swig_callbackaddChild;
    SWIG_Callback12_t swig_callbackaddChildWithInnerText;
    SWIG_Callback13_t swig_callbackhasAttribute;
    SWIG_Callback14_t swig_callbackgetAttributeValue;
    SWIG_Callback15_t swig_callbacksetAttributeValue;
    SWIG_Callback16_t swig_callbackaddAttribute;
    SWIG_Callback17_t swig_callbackremoveAttribute;
    SWIG_Callback18_t swig_callbackaddNamespace;
    SWIG_Callback19_t swig_callbackrelease;
    SWIG_Callback20_t swig_callbackaddRef;
    void swig_init_callbacks();
};

class SwigDirector_HttpRequestProvider : public HttpRequestProvider, public Swig::Director {

public:
    SwigDirector_HttpRequestProvider();
    virtual int createRequest(std::string const &url, std::string const &method);
    virtual int createRequest(std::string const &url, std::string const &method, boost::intrusive_ptr<IUserCredentials > credentials);
    virtual void destroyRequest(int const &requestHandle);
    virtual bool getResponse(int const &requestHandle);
    virtual std::string getResponseBody(int const &requestHandle);
    virtual bool downloadResponse(int const &requestHandle, std::string const &filename);
    virtual void addRequestBody(int const &requestHandle, std::string const &body);
    virtual void addRequestHeader(int const &requestHandle, std::string const &headerName, std::string const &headerValue);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_HttpRequestProvider();

    typedef int (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *, UnmanagedString *);
    typedef int (SWIGSTDCALL* SWIG_Callback1_t)(UnmanagedString *, UnmanagedString *, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(int);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback3_t)(int);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback4_t)(int);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback5_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback7_t)(int, UnmanagedString *, UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback8_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback9_t)();
    void swig_connect_director(SWIG_Callback0_t callbackcreateRequest__SWIG_0, SWIG_Callback1_t callbackcreateRequest__SWIG_1, SWIG_Callback2_t callbackdestroyRequest, SWIG_Callback3_t callbackgetResponse, SWIG_Callback4_t callbackgetResponseBody, SWIG_Callback5_t callbackdownloadResponse, SWIG_Callback6_t callbackaddRequestBody, SWIG_Callback7_t callbackaddRequestHeader, SWIG_Callback8_t callbackrelease, SWIG_Callback9_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackcreateRequest__SWIG_0;
    SWIG_Callback1_t swig_callbackcreateRequest__SWIG_1;
    SWIG_Callback2_t swig_callbackdestroyRequest;
    SWIG_Callback3_t swig_callbackgetResponse;
    SWIG_Callback4_t swig_callbackgetResponseBody;
    SWIG_Callback5_t swig_callbackdownloadResponse;
    SWIG_Callback6_t swig_callbackaddRequestBody;
    SWIG_Callback7_t swig_callbackaddRequestHeader;
    SWIG_Callback8_t swig_callbackrelease;
    SWIG_Callback9_t swig_callbackaddRef;
    void swig_init_callbacks();
};

class SwigDirector_BitmapServerProvider : public BitmapServerProvider, public Swig::Director {

public:
    SwigDirector_BitmapServerProvider();
    virtual std::string loadIcon(std::string iconStyle);
    virtual std::string loadResource(std::string resourceName);
    virtual std::string loadBitmap(std::string path);
    virtual std::string forceRGB(std::string path);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_BitmapServerProvider();

    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback1_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback2_t)(UnmanagedString *);
    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback3_t)(UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback4_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback5_t)();
    void swig_connect_director(SWIG_Callback0_t callbackloadIcon, SWIG_Callback1_t callbackloadResource, SWIG_Callback2_t callbackloadBitmap, SWIG_Callback3_t callbackforceRGB, SWIG_Callback4_t callbackrelease, SWIG_Callback5_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackloadIcon;
    SWIG_Callback1_t swig_callbackloadResource;
    SWIG_Callback2_t swig_callbackloadBitmap;
    SWIG_Callback3_t swig_callbackforceRGB;
    SWIG_Callback4_t swig_callbackrelease;
    SWIG_Callback5_t swig_callbackaddRef;
    void swig_init_callbacks();
};

class SwigDirector_PYXNETChannelProvider : public PYXNETChannelProvider, public Swig::Director {

public:
    SwigDirector_PYXNETChannelProvider();
    virtual int createChannel(ProcRef const &processProcRef, std::string const &code);
    virtual int createChannelSwigPublic(ProcRef const &processProcRef, std::string const &code) {
      return PYXNETChannelProvider::createChannel(processProcRef,code);
    }
    virtual void removeChannel(int channelId);
    virtual void removeChannelSwigPublic(int channelId) {
      PYXNETChannelProvider::removeChannel(channelId);
    }
    virtual void requestKey(int channelId, std::string const &key);
    virtual void requestKeySwigPublic(int channelId, std::string const &key) {
      PYXNETChannelProvider::requestKey(channelId,key);
    }
    virtual void cancelRequestKey(int channelId, std::string const &key);
    virtual void cancelRequestKeySwigPublic(int channelId, std::string const &key) {
      PYXNETChannelProvider::cancelRequestKey(channelId,key);
    }
    virtual void addLocalProvider(int channelId, boost::intrusive_ptr<PYXNETChannelKeyProvider > provider);
    virtual void addLocalProviderSwigPublic(int channelId, boost::intrusive_ptr<PYXNETChannelKeyProvider > provider) {
      PYXNETChannelProvider::addLocalProvider(channelId,provider);
    }
    virtual void publishChannel(int channelId);
    virtual void publishChannelSwigPublic(int channelId) {
      PYXNETChannelProvider::publishChannel(channelId);
    }
    virtual void unpublishChannel(int channelId);
    virtual void unpublishChannelSwigPublic(int channelId) {
      PYXNETChannelProvider::unpublishChannel(channelId);
    }
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_PYXNETChannelProvider();

    typedef int (SWIGSTDCALL* SWIG_Callback0_t)(void *, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(int);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback3_t)(int, UnmanagedString *);
    typedef void (SWIGSTDCALL* SWIG_Callback4_t)(int, void *);
    typedef void (SWIGSTDCALL* SWIG_Callback5_t)(int);
    typedef void (SWIGSTDCALL* SWIG_Callback6_t)(int);
    typedef long (SWIGSTDCALL* SWIG_Callback7_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback8_t)();
    void swig_connect_director(SWIG_Callback0_t callbackcreateChannel, SWIG_Callback1_t callbackremoveChannel, SWIG_Callback2_t callbackrequestKey, SWIG_Callback3_t callbackcancelRequestKey, SWIG_Callback4_t callbackaddLocalProvider, SWIG_Callback5_t callbackpublishChannel, SWIG_Callback6_t callbackunpublishChannel, SWIG_Callback7_t callbackrelease, SWIG_Callback8_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackcreateChannel;
    SWIG_Callback1_t swig_callbackremoveChannel;
    SWIG_Callback2_t swig_callbackrequestKey;
    SWIG_Callback3_t swig_callbackcancelRequestKey;
    SWIG_Callback4_t swig_callbackaddLocalProvider;
    SWIG_Callback5_t swig_callbackpublishChannel;
    SWIG_Callback6_t swig_callbackunpublishChannel;
    SWIG_Callback7_t swig_callbackrelease;
    SWIG_Callback8_t swig_callbackaddRef;
    void swig_init_callbacks();
};

struct SwigDirector_IWorkbookView : public Excel::IWorkbookView, public Swig::Director {

public:
    SwigDirector_IWorkbookView();
    virtual ~SwigDirector_IWorkbookView();
    virtual bool IsEmpty() const;
    virtual std::size_t GetColumnCount() const;
    virtual void GetColumnName(std::size_t columnOffset, PYXValue &value) const;
    virtual bool GetHeadingRow(std::vector<PYXValue > &columns) const;
    virtual bool GetHeadingCell(std::size_t columnOffset, PYXValue &value) const;
    virtual std::size_t GetDataRowCount() const;
    virtual bool IsDataRowEmpty(std::size_t dataRowOffset) const;
    virtual bool GetDataRow(std::size_t dataRowOffset, std::vector<PYXValue > &columns) const;
    virtual bool GetDataCell(std::size_t dataRowOffset, std::size_t columnOffset, PYXValue &value) const;
    virtual long release() const;
    virtual long addRef() const;

    typedef unsigned int (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef unsigned long (SWIGSTDCALL* SWIG_Callback1_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(unsigned long, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback3_t)(void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback4_t)(unsigned long, void *);
    typedef unsigned long (SWIGSTDCALL* SWIG_Callback5_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback6_t)(unsigned long);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback7_t)(unsigned long, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback8_t)(unsigned long, unsigned long, void *);
    typedef long (SWIGSTDCALL* SWIG_Callback9_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback10_t)();
    void swig_connect_director(SWIG_Callback0_t callbackIsEmpty, SWIG_Callback1_t callbackGetColumnCount, SWIG_Callback2_t callbackGetColumnName, SWIG_Callback3_t callbackGetHeadingRow, SWIG_Callback4_t callbackGetHeadingCell, SWIG_Callback5_t callbackGetDataRowCount, SWIG_Callback6_t callbackIsDataRowEmpty, SWIG_Callback7_t callbackGetDataRow, SWIG_Callback8_t callbackGetDataCell, SWIG_Callback9_t callbackrelease, SWIG_Callback10_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackIsEmpty;
    SWIG_Callback1_t swig_callbackGetColumnCount;
    SWIG_Callback2_t swig_callbackGetColumnName;
    SWIG_Callback3_t swig_callbackGetHeadingRow;
    SWIG_Callback4_t swig_callbackGetHeadingCell;
    SWIG_Callback5_t swig_callbackGetDataRowCount;
    SWIG_Callback6_t swig_callbackIsDataRowEmpty;
    SWIG_Callback7_t swig_callbackGetDataRow;
    SWIG_Callback8_t swig_callbackGetDataCell;
    SWIG_Callback9_t swig_callbackrelease;
    SWIG_Callback10_t swig_callbackaddRef;
    void swig_init_callbacks();
};

struct SwigDirector_IWorkbookTable : public Excel::IWorkbookTable, public Swig::Director {

public:
    SwigDirector_IWorkbookTable();
    virtual ~SwigDirector_IWorkbookTable();
    virtual bool IsEmpty() const;
    virtual Excel::IWorkbookView::Pointer CreateView(std::size_t firstColumnOffset, std::size_t lastColumnOffset, std::size_t headingRowOffset, std::size_t firstDataRowOffset, std::size_t lastDataRowOffset) const;
    virtual Excel::IWorkbookView::Pointer CreateDefaultView() const;
    virtual std::size_t GetColumnCount() const;
    virtual std::size_t GetRowCount() const;
    virtual bool GetCell(std::size_t rowOffset, std::size_t columnOffset, PYXValue &value) const;
    virtual bool IsRowEmpty(std::size_t rowOffset) const;
    virtual long release() const;
    virtual long addRef() const;

    typedef unsigned int (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)(unsigned long, unsigned long, unsigned long, unsigned long, unsigned long);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)();
    typedef unsigned long (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef unsigned long (SWIGSTDCALL* SWIG_Callback4_t)();
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback5_t)(unsigned long, unsigned long, void *);
    typedef unsigned int (SWIGSTDCALL* SWIG_Callback6_t)(unsigned long);
    typedef long (SWIGSTDCALL* SWIG_Callback7_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback8_t)();
    void swig_connect_director(SWIG_Callback0_t callbackIsEmpty, SWIG_Callback1_t callbackCreateView, SWIG_Callback2_t callbackCreateDefaultView, SWIG_Callback3_t callbackGetColumnCount, SWIG_Callback4_t callbackGetRowCount, SWIG_Callback5_t callbackGetCell, SWIG_Callback6_t callbackIsRowEmpty, SWIG_Callback7_t callbackrelease, SWIG_Callback8_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackIsEmpty;
    SWIG_Callback1_t swig_callbackCreateView;
    SWIG_Callback2_t swig_callbackCreateDefaultView;
    SWIG_Callback3_t swig_callbackGetColumnCount;
    SWIG_Callback4_t swig_callbackGetRowCount;
    SWIG_Callback5_t swig_callbackGetCell;
    SWIG_Callback6_t swig_callbackIsRowEmpty;
    SWIG_Callback7_t swig_callbackrelease;
    SWIG_Callback8_t swig_callbackaddRef;
    void swig_init_callbacks();
};

struct SwigDirector_IWorkbook : public Excel::IWorkbook, public Swig::Director {

public:
    SwigDirector_IWorkbook();
    virtual ~SwigDirector_IWorkbook();
    virtual std::string GetName() const;
    virtual void GetTableNames(std::vector<std::string > &tableNames) const;
    virtual Excel::IWorkbookTable::Pointer CreateTable(std::string const &tableName) const;
    virtual long addRef() const;
    virtual long release() const;

    typedef UnmanagedString * (SWIGSTDCALL* SWIG_Callback0_t)();
    typedef void (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback2_t)(UnmanagedString *);
    typedef long (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback4_t)();
    void swig_connect_director(SWIG_Callback0_t callbackGetName, SWIG_Callback1_t callbackGetTableNames, SWIG_Callback2_t callbackCreateTable, SWIG_Callback3_t callbackaddRef, SWIG_Callback4_t callbackrelease);

private:
    SWIG_Callback0_t swig_callbackGetName;
    SWIG_Callback1_t swig_callbackGetTableNames;
    SWIG_Callback2_t swig_callbackCreateTable;
    SWIG_Callback3_t swig_callbackaddRef;
    SWIG_Callback4_t swig_callbackrelease;
    void swig_init_callbacks();
};

struct SwigDirector_IExcel : public Excel::IExcel, public Swig::Director {

public:
    SwigDirector_IExcel();
    virtual ~SwigDirector_IExcel();
    virtual Excel::IWorkbook::Pointer CreateWorkbook(std::string const &filename) const;

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)(UnmanagedString *);
    void swig_connect_director(SWIG_Callback0_t callbackCreateWorkbook);

private:
    SWIG_Callback0_t swig_callbackCreateWorkbook;
    void swig_init_callbacks();
};


#endif
