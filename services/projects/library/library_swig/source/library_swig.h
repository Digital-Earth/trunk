/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_library_swig_WRAP_H_
#define SWIG_library_swig_WRAP_H_

class SwigDirector_LibraryProcessResolver : public LibraryProcessResolver, public Swig::Director {

public:
    SwigDirector_LibraryProcessResolver();
    virtual boost::intrusive_ptr<IProcess > resolve(ProcRef const &procRef);
    virtual boost::intrusive_ptr<IProcess > notifyResolve(boost::intrusive_ptr<IProcess > spProcess);
    virtual void notifyFinalize(boost::intrusive_ptr<IProcess > spProc);
    virtual long release() const;
    virtual long addRef() const;
    virtual ~SwigDirector_LibraryProcessResolver();

    typedef void * (SWIGSTDCALL* SWIG_Callback0_t)(void *);
    typedef void * (SWIGSTDCALL* SWIG_Callback1_t)(void *);
    typedef void (SWIGSTDCALL* SWIG_Callback2_t)(void *);
    typedef long (SWIGSTDCALL* SWIG_Callback3_t)();
    typedef long (SWIGSTDCALL* SWIG_Callback4_t)();
    void swig_connect_director(SWIG_Callback0_t callbackresolve, SWIG_Callback1_t callbacknotifyResolve, SWIG_Callback2_t callbacknotifyFinalize, SWIG_Callback3_t callbackrelease, SWIG_Callback4_t callbackaddRef);

private:
    SWIG_Callback0_t swig_callbackresolve;
    SWIG_Callback1_t swig_callbacknotifyResolve;
    SWIG_Callback2_t swig_callbacknotifyFinalize;
    SWIG_Callback3_t swig_callbackrelease;
    SWIG_Callback4_t swig_callbackaddRef;
    void swig_init_callbacks();
};


#endif
