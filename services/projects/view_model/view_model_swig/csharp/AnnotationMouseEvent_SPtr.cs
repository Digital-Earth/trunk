/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class AnnotationMouseEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public AnnotationMouseEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(AnnotationMouseEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~AnnotationMouseEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_AnnotationMouseEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public AnnotationMouseEvent_SPtr() : this(view_model_swigPINVOKE.new_AnnotationMouseEvent_SPtr__SWIG_0(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public AnnotationMouseEvent_SPtr(AnnotationMouseEvent p, bool add_ref) : this(view_model_swigPINVOKE.new_AnnotationMouseEvent_SPtr__SWIG_1(AnnotationMouseEvent.getCPtr(p), add_ref), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public AnnotationMouseEvent_SPtr(AnnotationMouseEvent p) : this(view_model_swigPINVOKE.new_AnnotationMouseEvent_SPtr__SWIG_2(AnnotationMouseEvent.getCPtr(p)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public AnnotationMouseEvent_SPtr(AnnotationMouseEvent_SPtr rhs) : this(view_model_swigPINVOKE.new_AnnotationMouseEvent_SPtr__SWIG_3(AnnotationMouseEvent_SPtr.getCPtr(rhs)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(AnnotationMouseEvent rhs) {
    view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_reset__SWIG_1(swigCPtr, AnnotationMouseEvent.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public AnnotationMouseEvent get() {
    IntPtr cPtr = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_get(swigCPtr);
    AnnotationMouseEvent ret = (cPtr == IntPtr.Zero) ? null : new AnnotationMouseEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public AnnotationMouseEvent __ref__() {
    AnnotationMouseEvent ret = new AnnotationMouseEvent(view_model_swigPINVOKE.AnnotationMouseEvent_SPtr___ref__(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public AnnotationMouseEvent __deref__() {
    IntPtr cPtr = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr___deref__(swigCPtr);
    AnnotationMouseEvent ret = (cPtr == IntPtr.Zero) ? null : new AnnotationMouseEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(AnnotationMouseEvent_SPtr rhs) {
    view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_swap(swigCPtr, AnnotationMouseEvent_SPtr.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isNotNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public AnnotationMouseEvent_SPtr create(UIMouseEvent_SPtr mouseEvent, IAnnotation_SPtr annotation, IViewModel_SPtr view) {
    AnnotationMouseEvent_SPtr ret = new AnnotationMouseEvent_SPtr(view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_create(swigCPtr, UIMouseEvent_SPtr.getCPtr(mouseEvent), IAnnotation_SPtr.getCPtr(annotation), IViewModel_SPtr.getCPtr(view)), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IAnnotation_SPtr getAnnotation() {
    IAnnotation_SPtr ret = new IAnnotation_SPtr(view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_getAnnotation(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IViewModel_SPtr getViewModel() {
    IViewModel_SPtr ret = new IViewModel_SPtr(view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_getViewModel(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public AnnotationMouseEvent dynamic_cast(NotifierEvent pSource) {
    IntPtr cPtr = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_dynamic_cast(swigCPtr, NotifierEvent.getCPtr(pSource));
    AnnotationMouseEvent ret = (cPtr == IntPtr.Zero) ? null : new AnnotationMouseEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getMouseX() {
    double ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_getMouseX(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getMouseY() {
    double ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_getMouseY(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getWheelDelta() {
    int ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_getWheelDelta(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isLeftButtonDown() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isLeftButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isRightButtonDown() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isRightButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isMiddleButtonDown() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isMiddleButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double mouseDistanceFrom(double X, double Y) {
    double ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_mouseDistanceFrom(swigCPtr, X, Y);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isInsideRect(double Xmin, double Xmax, double Ymin, double Ymax) {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isInsideRect(swigCPtr, Xmin, Xmax, Ymin, Ymax);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isConsumed() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setConsumed() {
    view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_setConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isAltKeyPressed() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isAltKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isCtrlKeyPressed() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isCtrlKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isShiftKeyPressed() {
    bool ret = view_model_swigPINVOKE.AnnotationMouseEvent_SPtr_isShiftKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
