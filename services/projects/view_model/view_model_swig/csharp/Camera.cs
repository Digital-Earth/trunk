/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Camera : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public Camera(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(Camera obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Camera() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_Camera(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public Camera() : this(view_model_swigPINVOKE.new_Camera(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public string toString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.Camera_toString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getPerspectiveString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.Camera_getPerspectiveString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getEyeString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.Camera_getEyeString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getCenterString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.Camera_getCenterString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string getUpString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.Camera_getUpString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public double getFovy() {
    double ret = view_model_swigPINVOKE.Camera_getFovy(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getAspect() {
    double ret = view_model_swigPINVOKE.Camera_getAspect(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getNearz() {
    double ret = view_model_swigPINVOKE.Camera_getNearz(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getFarz() {
    double ret = view_model_swigPINVOKE.Camera_getFarz(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getHeading() {
    double ret = view_model_swigPINVOKE.Camera_getHeading(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setHeading(double hdg) {
    view_model_swigPINVOKE.Camera_setHeading(swigCPtr, hdg);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setFovy(double fovy) {
    view_model_swigPINVOKE.Camera_setFovy(swigCPtr, fovy);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setAspect(double aspect) {
    view_model_swigPINVOKE.Camera_setAspect(swigCPtr, aspect);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setNearz(double nearz) {
    view_model_swigPINVOKE.Camera_setNearz(swigCPtr, nearz);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setFarz(double farz) {
    view_model_swigPINVOKE.Camera_setFarz(swigCPtr, farz);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getMode() {
    int ret = view_model_swigPINVOKE.Camera_getMode(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setMode(int nMode) {
    view_model_swigPINVOKE.Camera_setMode(swigCPtr, nMode);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isModeOrbital() {
    bool ret = view_model_swigPINVOKE.Camera_isModeOrbital(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getOrbitalAltitude() {
    double ret = view_model_swigPINVOKE.Camera_getOrbitalAltitude(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getOribitalEyeAltitiude() {
    double ret = view_model_swigPINVOKE.Camera_getOribitalEyeAltitiude(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getOribitalUnitAltitude() {
    double ret = view_model_swigPINVOKE.Camera_getOribitalUnitAltitude(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getOrbitalTilt() {
    double ret = view_model_swigPINVOKE.Camera_getOrbitalTilt(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getOrbitalRange() {
    double ret = view_model_swigPINVOKE.Camera_getOrbitalRange(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXIcosIndex getOrbitalTargetIndex(int nResolution) {
    PYXIcosIndex ret = new PYXIcosIndex(view_model_swigPINVOKE.Camera_getOrbitalTargetIndex(swigCPtr, nResolution), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CoordLatLon getOrbitalTargetLatLon() {
    CoordLatLon ret = new CoordLatLon(view_model_swigPINVOKE.Camera_getOrbitalTargetLatLon(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXIcosIndex getOrbitalEyeIndex(int nResolution) {
    PYXIcosIndex ret = new PYXIcosIndex(view_model_swigPINVOKE.Camera_getOrbitalEyeIndex(swigCPtr, nResolution), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public CoordLatLon getOrbitalEyeLatLon() {
    CoordLatLon ret = new CoordLatLon(view_model_swigPINVOKE.Camera_getOrbitalEyeLatLon(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOrbitalAltitude(double altitude) {
    view_model_swigPINVOKE.Camera_setOrbitalAltitude(swigCPtr, altitude);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void adjustOrbitalAltitudeAndRange(double newAlt, double minRange) {
    view_model_swigPINVOKE.Camera_adjustOrbitalAltitudeAndRange(swigCPtr, newAlt, minRange);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setOrbitalTilt(double tilt) {
    view_model_swigPINVOKE.Camera_setOrbitalTilt(swigCPtr, tilt);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setOrbitalRange(double range) {
    view_model_swigPINVOKE.Camera_setOrbitalRange(swigCPtr, range);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXCoord3DDouble getCenter() {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.Camera_getCenter(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble getEye() {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.Camera_getEye(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble getUp() {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.Camera_getUp(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble getLook() {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.Camera_getLook(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setCenter(PYXCoord3DDouble center) {
    view_model_swigPINVOKE.Camera_setCenter(swigCPtr, PYXCoord3DDouble.getCPtr(center));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static readonly int knModeOrbital = view_model_swigPINVOKE.Camera_knModeOrbital_get();

}
