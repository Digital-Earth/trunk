/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class GoToPipelineCommand_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public GoToPipelineCommand_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(GoToPipelineCommand_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~GoToPipelineCommand_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_GoToPipelineCommand_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public GoToPipelineCommand_SPtr() : this(view_model_swigPINVOKE.new_GoToPipelineCommand_SPtr__SWIG_0(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public GoToPipelineCommand_SPtr(GoToPipelineCommand p, bool add_ref) : this(view_model_swigPINVOKE.new_GoToPipelineCommand_SPtr__SWIG_1(GoToPipelineCommand.getCPtr(p), add_ref), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public GoToPipelineCommand_SPtr(GoToPipelineCommand p) : this(view_model_swigPINVOKE.new_GoToPipelineCommand_SPtr__SWIG_2(GoToPipelineCommand.getCPtr(p)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public GoToPipelineCommand_SPtr(GoToPipelineCommand_SPtr rhs) : this(view_model_swigPINVOKE.new_GoToPipelineCommand_SPtr__SWIG_3(GoToPipelineCommand_SPtr.getCPtr(rhs)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_reset__SWIG_0(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(GoToPipelineCommand rhs) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_reset__SWIG_1(swigCPtr, GoToPipelineCommand.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public GoToPipelineCommand get() {
    IntPtr cPtr = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_get(swigCPtr);
    GoToPipelineCommand ret = (cPtr == IntPtr.Zero) ? null : new GoToPipelineCommand(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GoToPipelineCommand __ref__() {
    GoToPipelineCommand ret = new GoToPipelineCommand(view_model_swigPINVOKE.GoToPipelineCommand_SPtr___ref__(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GoToPipelineCommand __deref__() {
    IntPtr cPtr = view_model_swigPINVOKE.GoToPipelineCommand_SPtr___deref__(swigCPtr);
    GoToPipelineCommand ret = (cPtr == IntPtr.Zero) ? null : new GoToPipelineCommand(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(GoToPipelineCommand_SPtr rhs) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_swap(swigCPtr, GoToPipelineCommand_SPtr.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_isNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_isNotNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public GoToPipelineCommand_SPtr create(IProcess_SPtr spProc, int nViewID) {
    GoToPipelineCommand_SPtr ret = new GoToPipelineCommand_SPtr(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_create(swigCPtr, IProcess_SPtr.getCPtr(spProc), nViewID), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool execute() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_execute(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool undo() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_undo(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getName() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getName(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public bool getRecordable() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getRecordable(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getUndoable() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getUndoable(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getEnabled() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getEnabled(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr getGeometry(IProcess_SPtr spProc) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getGeometry(swigCPtr, IProcess_SPtr.getCPtr(spProc)), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int release() {
    int ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_release(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int addRef() {
    int ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_addRef(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getLongName() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getLongName(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public string drag() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_drag(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public bool redo() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_redo(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getCategory() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getCategory(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setCategory(string strCategory) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_setCategory(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(strCategory));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getPriority() {
    int ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getPriority(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setPriority(int priority) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_setPriority(swigCPtr, priority);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector_Command getSubordinates() {
    Vector_Command ret = new Vector_Command(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getSubordinates(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addSubordinate(Command_SPtr spCommand) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_addSubordinate(swigCPtr, Command_SPtr.getCPtr(spCommand));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getChecked() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getChecked(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Command.CommandType getType() {
    Command.CommandType ret = (Command.CommandType)view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getType(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getToolTip() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getToolTip(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public bool hasSubordinates() {
    bool ret = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_hasSubordinates(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCommandException getLastException() {
    IntPtr cPtr = view_model_swigPINVOKE.GoToPipelineCommand_SPtr_getLastException(swigCPtr);
    PYXCommandException ret = (cPtr == IntPtr.Zero) ? null : new PYXCommandException(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setLastException(PYXCommandException pLastException) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_setLastException(swigCPtr, PYXCommandException.getCPtr(pLastException));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public Notifier Executed() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.GoToPipelineCommand_SPtr_Executed(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void notifyCommandExecuted(ProcRef procRef) {
    view_model_swigPINVOKE.GoToPipelineCommand_SPtr_notifyCommandExecuted(swigCPtr, ProcRef.getCPtr(procRef));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

}
