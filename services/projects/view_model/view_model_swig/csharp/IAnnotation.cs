/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class IAnnotation : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public IAnnotation(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(IAnnotation obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~IAnnotation() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_IAnnotation(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public virtual ProcRef getProcRef() {
    ProcRef ret = new ProcRef(view_model_swigPINVOKE.IAnnotation_getProcRef(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IProcess_SPtr getProcess() {
    IProcess_SPtr ret = new IProcess_SPtr(view_model_swigPINVOKE.IAnnotation_getProcess(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual string getFeatureID() {
  // Generated from typemap(csout) const string &
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.IAnnotation_getFeatureID(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public virtual IViewModel_SPtr getViewModel() {
    IViewModel_SPtr ret = new IViewModel_SPtr(view_model_swigPINVOKE.IAnnotation_getViewModel(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual IFeature_SPtr getFeature() {
    IFeature_SPtr ret = new IFeature_SPtr(view_model_swigPINVOKE.IAnnotation_getFeature(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
