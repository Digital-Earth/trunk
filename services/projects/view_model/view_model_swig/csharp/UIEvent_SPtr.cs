/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class UIEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public UIEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(UIEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~UIEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_UIEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public UIEvent_SPtr() : this(view_model_swigPINVOKE.new_UIEvent_SPtr__SWIG_0(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIEvent_SPtr(UIEvent p, bool add_ref) : this(view_model_swigPINVOKE.new_UIEvent_SPtr__SWIG_1(UIEvent.getCPtr(p), add_ref), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIEvent_SPtr(UIEvent p) : this(view_model_swigPINVOKE.new_UIEvent_SPtr__SWIG_2(UIEvent.getCPtr(p)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIEvent_SPtr(UIEvent_SPtr rhs) : this(view_model_swigPINVOKE.new_UIEvent_SPtr__SWIG_3(UIEvent_SPtr.getCPtr(rhs)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    view_model_swigPINVOKE.UIEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(UIEvent rhs) {
    view_model_swigPINVOKE.UIEvent_SPtr_reset__SWIG_1(swigCPtr, UIEvent.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIEvent get() {
    IntPtr cPtr = view_model_swigPINVOKE.UIEvent_SPtr_get(swigCPtr);
    UIEvent ret = (cPtr == IntPtr.Zero) ? null : new UIEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIEvent __ref__() {
    UIEvent ret = new UIEvent(view_model_swigPINVOKE.UIEvent_SPtr___ref__(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIEvent __deref__() {
    IntPtr cPtr = view_model_swigPINVOKE.UIEvent_SPtr___deref__(swigCPtr);
    UIEvent ret = (cPtr == IntPtr.Zero) ? null : new UIEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(UIEvent_SPtr rhs) {
    view_model_swigPINVOKE.UIEvent_SPtr_swap(swigCPtr, UIEvent_SPtr.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isNotNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIEvent_SPtr create(bool altKey, bool shiftKey, bool ctrlKey) {
    UIEvent_SPtr ret = new UIEvent_SPtr(view_model_swigPINVOKE.UIEvent_SPtr_create(swigCPtr, altKey, shiftKey, ctrlKey), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isConsumed() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setConsumed() {
    view_model_swigPINVOKE.UIEvent_SPtr_setConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isAltKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isAltKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isCtrlKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isCtrlKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isShiftKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIEvent_SPtr_isShiftKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
