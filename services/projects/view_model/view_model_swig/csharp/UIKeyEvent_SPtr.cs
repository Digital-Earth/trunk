/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class UIKeyEvent_SPtr : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public UIKeyEvent_SPtr(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(UIKeyEvent_SPtr obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~UIKeyEvent_SPtr() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_UIKeyEvent_SPtr(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public UIKeyEvent_SPtr() : this(view_model_swigPINVOKE.new_UIKeyEvent_SPtr__SWIG_0(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIKeyEvent_SPtr(UIKeyEvent p, bool add_ref) : this(view_model_swigPINVOKE.new_UIKeyEvent_SPtr__SWIG_1(UIKeyEvent.getCPtr(p), add_ref), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIKeyEvent_SPtr(UIKeyEvent p) : this(view_model_swigPINVOKE.new_UIKeyEvent_SPtr__SWIG_2(UIKeyEvent.getCPtr(p)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIKeyEvent_SPtr(UIKeyEvent_SPtr rhs) : this(view_model_swigPINVOKE.new_UIKeyEvent_SPtr__SWIG_3(UIKeyEvent_SPtr.getCPtr(rhs)), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset() {
    view_model_swigPINVOKE.UIKeyEvent_SPtr_reset__SWIG_0(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reset(UIKeyEvent rhs) {
    view_model_swigPINVOKE.UIKeyEvent_SPtr_reset__SWIG_1(swigCPtr, UIKeyEvent.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public UIKeyEvent get() {
    IntPtr cPtr = view_model_swigPINVOKE.UIKeyEvent_SPtr_get(swigCPtr);
    UIKeyEvent ret = (cPtr == IntPtr.Zero) ? null : new UIKeyEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIKeyEvent __ref__() {
    UIKeyEvent ret = new UIKeyEvent(view_model_swigPINVOKE.UIKeyEvent_SPtr___ref__(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIKeyEvent __deref__() {
    IntPtr cPtr = view_model_swigPINVOKE.UIKeyEvent_SPtr___deref__(swigCPtr);
    UIKeyEvent ret = (cPtr == IntPtr.Zero) ? null : new UIKeyEvent(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void swap(UIKeyEvent_SPtr rhs) {
    view_model_swigPINVOKE.UIKeyEvent_SPtr_swap(swigCPtr, UIKeyEvent_SPtr.getCPtr(rhs));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isNull() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isNotNull() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isNotNull(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public UIKeyEvent_SPtr create(char keyChar, int keyCode, bool altKey, bool shiftKey, bool ctrlKey) {
    UIKeyEvent_SPtr ret = new UIKeyEvent_SPtr(view_model_swigPINVOKE.UIKeyEvent_SPtr_create(swigCPtr, keyChar, keyCode, altKey, shiftKey, ctrlKey), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public char getKeyChar() {
    char ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_getKeyChar(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getKeyCode() {
    int ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_getKeyCode(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isKeyChar(char chr) {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isKeyChar(swigCPtr, chr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isConsumed() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setConsumed() {
    view_model_swigPINVOKE.UIKeyEvent_SPtr_setConsumed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool isAltKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isAltKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isCtrlKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isCtrlKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isShiftKeyPressed() {
    bool ret = view_model_swigPINVOKE.UIKeyEvent_SPtr_isShiftKeyPressed(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
