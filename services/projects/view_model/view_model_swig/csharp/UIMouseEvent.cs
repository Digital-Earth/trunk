/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class UIMouseEvent : UIEvent {
  private HandleRef swigCPtr;

  public UIMouseEvent(IntPtr cPtr, bool cMemoryOwn) : base(view_model_swigPINVOKE.UIMouseEventUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(UIMouseEvent obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~UIMouseEvent() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_UIMouseEvent(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public UIMouseEvent(double x, double y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) : this(view_model_swigPINVOKE.new_UIMouseEvent(x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static UIMouseEvent_SPtr create(double x, double y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    UIMouseEvent_SPtr ret = new UIMouseEvent_SPtr(view_model_swigPINVOKE.UIMouseEvent_create(x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getMouseX() {
    double ret = view_model_swigPINVOKE.UIMouseEvent_getMouseX(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double getMouseY() {
    double ret = view_model_swigPINVOKE.UIMouseEvent_getMouseY(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getWheelDelta() {
    int ret = view_model_swigPINVOKE.UIMouseEvent_getWheelDelta(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isLeftButtonDown() {
    bool ret = view_model_swigPINVOKE.UIMouseEvent_isLeftButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isRightButtonDown() {
    bool ret = view_model_swigPINVOKE.UIMouseEvent_isRightButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isMiddleButtonDown() {
    bool ret = view_model_swigPINVOKE.UIMouseEvent_isMiddleButtonDown(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double mouseDistanceFrom(double X, double Y) {
    double ret = view_model_swigPINVOKE.UIMouseEvent_mouseDistanceFrom(swigCPtr, X, Y);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool isInsideRect(double Xmin, double Xmax, double Ymin, double Ymax) {
    bool ret = view_model_swigPINVOKE.UIMouseEvent_isInsideRect(swigCPtr, Xmin, Xmax, Ymin, Ymax);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
