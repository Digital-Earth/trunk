/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class View : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  public View(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  public static HandleRef getCPtr(View obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~View() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if(swigCPtr.Handle != IntPtr.Zero && swigCMemOwn) {
        swigCMemOwn = false;
        view_model_swigPINVOKE.delete_View(swigCPtr);
      }
      swigCPtr = new HandleRef(null, IntPtr.Zero);
      GC.SuppressFinalize(this);
    }
  }

  public static void test() {
    view_model_swigPINVOKE.View_test();
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool isView(int nID) {
    bool ret = view_model_swigPINVOKE.View_isView(nID);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static View getView(int nID) {
    IntPtr cPtr = view_model_swigPINVOKE.View_getView(nID);
    View ret = (cPtr == IntPtr.Zero) ? null : new View(cPtr, false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getViewCount() {
    int ret = view_model_swigPINVOKE.View_getViewCount();
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void closeAllResources() {
    view_model_swigPINVOKE.View_closeAllResources();
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static double calcEyeAltitude(Camera cam) {
    double ret = view_model_swigPINVOKE.View_calcEyeAltitude__SWIG_0(Camera.getCPtr(cam));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public View() : this(view_model_swigPINVOKE.new_View__SWIG_0(), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public View(ViewTheme theme) : this(view_model_swigPINVOKE.new_View__SWIG_1((int)theme), true) {
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void dispose() {
    view_model_swigPINVOKE.View_dispose(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getID() {
    int ret = view_model_swigPINVOKE.View_getID(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Camera getCamera() {
    Camera ret = new Camera(view_model_swigPINVOKE.View_getCamera(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getViewportWidth() {
    int ret = view_model_swigPINVOKE.View_getViewportWidth(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getViewportHeight() {
    int ret = view_model_swigPINVOKE.View_getViewportHeight(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double calcEyeAltitude() {
    double ret = view_model_swigPINVOKE.View_calcEyeAltitude__SWIG_1(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IProcess_SPtr getViewPointProcess() {
    IProcess_SPtr ret = new IProcess_SPtr(view_model_swigPINVOKE.View_getViewPointProcess(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setViewPointProcess(IProcess_SPtr spViewPointProcess) {
    view_model_swigPINVOKE.View_setViewPointProcess(swigCPtr, IProcess_SPtr.getCPtr(spViewPointProcess));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getViewTileResolution() {
    int ret = view_model_swigPINVOKE.View_getViewTileResolution(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getViewDataResolution() {
    int ret = view_model_swigPINVOKE.View_getViewDataResolution(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void display() {
    view_model_swigPINVOKE.View_display(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reshape(int nWidth, int nHeight) {
    view_model_swigPINVOKE.View_reshape(swigCPtr, nWidth, nHeight);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void releaseOpenGLResources() {
    view_model_swigPINVOKE.View_releaseOpenGLResources(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToCamera(Camera cam) {
    view_model_swigPINVOKE.View_goToCamera__SWIG_0(swigCPtr, Camera.getCPtr(cam));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToCamera(Camera cam, int timeInMiliseconds) {
    view_model_swigPINVOKE.View_goToCamera__SWIG_1(swigCPtr, Camera.getCPtr(cam), timeInMiliseconds);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToIndex(PYXIcosIndex index) {
    view_model_swigPINVOKE.View_goToIndex__SWIG_0(swigCPtr, PYXIcosIndex.getCPtr(index));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToIndex(PYXIcosIndex index, int timeInMiliseconds) {
    view_model_swigPINVOKE.View_goToIndex__SWIG_1(swigCPtr, PYXIcosIndex.getCPtr(index), timeInMiliseconds);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToGeometry(PYXGeometry_SPtr geometry) {
    view_model_swigPINVOKE.View_goToGeometry__SWIG_0(swigCPtr, PYXGeometry_SPtr.getCPtr(geometry));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToGeometry(PYXGeometry_SPtr geometry, int timeInMiliseconds) {
    view_model_swigPINVOKE.View_goToGeometry__SWIG_1(swigCPtr, PYXGeometry_SPtr.getCPtr(geometry), timeInMiliseconds);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToFeature(IFeature_SPtr feature) {
    view_model_swigPINVOKE.View_goToFeature__SWIG_0(swigCPtr, IFeature_SPtr.getCPtr(feature));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToFeature(IFeature_SPtr feature, int timeInMiliseconds) {
    view_model_swigPINVOKE.View_goToFeature__SWIG_1(swigCPtr, IFeature_SPtr.getCPtr(feature), timeInMiliseconds);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToLatlon(CoordLatLon latlon) {
    view_model_swigPINVOKE.View_goToLatlon__SWIG_0(swigCPtr, CoordLatLon.getCPtr(latlon));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void goToLatlon(CoordLatLon latlon, int timeInMiliseconds) {
    view_model_swigPINVOKE.View_goToLatlon__SWIG_1(swigCPtr, CoordLatLon.getCPtr(latlon), timeInMiliseconds);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void startTrip(FeatureIterator_SPtr features) {
    view_model_swigPINVOKE.View_startTrip(swigCPtr, FeatureIterator_SPtr.getCPtr(features));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getMouseX() {
    int ret = view_model_swigPINVOKE.View_getMouseX(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getMouseY() {
    int ret = view_model_swigPINVOKE.View_getMouseY(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble getPointerLocation() {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.View_getPointerLocation(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXIcosIndex getPointerIndex(int nRes) {
    PYXIcosIndex ret = new PYXIcosIndex(view_model_swigPINVOKE.View_getPointerIndex(swigCPtr, nRes), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXIcosIndex getIndexFromScreen(int x, int y) {
    PYXIcosIndex ret = new PYXIcosIndex(view_model_swigPINVOKE.View_getIndexFromScreen(swigCPtr, x, y), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord3DDouble projectFromScreenSpace(int x, int y) {
    PYXCoord3DDouble ret = new PYXCoord3DDouble(view_model_swigPINVOKE.View_projectFromScreenSpace(swigCPtr, x, y), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXCoord2DDouble projectToScreenSpace(PYXCoord3DDouble xyz) {
    PYXCoord2DDouble ret = new PYXCoord2DDouble(view_model_swigPINVOKE.View_projectToScreenSpace(swigCPtr, PYXCoord3DDouble.getCPtr(xyz)), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr getPOI() {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.View_getPOI(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setPOI(PYXGeometry_SPtr poiGeometry) {
    view_model_swigPINVOKE.View_setPOI(swigCPtr, PYXGeometry_SPtr.getCPtr(poiGeometry));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXGeometry_SPtr calculateWatershed(PYXIcosIndex location) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.View_calculateWatershed(swigCPtr, PYXIcosIndex.getCPtr(location)), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr calculateWatershedFlow(PYXIcosIndex location) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.View_calculateWatershedFlow(swigCPtr, PYXIcosIndex.getCPtr(location)), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void getVisibleTiles(Vector_Index vecCells) {
    view_model_swigPINVOKE.View_getVisibleTiles__SWIG_0(swigCPtr, Vector_Index.getCPtr(vecCells));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getVisibleTiles(PYXMultiCell cellCollection) {
    view_model_swigPINVOKE.View_getVisibleTiles__SWIG_1(swigCPtr, PYXMultiCell.getCPtr(cellCollection));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void getVisibleTiles(PYXTileCollection tileCollection) {
    view_model_swigPINVOKE.View_getVisibleTiles__SWIG_2(swigCPtr, PYXTileCollection.getCPtr(tileCollection));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public PYXGeometry_SPtr getScreenGeometry(int borderOffsetInPixels) {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.View_getScreenGeometry__SWIG_0(swigCPtr, borderOffsetInPixels), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public PYXGeometry_SPtr getScreenGeometry() {
    PYXGeometry_SPtr ret = new PYXGeometry_SPtr(view_model_swigPINVOKE.View_getScreenGeometry__SWIG_1(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool getOptShowAtmosphere() {
    bool ret = view_model_swigPINVOKE.View_getOptShowAtmosphere(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOptShowAtmosphere(bool b) {
    view_model_swigPINVOKE.View_setOptShowAtmosphere(swigCPtr, b);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getOptShowDiagnostic() {
    bool ret = view_model_swigPINVOKE.View_getOptShowDiagnostic(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOptShowDiagnostic(bool b) {
    view_model_swigPINVOKE.View_setOptShowDiagnostic(swigCPtr, b);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getOptShowStatus() {
    bool ret = view_model_swigPINVOKE.View_getOptShowStatus(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOptShowStatus(bool b) {
    view_model_swigPINVOKE.View_setOptShowStatus(swigCPtr, b);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getOptShowWorldAxes() {
    bool ret = view_model_swigPINVOKE.View_getOptShowWorldAxes(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOptShowWorldAxes(bool b) {
    view_model_swigPINVOKE.View_setOptShowWorldAxes(swigCPtr, b);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool getOptLockGrid() {
    bool ret = view_model_swigPINVOKE.View_getOptLockGrid(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void setOptLockGrid(bool b) {
    view_model_swigPINVOKE.View_setOptLockGrid(swigCPtr, b);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static bool lodEnabled(int bSet) {
    bool ret = view_model_swigPINVOKE.View_lodEnabled__SWIG_0(bSet);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static bool lodEnabled() {
    bool ret = view_model_swigPINVOKE.View_lodEnabled__SWIG_1();
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getEndMoveNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getEndMoveNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getPointerNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getPointerNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getStreamingNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getStreamingNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getEyeAltNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getEyeAltNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getResolutionNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getResolutionNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getErrorNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getErrorNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getAnnotationClickNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getAnnotationClickNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getAnnotationDoubleClickNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getAnnotationDoubleClickNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getAnnotationMouseMoveNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getAnnotationMouseMoveNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getAnnotationMouseEnterNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getAnnotationMouseEnterNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getAnnotationMouseLeaveNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getAnnotationMouseLeaveNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public Notifier getPOIChangeNotifier() {
    Notifier ret = new Notifier(view_model_swigPINVOKE.View_getPOIChangeNotifier(swigCPtr), false);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string getErrorString() {
  // Generated from %typemap(csout) string
  string ret = view_model_swigPINVOKE.UnmanagedString.Consume(view_model_swigPINVOKE.View_getErrorString(swigCPtr));
  
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  return ret;
}

  public void setPointerIndex(string strPointer) {
    view_model_swigPINVOKE.View_setPointerIndex(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(strPointer));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setStreamingProgress(string category, int progress) {
    view_model_swigPINVOKE.View_setStreamingProgress(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(category), progress);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setEyeAlt(string strEyeAlt) {
    view_model_swigPINVOKE.View_setEyeAlt(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(strEyeAlt));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void setResolution(int nRes) {
    view_model_swigPINVOKE.View_setResolution(swigCPtr, nRes);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void forceNotification() {
    view_model_swigPINVOKE.View_forceNotification(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public int getStreamingProgress() {
    int ret = view_model_swigPINVOKE.View_getStreamingProgress__SWIG_0(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getStreamingProgress(string category) {
    int ret = view_model_swigPINVOKE.View_getStreamingProgress__SWIG_1(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(category));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int getStreamingProgress(ProcRef procRef) {
    int ret = view_model_swigPINVOKE.View_getStreamingProgress__SWIG_2(swigCPtr, ProcRef.getCPtr(procRef));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void startPerformanceRecording(string path) {
    view_model_swigPINVOKE.View_startPerformanceRecording(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(path));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void stopPerfromanceRecording() {
    view_model_swigPINVOKE.View_stopPerfromanceRecording(swigCPtr);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public double getRenderTime(string category) {
    double ret = view_model_swigPINVOKE.View_getRenderTime(swigCPtr, view_model_swigPINVOKE.UnmanagedString.Create(category));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public ToolTipRequest_SPtr getToolTipRequest() {
    ToolTipRequest_SPtr ret = new ToolTipRequest_SPtr(view_model_swigPINVOKE.View_getToolTipRequest(swigCPtr), true);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void addToolTipRequest(ToolTipRequest_SPtr request) {
    view_model_swigPINVOKE.View_addToolTipRequest(swigCPtr, ToolTipRequest_SPtr.getCPtr(request));
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseClick(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseClick(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseDoubleClick(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseDoubleClick(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseMove(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseMove(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseUp(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseUp(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseDown(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseDown(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onMouseWheel(int x, int y, int delta, bool leftButton, bool rightButton, bool middleButton, bool altKey, bool shiftKey, bool ctrlKey) {
    view_model_swigPINVOKE.View_onMouseWheel(swigCPtr, x, y, delta, leftButton, rightButton, middleButton, altKey, shiftKey, ctrlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onKeyPressed(char keyChar, int keyCode, bool altKey, bool shiftKey, bool crtlKey) {
    view_model_swigPINVOKE.View_onKeyPressed(swigCPtr, keyChar, keyCode, altKey, shiftKey, crtlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onKeyUp(char keyChar, int keyCode, bool altKey, bool shiftKey, bool crtlKey) {
    view_model_swigPINVOKE.View_onKeyUp(swigCPtr, keyChar, keyCode, altKey, shiftKey, crtlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public void onKeyDown(char keyChar, int keyCode, bool altKey, bool shiftKey, bool crtlKey) {
    view_model_swigPINVOKE.View_onKeyDown(swigCPtr, keyChar, keyCode, altKey, shiftKey, crtlKey);
    if (view_model_swigPINVOKE.SWIGPendingException.Pending) throw view_model_swigPINVOKE.SWIGPendingException.Retrieve();
  }

  public static readonly int knDataResOffset = view_model_swigPINVOKE.View_knDataResOffset_get();
}
