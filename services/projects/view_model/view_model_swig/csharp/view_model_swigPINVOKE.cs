/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.30
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

class view_model_swigPINVOKE {

  protected class SWIGExceptionHelper {

    public delegate void ExceptionDelegate(string message);
    public delegate void ExceptionArgumentDelegate(string message, string paramName);

    static ExceptionDelegate applicationDelegate = new ExceptionDelegate(SetPendingApplicationException);
    static ExceptionDelegate arithmeticDelegate = new ExceptionDelegate(SetPendingArithmeticException);
    static ExceptionDelegate divideByZeroDelegate = new ExceptionDelegate(SetPendingDivideByZeroException);
    static ExceptionDelegate indexOutOfRangeDelegate = new ExceptionDelegate(SetPendingIndexOutOfRangeException);
    static ExceptionDelegate invalidCastDelegate = new ExceptionDelegate(SetPendingInvalidCastException);
    static ExceptionDelegate invalidOperationDelegate = new ExceptionDelegate(SetPendingInvalidOperationException);
    static ExceptionDelegate ioDelegate = new ExceptionDelegate(SetPendingIOException);
    static ExceptionDelegate nullReferenceDelegate = new ExceptionDelegate(SetPendingNullReferenceException);
    static ExceptionDelegate outOfMemoryDelegate = new ExceptionDelegate(SetPendingOutOfMemoryException);
    static ExceptionDelegate overflowDelegate = new ExceptionDelegate(SetPendingOverflowException);
    static ExceptionDelegate systemDelegate = new ExceptionDelegate(SetPendingSystemException);

    static ExceptionArgumentDelegate argumentDelegate = new ExceptionArgumentDelegate(SetPendingArgumentException);
    static ExceptionArgumentDelegate argumentNullDelegate = new ExceptionArgumentDelegate(SetPendingArgumentNullException);
    static ExceptionArgumentDelegate argumentOutOfRangeDelegate = new ExceptionArgumentDelegate(SetPendingArgumentOutOfRangeException);

    [DllImport("view_model_swig", EntryPoint="SWIGRegisterExceptionCallbacks_view_model_swig")]
    public static extern void SWIGRegisterExceptionCallbacks_view_model_swig(
                                ExceptionDelegate applicationDelegate,
                                ExceptionDelegate arithmeticDelegate,
                                ExceptionDelegate divideByZeroDelegate, 
                                ExceptionDelegate indexOutOfRangeDelegate, 
                                ExceptionDelegate invalidCastDelegate,
                                ExceptionDelegate invalidOperationDelegate,
                                ExceptionDelegate ioDelegate,
                                ExceptionDelegate nullReferenceDelegate,
                                ExceptionDelegate outOfMemoryDelegate, 
                                ExceptionDelegate overflowDelegate, 
                                ExceptionDelegate systemExceptionDelegate);

    [DllImport("view_model_swig", EntryPoint="SWIGRegisterExceptionArgumentCallbacks_view_model_swig")]
    public static extern void SWIGRegisterExceptionCallbacksArgument_view_model_swig(
                                ExceptionArgumentDelegate argumentDelegate,
                                ExceptionArgumentDelegate argumentNullDelegate,
                                ExceptionArgumentDelegate argumentOutOfRangeDelegate);

    static void SetPendingApplicationException(string message) {
      SWIGPendingException.Set(new System.ApplicationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArithmeticException(string message) {
      SWIGPendingException.Set(new System.ArithmeticException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingDivideByZeroException(string message) {
      SWIGPendingException.Set(new System.DivideByZeroException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIndexOutOfRangeException(string message) {
      SWIGPendingException.Set(new System.IndexOutOfRangeException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidCastException(string message) {
      SWIGPendingException.Set(new System.InvalidCastException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingInvalidOperationException(string message) {
      SWIGPendingException.Set(new System.InvalidOperationException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingIOException(string message) {
      SWIGPendingException.Set(new System.IO.IOException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingNullReferenceException(string message) {
      SWIGPendingException.Set(new System.NullReferenceException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOutOfMemoryException(string message) {
      SWIGPendingException.Set(new System.OutOfMemoryException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingOverflowException(string message) {
      SWIGPendingException.Set(new System.OverflowException(message, SWIGPendingException.Retrieve()));
    }
    static void SetPendingSystemException(string message) {
      SWIGPendingException.Set(new System.SystemException(message, SWIGPendingException.Retrieve()));
    }

    static void SetPendingArgumentException(string message, string paramName) {
      SWIGPendingException.Set(new System.ArgumentException(message, paramName, SWIGPendingException.Retrieve()));
    }
    static void SetPendingArgumentNullException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentNullException(paramName, message));
    }
    static void SetPendingArgumentOutOfRangeException(string message, string paramName) {
      Exception e = SWIGPendingException.Retrieve();
      if (e != null) message = message + " Inner Exception: " + e.Message;
      SWIGPendingException.Set(new System.ArgumentOutOfRangeException(paramName, message));
    }

    static SWIGExceptionHelper() {
      SWIGRegisterExceptionCallbacks_view_model_swig(
                                applicationDelegate,
                                arithmeticDelegate,
                                divideByZeroDelegate,
                                indexOutOfRangeDelegate,
                                invalidCastDelegate,
                                invalidOperationDelegate,
                                ioDelegate,
                                nullReferenceDelegate,
                                outOfMemoryDelegate,
                                overflowDelegate,
                                systemDelegate);

      SWIGRegisterExceptionCallbacksArgument_view_model_swig(
                                argumentDelegate,
                                argumentNullDelegate,
                                argumentOutOfRangeDelegate);
    }
  }

  protected static SWIGExceptionHelper swigExceptionHelper = new SWIGExceptionHelper();

  public class SWIGPendingException {
    [ThreadStatic]
    private static Exception pendingException = null;
    private static int numExceptionsPending = 0;

    public static bool Pending {
      get {
        bool pending = false;
        if (numExceptionsPending > 0)
          if (pendingException != null)
            pending = true;
        return pending;
      } 
    }

    public static void Set(Exception e) {
      if (pendingException != null)
        throw new ApplicationException("FATAL: An earlier pending exception from unmanaged code was missed and thus not thrown (" + pendingException.ToString() + ")", e);
      pendingException = e;
      lock(typeof(view_model_swigPINVOKE)) {
        numExceptionsPending++;
      }
    }

    public static Exception Retrieve() {
      Exception e = null;
      if (numExceptionsPending > 0) {
        if (pendingException != null) {
          e = pendingException;
          pendingException = null;
          lock(typeof(view_model_swigPINVOKE)) {
            numExceptionsPending--;
          }
        }
      }
      return e;
    }
  }


  /// <summary>
  /// This struct wraps std::strings allocated in unmanaged space.
  /// This is required because std::string can contain null characters.
  /// </summary>
  [StructLayout(LayoutKind.Sequential)]
  public struct UnmanagedString {
    /// <summary>
    /// The number of bytes in the unmanaged string.
    /// </summary>
    private uint length;

    /// <summary>
    /// The byte array, allocated in unmanaged space.
    /// </summary>
    private IntPtr data;

    private static System.Text.UTF8Encoding utf8 = new System.Text.UTF8Encoding();

    /// <summary>
    /// Copies the string into a new unmanaged string.
    /// Can throw OutOfMemoryException, ArgumentNullException,
    /// or ArgumentOutOfRangeException (if the string is too long).
    /// </summary>
    static public IntPtr Create(String from) {
	  if (from == null) {
	    throw new ArgumentNullException(from);
	  }

      // Ctreate Utf8 string
      byte[] bytes = utf8.GetBytes(from);

      // Create a struct to contain the unmanaged string.
      UnmanagedString unmanagedString;

      // Set the length in the length field.
      unmanagedString.length = (uint)bytes.Length;

      int size = System.Runtime.InteropServices.Marshal.SizeOf(typeof(byte)) * bytes.Length;

      unmanagedString.data = System.Runtime.InteropServices.Marshal.AllocCoTaskMem(size);

      try {
        System.Runtime.InteropServices.Marshal.Copy(bytes, 0, unmanagedString.data , bytes.Length);
      } catch (Exception) {
        // This doesn't throw.
        System.Runtime.InteropServices.Marshal.FreeCoTaskMem(unmanagedString.data);
        throw;
      }

      try {
        // Allocate unmanaged space for the struct.
        // Can throw OutOfMemoryException.
        IntPtr unmanagedStringPtr = Marshal.AllocCoTaskMem(Marshal.SizeOf(unmanagedString));

        // Marshal the struct data into the unmanaged space allocated.
        // Can throw ArgumentException if misused, but it is not here.
        Marshal.StructureToPtr(unmanagedString, unmanagedStringPtr, false);

        // Return the pointer to the unmanaged struct.
        return unmanagedStringPtr;
      } catch (Exception) {
        // This doesn't throw.
        Marshal.FreeCoTaskMem(unmanagedString.data);
        throw;
      }
    }

    /// <summary>
    /// Copies the unmanaged string data into a new String and deallocates the
    /// unmanaged string.
    /// Can throw ArgumentNullException, or ArgumentException if IntPtr is bad.
    /// May return a null String if the struct pointed to by IntPtr had a null data pointer,
    /// which it shouldn't under proper usage.
    /// </summary>
    static public String Consume(IntPtr unmanagedStringPtr) {
      // Marshal the struct from the unmanaged space.
      // Can throw ArgumentNullException.
      // Can throw ArgumentException if IntPtr is bad.
      // Never returns null.
      UnmanagedString unmanagedString = 
        (UnmanagedString)Marshal.PtrToStructure(unmanagedStringPtr, typeof(UnmanagedString));

      // Allocate a managed string and copies characters into it.
      // Returns null if unmanagedString.data is null.
      // Can throw ArgumentException if the integer cast overflows.	
      
      byte[] bytes = new byte[(int)unmanagedString.length];

      System.Runtime.InteropServices.Marshal.Copy(unmanagedString.data, bytes, 0, bytes.Length);

      string to = utf8.GetString(bytes);

      // Free the unmanaged string data.
      // This doesn't throw, and is a no-op for null.
      Marshal.FreeCoTaskMem(unmanagedString.data);

      // Free the unmanaged struct.
      // This doesn't throw.
      Marshal.FreeCoTaskMem(unmanagedStringPtr);

      // Return the managed string.
      return to;
    }
  }

  /// <summary>
  /// This class is used for marshalling null-terminated char * strings
  /// allocated in unmanaged space.
  /// </summary>
  protected class SWIGStringHelper {
    public delegate string SWIGStringDelegate(string message);
    static SWIGStringDelegate stringDelegate = new SWIGStringDelegate(CreateString);

    [DllImport("view_model_swig", EntryPoint="SWIGRegisterStringCallback_view_model_swig")]
    public static extern void SWIGRegisterStringCallback_view_model_swig(SWIGStringDelegate stringDelegate);

    static string CreateString(string cString) {
      return cString;
    }

    static SWIGStringHelper() {
      SWIGRegisterStringCallback_view_model_swig(stringDelegate);
    }
  }

  static protected SWIGStringHelper swigStringHelper = new SWIGStringHelper();


  static view_model_swigPINVOKE() {
  }


  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_SPtr__SWIG_0")]
  public static extern IntPtr new_GoToPipelineCommand_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_SPtr__SWIG_1")]
  public static extern IntPtr new_GoToPipelineCommand_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_SPtr__SWIG_2")]
  public static extern IntPtr new_GoToPipelineCommand_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_SPtr__SWIG_3")]
  public static extern IntPtr new_GoToPipelineCommand_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_GoToPipelineCommand_SPtr")]
  public static extern void delete_GoToPipelineCommand_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_reset__SWIG_0")]
  public static extern void GoToPipelineCommand_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_reset__SWIG_1")]
  public static extern void GoToPipelineCommand_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_get")]
  public static extern IntPtr GoToPipelineCommand_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr___ref__")]
  public static extern IntPtr GoToPipelineCommand_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr___deref__")]
  public static extern IntPtr GoToPipelineCommand_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_swap")]
  public static extern void GoToPipelineCommand_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_isNull")]
  public static extern bool GoToPipelineCommand_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_isNotNull")]
  public static extern bool GoToPipelineCommand_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_create")]
  public static extern IntPtr GoToPipelineCommand_SPtr_create(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_execute")]
  public static extern bool GoToPipelineCommand_SPtr_execute(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_undo")]
  public static extern bool GoToPipelineCommand_SPtr_undo(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getName")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getName(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getRecordable")]
  public static extern bool GoToPipelineCommand_SPtr_getRecordable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getUndoable")]
  public static extern bool GoToPipelineCommand_SPtr_getUndoable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getEnabled")]
  public static extern bool GoToPipelineCommand_SPtr_getEnabled(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getGeometry")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getGeometry(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_release")]
  public static extern int GoToPipelineCommand_SPtr_release(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_addRef")]
  public static extern int GoToPipelineCommand_SPtr_addRef(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getLongName")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getLongName(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_drag")]
  public static extern IntPtr GoToPipelineCommand_SPtr_drag(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_redo")]
  public static extern bool GoToPipelineCommand_SPtr_redo(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getCategory")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getCategory(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_setCategory")]
  public static extern void GoToPipelineCommand_SPtr_setCategory(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getPriority")]
  public static extern int GoToPipelineCommand_SPtr_getPriority(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_setPriority")]
  public static extern void GoToPipelineCommand_SPtr_setPriority(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getSubordinates")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getSubordinates(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_addSubordinate")]
  public static extern void GoToPipelineCommand_SPtr_addSubordinate(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getChecked")]
  public static extern bool GoToPipelineCommand_SPtr_getChecked(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getType")]
  public static extern int GoToPipelineCommand_SPtr_getType(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getToolTip")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getToolTip(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_hasSubordinates")]
  public static extern bool GoToPipelineCommand_SPtr_hasSubordinates(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_getLastException")]
  public static extern IntPtr GoToPipelineCommand_SPtr_getLastException(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_setLastException")]
  public static extern void GoToPipelineCommand_SPtr_setLastException(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_Executed")]
  public static extern IntPtr GoToPipelineCommand_SPtr_Executed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_SPtr_notifyCommandExecuted")]
  public static extern void GoToPipelineCommand_SPtr_notifyCommandExecuted(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_CSPtr__SWIG_0")]
  public static extern IntPtr new_GoToPipelineCommand_CSPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_CSPtr__SWIG_1")]
  public static extern IntPtr new_GoToPipelineCommand_CSPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_CSPtr__SWIG_2")]
  public static extern IntPtr new_GoToPipelineCommand_CSPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_GoToPipelineCommand_CSPtr__SWIG_3")]
  public static extern IntPtr new_GoToPipelineCommand_CSPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_GoToPipelineCommand_CSPtr")]
  public static extern void delete_GoToPipelineCommand_CSPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_reset__SWIG_0")]
  public static extern void GoToPipelineCommand_CSPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_reset__SWIG_1")]
  public static extern void GoToPipelineCommand_CSPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_get")]
  public static extern IntPtr GoToPipelineCommand_CSPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr___ref__")]
  public static extern IntPtr GoToPipelineCommand_CSPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr___deref__")]
  public static extern IntPtr GoToPipelineCommand_CSPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_swap")]
  public static extern void GoToPipelineCommand_CSPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_isNull")]
  public static extern bool GoToPipelineCommand_CSPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_isNotNull")]
  public static extern bool GoToPipelineCommand_CSPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getName")]
  public static extern IntPtr GoToPipelineCommand_CSPtr_getName(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getRecordable")]
  public static extern bool GoToPipelineCommand_CSPtr_getRecordable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getUndoable")]
  public static extern bool GoToPipelineCommand_CSPtr_getUndoable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getEnabled")]
  public static extern bool GoToPipelineCommand_CSPtr_getEnabled(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_release")]
  public static extern int GoToPipelineCommand_CSPtr_release(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_addRef")]
  public static extern int GoToPipelineCommand_CSPtr_addRef(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getLongName")]
  public static extern IntPtr GoToPipelineCommand_CSPtr_getLongName(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getCategory")]
  public static extern IntPtr GoToPipelineCommand_CSPtr_getCategory(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getPriority")]
  public static extern int GoToPipelineCommand_CSPtr_getPriority(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getChecked")]
  public static extern bool GoToPipelineCommand_CSPtr_getChecked(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getType")]
  public static extern int GoToPipelineCommand_CSPtr_getType(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_getToolTip")]
  public static extern IntPtr GoToPipelineCommand_CSPtr_getToolTip(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_CSPtr_hasSubordinates")]
  public static extern bool GoToPipelineCommand_CSPtr_hasSubordinates(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_knModeOrbital_get")]
  public static extern int Camera_knModeOrbital_get();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_Camera")]
  public static extern IntPtr new_Camera();

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_toString")]
  public static extern IntPtr Camera_toString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getPerspectiveString")]
  public static extern IntPtr Camera_getPerspectiveString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getEyeString")]
  public static extern IntPtr Camera_getEyeString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getCenterString")]
  public static extern IntPtr Camera_getCenterString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getUpString")]
  public static extern IntPtr Camera_getUpString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getFovy")]
  public static extern double Camera_getFovy(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getAspect")]
  public static extern double Camera_getAspect(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getNearz")]
  public static extern double Camera_getNearz(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getFarz")]
  public static extern double Camera_getFarz(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getHeading")]
  public static extern double Camera_getHeading(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setHeading")]
  public static extern void Camera_setHeading(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setFovy")]
  public static extern void Camera_setFovy(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setAspect")]
  public static extern void Camera_setAspect(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setNearz")]
  public static extern void Camera_setNearz(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setFarz")]
  public static extern void Camera_setFarz(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getMode")]
  public static extern int Camera_getMode(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setMode")]
  public static extern void Camera_setMode(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_isModeOrbital")]
  public static extern bool Camera_isModeOrbital(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalAltitude")]
  public static extern double Camera_getOrbitalAltitude(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOribitalEyeAltitiude")]
  public static extern double Camera_getOribitalEyeAltitiude(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOribitalUnitAltitude")]
  public static extern double Camera_getOribitalUnitAltitude(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalTilt")]
  public static extern double Camera_getOrbitalTilt(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalRange")]
  public static extern double Camera_getOrbitalRange(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalTargetIndex")]
  public static extern IntPtr Camera_getOrbitalTargetIndex(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalTargetLatLon")]
  public static extern IntPtr Camera_getOrbitalTargetLatLon(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalEyeIndex")]
  public static extern IntPtr Camera_getOrbitalEyeIndex(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getOrbitalEyeLatLon")]
  public static extern IntPtr Camera_getOrbitalEyeLatLon(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setOrbitalAltitude")]
  public static extern void Camera_setOrbitalAltitude(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_adjustOrbitalAltitudeAndRange")]
  public static extern void Camera_adjustOrbitalAltitudeAndRange(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setOrbitalTilt")]
  public static extern void Camera_setOrbitalTilt(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setOrbitalRange")]
  public static extern void Camera_setOrbitalRange(HandleRef jarg1, double jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getCenter")]
  public static extern IntPtr Camera_getCenter(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getEye")]
  public static extern IntPtr Camera_getEye(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getUp")]
  public static extern IntPtr Camera_getUp(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_getLook")]
  public static extern IntPtr Camera_getLook(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_Camera_setCenter")]
  public static extern void Camera_setCenter(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_Camera")]
  public static extern void delete_Camera(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_lerp")]
  public static extern void lerp(HandleRef jarg1, HandleRef jarg2, double jarg3, HandleRef jarg4);

  [DllImport("view_model_swig", EntryPoint="CSharp_camToSettings")]
  public static extern void camToSettings(HandleRef jarg1, out double jarg2, out double jarg3, out double jarg4, out double jarg5, out double jarg6, out double jarg7);

  [DllImport("view_model_swig", EntryPoint="CSharp_camFromSettings")]
  public static extern void camFromSettings(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5, double jarg6, double jarg7);

  [DllImport("view_model_swig", EntryPoint="CSharp_camFromCookieStr")]
  public static extern void camFromCookieStr(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_GoToPipelineCommand")]
  public static extern void delete_GoToPipelineCommand(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_create")]
  public static extern IntPtr GoToPipelineCommand_create(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_execute")]
  public static extern bool GoToPipelineCommand_execute(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_undo")]
  public static extern bool GoToPipelineCommand_undo(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_getName")]
  public static extern IntPtr GoToPipelineCommand_getName(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_getRecordable")]
  public static extern bool GoToPipelineCommand_getRecordable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_getUndoable")]
  public static extern bool GoToPipelineCommand_getUndoable(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_getEnabled")]
  public static extern bool GoToPipelineCommand_getEnabled(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommand_getGeometry")]
  public static extern IntPtr GoToPipelineCommand_getGeometry(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_create")]
  public static extern IntPtr ViewEvent_create(IntPtr jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_getValue")]
  public static extern IntPtr ViewEvent_getValue(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_dynamic_cast")]
  public static extern IntPtr ViewEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ViewEvent")]
  public static extern void delete_ViewEvent(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptDrawBackground_set")]
  public static extern void ViewConfiguration_m_bOptDrawBackground_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptDrawBackground_get")]
  public static extern bool ViewConfiguration_m_bOptDrawBackground_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bDefaultShowControls_set")]
  public static extern void ViewConfiguration_m_bDefaultShowControls_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bDefaultShowControls_get")]
  public static extern bool ViewConfiguration_m_bDefaultShowControls_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowAtmosphere_set")]
  public static extern void ViewConfiguration_m_bOptShowAtmosphere_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowAtmosphere_get")]
  public static extern bool ViewConfiguration_m_bOptShowAtmosphere_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowDiagnostic_set")]
  public static extern void ViewConfiguration_m_bOptShowDiagnostic_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowDiagnostic_get")]
  public static extern bool ViewConfiguration_m_bOptShowDiagnostic_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowStatus_set")]
  public static extern void ViewConfiguration_m_bOptShowStatus_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowStatus_get")]
  public static extern bool ViewConfiguration_m_bOptShowStatus_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowWorldAxes_set")]
  public static extern void ViewConfiguration_m_bOptShowWorldAxes_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptShowWorldAxes_get")]
  public static extern bool ViewConfiguration_m_bOptShowWorldAxes_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptLockGrid_set")]
  public static extern void ViewConfiguration_m_bOptLockGrid_set(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewConfiguration_m_bOptLockGrid_get")]
  public static extern bool ViewConfiguration_m_bOptLockGrid_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewConfiguration")]
  public static extern IntPtr new_ViewConfiguration();

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ViewConfiguration")]
  public static extern void delete_ViewConfiguration(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_test")]
  public static extern void View_test();

  [DllImport("view_model_swig", EntryPoint="CSharp_View_isView")]
  public static extern bool View_isView(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getView")]
  public static extern IntPtr View_getView(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewCount")]
  public static extern int View_getViewCount();

  [DllImport("view_model_swig", EntryPoint="CSharp_View_closeAllResources")]
  public static extern void View_closeAllResources();

  [DllImport("view_model_swig", EntryPoint="CSharp_View_calcEyeAltitude__SWIG_0")]
  public static extern double View_calcEyeAltitude__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_View__SWIG_0")]
  public static extern IntPtr new_View__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_View__SWIG_1")]
  public static extern IntPtr new_View__SWIG_1(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_View")]
  public static extern void delete_View(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_dispose")]
  public static extern void View_dispose(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getID")]
  public static extern int View_getID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getCamera")]
  public static extern IntPtr View_getCamera(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewportWidth")]
  public static extern int View_getViewportWidth(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewportHeight")]
  public static extern int View_getViewportHeight(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_calcEyeAltitude__SWIG_1")]
  public static extern double View_calcEyeAltitude__SWIG_1(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewPointProcess")]
  public static extern IntPtr View_getViewPointProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setViewPointProcess")]
  public static extern void View_setViewPointProcess(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_knDataResOffset_get")]
  public static extern int View_knDataResOffset_get();

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewTileResolution")]
  public static extern int View_getViewTileResolution(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getViewDataResolution")]
  public static extern int View_getViewDataResolution(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_display")]
  public static extern void View_display(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_reshape")]
  public static extern void View_reshape(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_releaseOpenGLResources")]
  public static extern void View_releaseOpenGLResources(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToCamera__SWIG_0")]
  public static extern void View_goToCamera__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToCamera__SWIG_1")]
  public static extern void View_goToCamera__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToIndex__SWIG_0")]
  public static extern void View_goToIndex__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToIndex__SWIG_1")]
  public static extern void View_goToIndex__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToGeometry__SWIG_0")]
  public static extern void View_goToGeometry__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToGeometry__SWIG_1")]
  public static extern void View_goToGeometry__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToFeature__SWIG_0")]
  public static extern void View_goToFeature__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToFeature__SWIG_1")]
  public static extern void View_goToFeature__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToLatlon__SWIG_0")]
  public static extern void View_goToLatlon__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_goToLatlon__SWIG_1")]
  public static extern void View_goToLatlon__SWIG_1(HandleRef jarg1, HandleRef jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_startTrip")]
  public static extern void View_startTrip(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getMouseX")]
  public static extern int View_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getMouseY")]
  public static extern int View_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getPointerLocation")]
  public static extern IntPtr View_getPointerLocation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getPointerIndex")]
  public static extern IntPtr View_getPointerIndex(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getIndexFromScreen")]
  public static extern IntPtr View_getIndexFromScreen(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_projectFromScreenSpace")]
  public static extern IntPtr View_projectFromScreenSpace(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_projectToScreenSpace")]
  public static extern IntPtr View_projectToScreenSpace(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getPOI")]
  public static extern IntPtr View_getPOI(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setPOI")]
  public static extern void View_setPOI(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_calculateWatershed")]
  public static extern IntPtr View_calculateWatershed(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_calculateWatershedFlow")]
  public static extern IntPtr View_calculateWatershedFlow(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getVisibleTiles__SWIG_0")]
  public static extern void View_getVisibleTiles__SWIG_0(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getVisibleTiles__SWIG_1")]
  public static extern void View_getVisibleTiles__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getVisibleTiles__SWIG_2")]
  public static extern void View_getVisibleTiles__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getScreenGeometry__SWIG_0")]
  public static extern IntPtr View_getScreenGeometry__SWIG_0(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getScreenGeometry__SWIG_1")]
  public static extern IntPtr View_getScreenGeometry__SWIG_1(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getOptShowAtmosphere")]
  public static extern bool View_getOptShowAtmosphere(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setOptShowAtmosphere")]
  public static extern void View_setOptShowAtmosphere(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getOptShowDiagnostic")]
  public static extern bool View_getOptShowDiagnostic(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setOptShowDiagnostic")]
  public static extern void View_setOptShowDiagnostic(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getOptShowStatus")]
  public static extern bool View_getOptShowStatus(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setOptShowStatus")]
  public static extern void View_setOptShowStatus(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getOptShowWorldAxes")]
  public static extern bool View_getOptShowWorldAxes(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setOptShowWorldAxes")]
  public static extern void View_setOptShowWorldAxes(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getOptLockGrid")]
  public static extern bool View_getOptLockGrid(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setOptLockGrid")]
  public static extern void View_setOptLockGrid(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_lodEnabled__SWIG_0")]
  public static extern bool View_lodEnabled__SWIG_0(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_lodEnabled__SWIG_1")]
  public static extern bool View_lodEnabled__SWIG_1();

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getEndMoveNotifier")]
  public static extern IntPtr View_getEndMoveNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getPointerNotifier")]
  public static extern IntPtr View_getPointerNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getStreamingNotifier")]
  public static extern IntPtr View_getStreamingNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getEyeAltNotifier")]
  public static extern IntPtr View_getEyeAltNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getResolutionNotifier")]
  public static extern IntPtr View_getResolutionNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getErrorNotifier")]
  public static extern IntPtr View_getErrorNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getAnnotationClickNotifier")]
  public static extern IntPtr View_getAnnotationClickNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getAnnotationDoubleClickNotifier")]
  public static extern IntPtr View_getAnnotationDoubleClickNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getAnnotationMouseMoveNotifier")]
  public static extern IntPtr View_getAnnotationMouseMoveNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getAnnotationMouseEnterNotifier")]
  public static extern IntPtr View_getAnnotationMouseEnterNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getAnnotationMouseLeaveNotifier")]
  public static extern IntPtr View_getAnnotationMouseLeaveNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getPOIChangeNotifier")]
  public static extern IntPtr View_getPOIChangeNotifier(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getErrorString")]
  public static extern IntPtr View_getErrorString(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setPointerIndex")]
  public static extern void View_setPointerIndex(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setStreamingProgress")]
  public static extern void View_setStreamingProgress(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setEyeAlt")]
  public static extern void View_setEyeAlt(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_setResolution")]
  public static extern void View_setResolution(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_forceNotification")]
  public static extern void View_forceNotification(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getStreamingProgress__SWIG_0")]
  public static extern int View_getStreamingProgress__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getStreamingProgress__SWIG_1")]
  public static extern int View_getStreamingProgress__SWIG_1(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getStreamingProgress__SWIG_2")]
  public static extern int View_getStreamingProgress__SWIG_2(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_startPerformanceRecording")]
  public static extern void View_startPerformanceRecording(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_stopPerfromanceRecording")]
  public static extern void View_stopPerfromanceRecording(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getRenderTime")]
  public static extern double View_getRenderTime(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_getToolTipRequest")]
  public static extern IntPtr View_getToolTipRequest(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_addToolTipRequest")]
  public static extern void View_addToolTipRequest(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseClick")]
  public static extern void View_onMouseClick(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseDoubleClick")]
  public static extern void View_onMouseDoubleClick(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseMove")]
  public static extern void View_onMouseMove(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseUp")]
  public static extern void View_onMouseUp(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseDown")]
  public static extern void View_onMouseDown(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onMouseWheel")]
  public static extern void View_onMouseWheel(HandleRef jarg1, int jarg2, int jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onKeyPressed")]
  public static extern void View_onKeyPressed(HandleRef jarg1, char jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onKeyUp")]
  public static extern void View_onKeyUp(HandleRef jarg1, char jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("view_model_swig", EntryPoint="CSharp_View_onKeyDown")]
  public static extern void View_onKeyDown(HandleRef jarg1, char jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIEvent")]
  public static extern IntPtr new_UIEvent(bool jarg1, bool jarg2, bool jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_create")]
  public static extern IntPtr UIEvent_create(bool jarg1, bool jarg2, bool jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIEvent")]
  public static extern void delete_UIEvent(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_isConsumed")]
  public static extern bool UIEvent_isConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_setConsumed")]
  public static extern void UIEvent_setConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_isAltKeyPressed")]
  public static extern bool UIEvent_isAltKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_isCtrlKeyPressed")]
  public static extern bool UIEvent_isCtrlKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_isShiftKeyPressed")]
  public static extern bool UIEvent_isShiftKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIKeyEvent")]
  public static extern IntPtr new_UIKeyEvent(char jarg1, int jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_create")]
  public static extern IntPtr UIKeyEvent_create(char jarg1, int jarg2, bool jarg3, bool jarg4, bool jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIKeyEvent")]
  public static extern void delete_UIKeyEvent(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_getKeyChar")]
  public static extern char UIKeyEvent_getKeyChar(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_getKeyCode")]
  public static extern int UIKeyEvent_getKeyCode(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_isKeyChar")]
  public static extern bool UIKeyEvent_isKeyChar(HandleRef jarg1, char jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIMouseEvent")]
  public static extern IntPtr new_UIMouseEvent(double jarg1, double jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_create")]
  public static extern IntPtr UIMouseEvent_create(double jarg1, double jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIMouseEvent")]
  public static extern void delete_UIMouseEvent(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_getMouseX")]
  public static extern double UIMouseEvent_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_getMouseY")]
  public static extern double UIMouseEvent_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_getWheelDelta")]
  public static extern int UIMouseEvent_getWheelDelta(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_isLeftButtonDown")]
  public static extern bool UIMouseEvent_isLeftButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_isRightButtonDown")]
  public static extern bool UIMouseEvent_isRightButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_isMiddleButtonDown")]
  public static extern bool UIMouseEvent_isMiddleButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_mouseDistanceFrom")]
  public static extern double UIMouseEvent_mouseDistanceFrom(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_isInsideRect")]
  public static extern bool UIMouseEvent_isInsideRect(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_getProcRef")]
  public static extern IntPtr IAnnotation_getProcRef(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_getProcess")]
  public static extern IntPtr IAnnotation_getProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_getFeatureID")]
  public static extern IntPtr IAnnotation_getFeatureID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_getViewModel")]
  public static extern IntPtr IAnnotation_getViewModel(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_getFeature")]
  public static extern IntPtr IAnnotation_getFeature(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_IAnnotation")]
  public static extern void delete_IAnnotation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getID")]
  public static extern int IViewModel_getID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getViewPointProcess")]
  public static extern IntPtr IViewModel_getViewPointProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getViewportWidth")]
  public static extern int IViewModel_getViewportWidth(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getViewportHeight")]
  public static extern int IViewModel_getViewportHeight(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getMouseX")]
  public static extern int IViewModel_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getMouseY")]
  public static extern int IViewModel_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_getPointerLocation")]
  public static extern IntPtr IViewModel_getPointerLocation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_showToolTip__SWIG_0")]
  public static extern void IViewModel_showToolTip__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_showToolTip__SWIG_1")]
  public static extern void IViewModel_showToolTip__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_IViewModel")]
  public static extern void delete_IViewModel(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_create")]
  public static extern IntPtr ViewHandle_create(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getID")]
  public static extern int ViewHandle_getID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getViewPointProcess")]
  public static extern IntPtr ViewHandle_getViewPointProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getViewportWidth")]
  public static extern int ViewHandle_getViewportWidth(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getViewportHeight")]
  public static extern int ViewHandle_getViewportHeight(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getMouseX")]
  public static extern int ViewHandle_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getMouseY")]
  public static extern int ViewHandle_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_getPointerLocation")]
  public static extern IntPtr ViewHandle_getPointerLocation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_showToolTip__SWIG_0")]
  public static extern void ViewHandle_showToolTip__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_showToolTip__SWIG_1")]
  public static extern void ViewHandle_showToolTip__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_AnnotationMouseEvent")]
  public static extern IntPtr new_AnnotationMouseEvent(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_create")]
  public static extern IntPtr AnnotationMouseEvent_create(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_AnnotationMouseEvent")]
  public static extern void delete_AnnotationMouseEvent(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_getAnnotation")]
  public static extern IntPtr AnnotationMouseEvent_getAnnotation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_getViewModel")]
  public static extern IntPtr AnnotationMouseEvent_getViewModel(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_dynamic_cast")]
  public static extern IntPtr AnnotationMouseEvent_dynamic_cast(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ToolTipRequest")]
  public static extern IntPtr new_ToolTipRequest(IntPtr jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_create")]
  public static extern IntPtr ToolTipRequest_create(IntPtr jarg1, int jarg2, int jarg3, int jarg4);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ToolTipRequest")]
  public static extern void delete_ToolTipRequest(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_getMessage")]
  public static extern IntPtr ToolTipRequest_getMessage(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_getX")]
  public static extern int ToolTipRequest_getX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_getY")]
  public static extern int ToolTipRequest_getY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_getPeriod")]
  public static extern int ToolTipRequest_getPeriod(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_UIEvent_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_UIEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_UIEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_UIEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIEvent_SPtr")]
  public static extern void delete_UIEvent_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_reset__SWIG_0")]
  public static extern void UIEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_reset__SWIG_1")]
  public static extern void UIEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_get")]
  public static extern IntPtr UIEvent_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr___ref__")]
  public static extern IntPtr UIEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr___deref__")]
  public static extern IntPtr UIEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_swap")]
  public static extern void UIEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isNull")]
  public static extern bool UIEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isNotNull")]
  public static extern bool UIEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_create")]
  public static extern IntPtr UIEvent_SPtr_create(HandleRef jarg1, bool jarg2, bool jarg3, bool jarg4);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isConsumed")]
  public static extern bool UIEvent_SPtr_isConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_setConsumed")]
  public static extern void UIEvent_SPtr_setConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isAltKeyPressed")]
  public static extern bool UIEvent_SPtr_isAltKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isCtrlKeyPressed")]
  public static extern bool UIEvent_SPtr_isCtrlKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEvent_SPtr_isShiftKeyPressed")]
  public static extern bool UIEvent_SPtr_isShiftKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIKeyEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_UIKeyEvent_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIKeyEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_UIKeyEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIKeyEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_UIKeyEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIKeyEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_UIKeyEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIKeyEvent_SPtr")]
  public static extern void delete_UIKeyEvent_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_reset__SWIG_0")]
  public static extern void UIKeyEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_reset__SWIG_1")]
  public static extern void UIKeyEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_get")]
  public static extern IntPtr UIKeyEvent_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr___ref__")]
  public static extern IntPtr UIKeyEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr___deref__")]
  public static extern IntPtr UIKeyEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_swap")]
  public static extern void UIKeyEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isNull")]
  public static extern bool UIKeyEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isNotNull")]
  public static extern bool UIKeyEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_create")]
  public static extern IntPtr UIKeyEvent_SPtr_create(HandleRef jarg1, char jarg2, int jarg3, bool jarg4, bool jarg5, bool jarg6);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_getKeyChar")]
  public static extern char UIKeyEvent_SPtr_getKeyChar(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_getKeyCode")]
  public static extern int UIKeyEvent_SPtr_getKeyCode(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isKeyChar")]
  public static extern bool UIKeyEvent_SPtr_isKeyChar(HandleRef jarg1, char jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isConsumed")]
  public static extern bool UIKeyEvent_SPtr_isConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_setConsumed")]
  public static extern void UIKeyEvent_SPtr_setConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isAltKeyPressed")]
  public static extern bool UIKeyEvent_SPtr_isAltKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isCtrlKeyPressed")]
  public static extern bool UIKeyEvent_SPtr_isCtrlKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEvent_SPtr_isShiftKeyPressed")]
  public static extern bool UIKeyEvent_SPtr_isShiftKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIMouseEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_UIMouseEvent_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIMouseEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_UIMouseEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIMouseEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_UIMouseEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_UIMouseEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_UIMouseEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_UIMouseEvent_SPtr")]
  public static extern void delete_UIMouseEvent_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_reset__SWIG_0")]
  public static extern void UIMouseEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_reset__SWIG_1")]
  public static extern void UIMouseEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_get")]
  public static extern IntPtr UIMouseEvent_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr___ref__")]
  public static extern IntPtr UIMouseEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr___deref__")]
  public static extern IntPtr UIMouseEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_swap")]
  public static extern void UIMouseEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isNull")]
  public static extern bool UIMouseEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isNotNull")]
  public static extern bool UIMouseEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_create")]
  public static extern IntPtr UIMouseEvent_SPtr_create(HandleRef jarg1, double jarg2, double jarg3, int jarg4, bool jarg5, bool jarg6, bool jarg7, bool jarg8, bool jarg9, bool jarg10);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_getMouseX")]
  public static extern double UIMouseEvent_SPtr_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_getMouseY")]
  public static extern double UIMouseEvent_SPtr_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_getWheelDelta")]
  public static extern int UIMouseEvent_SPtr_getWheelDelta(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isLeftButtonDown")]
  public static extern bool UIMouseEvent_SPtr_isLeftButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isRightButtonDown")]
  public static extern bool UIMouseEvent_SPtr_isRightButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isMiddleButtonDown")]
  public static extern bool UIMouseEvent_SPtr_isMiddleButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_mouseDistanceFrom")]
  public static extern double UIMouseEvent_SPtr_mouseDistanceFrom(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isInsideRect")]
  public static extern bool UIMouseEvent_SPtr_isInsideRect(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isConsumed")]
  public static extern bool UIMouseEvent_SPtr_isConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_setConsumed")]
  public static extern void UIMouseEvent_SPtr_setConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isAltKeyPressed")]
  public static extern bool UIMouseEvent_SPtr_isAltKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isCtrlKeyPressed")]
  public static extern bool UIMouseEvent_SPtr_isCtrlKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEvent_SPtr_isShiftKeyPressed")]
  public static extern bool UIMouseEvent_SPtr_isShiftKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_AnnotationMouseEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_AnnotationMouseEvent_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_AnnotationMouseEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_AnnotationMouseEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_AnnotationMouseEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_AnnotationMouseEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_AnnotationMouseEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_AnnotationMouseEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_AnnotationMouseEvent_SPtr")]
  public static extern void delete_AnnotationMouseEvent_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_reset__SWIG_0")]
  public static extern void AnnotationMouseEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_reset__SWIG_1")]
  public static extern void AnnotationMouseEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_get")]
  public static extern IntPtr AnnotationMouseEvent_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr___ref__")]
  public static extern IntPtr AnnotationMouseEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr___deref__")]
  public static extern IntPtr AnnotationMouseEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_swap")]
  public static extern void AnnotationMouseEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isNull")]
  public static extern bool AnnotationMouseEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isNotNull")]
  public static extern bool AnnotationMouseEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_create")]
  public static extern IntPtr AnnotationMouseEvent_SPtr_create(HandleRef jarg1, HandleRef jarg2, HandleRef jarg3, HandleRef jarg4);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_getAnnotation")]
  public static extern IntPtr AnnotationMouseEvent_SPtr_getAnnotation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_getViewModel")]
  public static extern IntPtr AnnotationMouseEvent_SPtr_getViewModel(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_dynamic_cast")]
  public static extern IntPtr AnnotationMouseEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_getMouseX")]
  public static extern double AnnotationMouseEvent_SPtr_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_getMouseY")]
  public static extern double AnnotationMouseEvent_SPtr_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_getWheelDelta")]
  public static extern int AnnotationMouseEvent_SPtr_getWheelDelta(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isLeftButtonDown")]
  public static extern bool AnnotationMouseEvent_SPtr_isLeftButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isRightButtonDown")]
  public static extern bool AnnotationMouseEvent_SPtr_isRightButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isMiddleButtonDown")]
  public static extern bool AnnotationMouseEvent_SPtr_isMiddleButtonDown(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_mouseDistanceFrom")]
  public static extern double AnnotationMouseEvent_SPtr_mouseDistanceFrom(HandleRef jarg1, double jarg2, double jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isInsideRect")]
  public static extern bool AnnotationMouseEvent_SPtr_isInsideRect(HandleRef jarg1, double jarg2, double jarg3, double jarg4, double jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isConsumed")]
  public static extern bool AnnotationMouseEvent_SPtr_isConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_setConsumed")]
  public static extern void AnnotationMouseEvent_SPtr_setConsumed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isAltKeyPressed")]
  public static extern bool AnnotationMouseEvent_SPtr_isAltKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isCtrlKeyPressed")]
  public static extern bool AnnotationMouseEvent_SPtr_isCtrlKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEvent_SPtr_isShiftKeyPressed")]
  public static extern bool AnnotationMouseEvent_SPtr_isShiftKeyPressed(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IAnnotation_SPtr__SWIG_0")]
  public static extern IntPtr new_IAnnotation_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IAnnotation_SPtr__SWIG_1")]
  public static extern IntPtr new_IAnnotation_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IAnnotation_SPtr__SWIG_2")]
  public static extern IntPtr new_IAnnotation_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IAnnotation_SPtr__SWIG_3")]
  public static extern IntPtr new_IAnnotation_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_IAnnotation_SPtr")]
  public static extern void delete_IAnnotation_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_reset__SWIG_0")]
  public static extern void IAnnotation_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_reset__SWIG_1")]
  public static extern void IAnnotation_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_get")]
  public static extern IntPtr IAnnotation_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr___ref__")]
  public static extern IntPtr IAnnotation_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr___deref__")]
  public static extern IntPtr IAnnotation_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_swap")]
  public static extern void IAnnotation_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_isNull")]
  public static extern bool IAnnotation_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_isNotNull")]
  public static extern bool IAnnotation_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_getProcRef")]
  public static extern IntPtr IAnnotation_SPtr_getProcRef(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_getProcess")]
  public static extern IntPtr IAnnotation_SPtr_getProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_getFeatureID")]
  public static extern IntPtr IAnnotation_SPtr_getFeatureID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_getViewModel")]
  public static extern IntPtr IAnnotation_SPtr_getViewModel(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IAnnotation_SPtr_getFeature")]
  public static extern IntPtr IAnnotation_SPtr_getFeature(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewEvent_SPtr__SWIG_0")]
  public static extern IntPtr new_ViewEvent_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewEvent_SPtr__SWIG_1")]
  public static extern IntPtr new_ViewEvent_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewEvent_SPtr__SWIG_2")]
  public static extern IntPtr new_ViewEvent_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewEvent_SPtr__SWIG_3")]
  public static extern IntPtr new_ViewEvent_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ViewEvent_SPtr")]
  public static extern void delete_ViewEvent_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_reset__SWIG_0")]
  public static extern void ViewEvent_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_reset__SWIG_1")]
  public static extern void ViewEvent_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_get")]
  public static extern IntPtr ViewEvent_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr___ref__")]
  public static extern IntPtr ViewEvent_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr___deref__")]
  public static extern IntPtr ViewEvent_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_swap")]
  public static extern void ViewEvent_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_isNull")]
  public static extern bool ViewEvent_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_isNotNull")]
  public static extern bool ViewEvent_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_create")]
  public static extern IntPtr ViewEvent_SPtr_create(HandleRef jarg1, IntPtr jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_getValue")]
  public static extern IntPtr ViewEvent_SPtr_getValue(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEvent_SPtr_dynamic_cast")]
  public static extern IntPtr ViewEvent_SPtr_dynamic_cast(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewHandle_SPtr__SWIG_0")]
  public static extern IntPtr new_ViewHandle_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewHandle_SPtr__SWIG_1")]
  public static extern IntPtr new_ViewHandle_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewHandle_SPtr__SWIG_2")]
  public static extern IntPtr new_ViewHandle_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ViewHandle_SPtr__SWIG_3")]
  public static extern IntPtr new_ViewHandle_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ViewHandle_SPtr")]
  public static extern void delete_ViewHandle_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_reset__SWIG_0")]
  public static extern void ViewHandle_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_reset__SWIG_1")]
  public static extern void ViewHandle_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_get")]
  public static extern IntPtr ViewHandle_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr___ref__")]
  public static extern IntPtr ViewHandle_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr___deref__")]
  public static extern IntPtr ViewHandle_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_swap")]
  public static extern void ViewHandle_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_isNull")]
  public static extern bool ViewHandle_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_isNotNull")]
  public static extern bool ViewHandle_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_create")]
  public static extern IntPtr ViewHandle_SPtr_create(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getID")]
  public static extern int ViewHandle_SPtr_getID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getViewPointProcess")]
  public static extern IntPtr ViewHandle_SPtr_getViewPointProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getViewportWidth")]
  public static extern int ViewHandle_SPtr_getViewportWidth(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getViewportHeight")]
  public static extern int ViewHandle_SPtr_getViewportHeight(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getMouseX")]
  public static extern int ViewHandle_SPtr_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getMouseY")]
  public static extern int ViewHandle_SPtr_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_getPointerLocation")]
  public static extern IntPtr ViewHandle_SPtr_getPointerLocation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_showToolTip__SWIG_0")]
  public static extern void ViewHandle_SPtr_showToolTip__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandle_SPtr_showToolTip__SWIG_1")]
  public static extern void ViewHandle_SPtr_showToolTip__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IViewModel_SPtr__SWIG_0")]
  public static extern IntPtr new_IViewModel_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IViewModel_SPtr__SWIG_1")]
  public static extern IntPtr new_IViewModel_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IViewModel_SPtr__SWIG_2")]
  public static extern IntPtr new_IViewModel_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_IViewModel_SPtr__SWIG_3")]
  public static extern IntPtr new_IViewModel_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_IViewModel_SPtr")]
  public static extern void delete_IViewModel_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_reset__SWIG_0")]
  public static extern void IViewModel_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_reset__SWIG_1")]
  public static extern void IViewModel_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_get")]
  public static extern IntPtr IViewModel_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr___ref__")]
  public static extern IntPtr IViewModel_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr___deref__")]
  public static extern IntPtr IViewModel_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_swap")]
  public static extern void IViewModel_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_isNull")]
  public static extern bool IViewModel_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_isNotNull")]
  public static extern bool IViewModel_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getID")]
  public static extern int IViewModel_SPtr_getID(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getViewPointProcess")]
  public static extern IntPtr IViewModel_SPtr_getViewPointProcess(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getViewportWidth")]
  public static extern int IViewModel_SPtr_getViewportWidth(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getViewportHeight")]
  public static extern int IViewModel_SPtr_getViewportHeight(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getMouseX")]
  public static extern int IViewModel_SPtr_getMouseX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getMouseY")]
  public static extern int IViewModel_SPtr_getMouseY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_getPointerLocation")]
  public static extern IntPtr IViewModel_SPtr_getPointerLocation(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_showToolTip__SWIG_0")]
  public static extern void IViewModel_SPtr_showToolTip__SWIG_0(HandleRef jarg1, IntPtr jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_IViewModel_SPtr_showToolTip__SWIG_1")]
  public static extern void IViewModel_SPtr_showToolTip__SWIG_1(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ToolTipRequest_SPtr__SWIG_0")]
  public static extern IntPtr new_ToolTipRequest_SPtr__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ToolTipRequest_SPtr__SWIG_1")]
  public static extern IntPtr new_ToolTipRequest_SPtr__SWIG_1(HandleRef jarg1, bool jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ToolTipRequest_SPtr__SWIG_2")]
  public static extern IntPtr new_ToolTipRequest_SPtr__SWIG_2(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_ToolTipRequest_SPtr__SWIG_3")]
  public static extern IntPtr new_ToolTipRequest_SPtr__SWIG_3(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_ToolTipRequest_SPtr")]
  public static extern void delete_ToolTipRequest_SPtr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_reset__SWIG_0")]
  public static extern void ToolTipRequest_SPtr_reset__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_reset__SWIG_1")]
  public static extern void ToolTipRequest_SPtr_reset__SWIG_1(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_get")]
  public static extern IntPtr ToolTipRequest_SPtr_get(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr___ref__")]
  public static extern IntPtr ToolTipRequest_SPtr___ref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr___deref__")]
  public static extern IntPtr ToolTipRequest_SPtr___deref__(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_swap")]
  public static extern void ToolTipRequest_SPtr_swap(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_isNull")]
  public static extern bool ToolTipRequest_SPtr_isNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_isNotNull")]
  public static extern bool ToolTipRequest_SPtr_isNotNull(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_create")]
  public static extern IntPtr ToolTipRequest_SPtr_create(HandleRef jarg1, IntPtr jarg2, int jarg3, int jarg4, int jarg5);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_getMessage")]
  public static extern IntPtr ToolTipRequest_SPtr_getMessage(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_getX")]
  public static extern int ToolTipRequest_SPtr_getX(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_getY")]
  public static extern int ToolTipRequest_SPtr_getY(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_ToolTipRequest_SPtr_getPeriod")]
  public static extern int ToolTipRequest_SPtr_getPeriod(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Clear")]
  public static extern void VectorOfFloat_Clear(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Add")]
  public static extern void VectorOfFloat_Add(HandleRef jarg1, float jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_size")]
  public static extern uint VectorOfFloat_size(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_capacity")]
  public static extern uint VectorOfFloat_capacity(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_reserve")]
  public static extern void VectorOfFloat_reserve(HandleRef jarg1, uint jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_new_VectorOfFloat__SWIG_0")]
  public static extern IntPtr new_VectorOfFloat__SWIG_0();

  [DllImport("view_model_swig", EntryPoint="CSharp_new_VectorOfFloat__SWIG_1")]
  public static extern IntPtr new_VectorOfFloat__SWIG_1(int jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_getitemcopy")]
  public static extern float VectorOfFloat_getitemcopy(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_getitem")]
  public static extern float VectorOfFloat_getitem(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_setitem")]
  public static extern void VectorOfFloat_setitem(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_AddRange")]
  public static extern void VectorOfFloat_AddRange(HandleRef jarg1, HandleRef jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_GetRange")]
  public static extern IntPtr VectorOfFloat_GetRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Insert")]
  public static extern void VectorOfFloat_Insert(HandleRef jarg1, int jarg2, float jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_InsertRange")]
  public static extern void VectorOfFloat_InsertRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_RemoveAt")]
  public static extern void VectorOfFloat_RemoveAt(HandleRef jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_RemoveRange")]
  public static extern void VectorOfFloat_RemoveRange(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Repeat")]
  public static extern IntPtr VectorOfFloat_Repeat(float jarg1, int jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Reverse__SWIG_0")]
  public static extern void VectorOfFloat_Reverse__SWIG_0(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Reverse__SWIG_1")]
  public static extern void VectorOfFloat_Reverse__SWIG_1(HandleRef jarg1, int jarg2, int jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_SetRange")]
  public static extern void VectorOfFloat_SetRange(HandleRef jarg1, int jarg2, HandleRef jarg3);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Contains")]
  public static extern bool VectorOfFloat_Contains(HandleRef jarg1, float jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_IndexOf")]
  public static extern int VectorOfFloat_IndexOf(HandleRef jarg1, float jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_LastIndexOf")]
  public static extern int VectorOfFloat_LastIndexOf(HandleRef jarg1, float jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_VectorOfFloat_Remove")]
  public static extern void VectorOfFloat_Remove(HandleRef jarg1, float jarg2);

  [DllImport("view_model_swig", EntryPoint="CSharp_delete_VectorOfFloat")]
  public static extern void delete_VectorOfFloat(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_camToCookieStr")]
  public static extern IntPtr camToCookieStr(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_DynamicPointerCast_GoToPipelineCommand")]
  public static extern IntPtr DynamicPointerCast_GoToPipelineCommand(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_DynamicPointerCast_Command")]
  public static extern IntPtr DynamicPointerCast_Command(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_DynamicPointerCast_const_GoToPipelineCommand")]
  public static extern IntPtr DynamicPointerCast_const_GoToPipelineCommand(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_DynamicPointerCast_const_Command")]
  public static extern IntPtr DynamicPointerCast_const_Command(HandleRef jarg1);

  [DllImport("view_model_swig", EntryPoint="CSharp_GoToPipelineCommandUpcast")]
  public static extern IntPtr GoToPipelineCommandUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewEventUpcast")]
  public static extern IntPtr ViewEventUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIEventUpcast")]
  public static extern IntPtr UIEventUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIKeyEventUpcast")]
  public static extern IntPtr UIKeyEventUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_UIMouseEventUpcast")]
  public static extern IntPtr UIMouseEventUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_ViewHandleUpcast")]
  public static extern IntPtr ViewHandleUpcast(IntPtr objectRef);

  [DllImport("view_model_swig", EntryPoint="CSharp_AnnotationMouseEventUpcast")]
  public static extern IntPtr AnnotationMouseEventUpcast(IntPtr objectRef);
}
